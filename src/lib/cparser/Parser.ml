open Alphabet
open Cabs
open Datatypes
open Int0
open Int31
open List0
open Main
open Nat
open Specif
open Streams
open Tuples

type __ = Obj.t
let __ = let rec f _ = Obj.repr f in Obj.repr f

module Gram =
 struct
  type terminal' =
  | ADD_ASSIGN't
  | ALIGNAS't
  | ALIGNOF't
  | AND't
  | ANDAND't
  | AND_ASSIGN't
  | ASM't
  | ATTRIBUTE't
  | AUTO't
  | BANG't
  | BAR't
  | BARBAR't
  | BREAK't
  | BUILTIN_OFFSETOF't
  | BUILTIN_VA_ARG't
  | CASE't
  | CHAR't
  | COLON't
  | COMMA't
  | CONST't
  | CONSTANT't
  | CONTINUE't
  | DEC't
  | DEFAULT't
  | DIV_ASSIGN't
  | DO't
  | DOT't
  | DOUBLE't
  | ELLIPSIS't
  | ELSE't
  | ENUM't
  | EOF't
  | EQ't
  | EQEQ't
  | EXTERN't
  | FLOAT't
  | FOR't
  | GEQ't
  | GOTO't
  | GT't
  | HAT't
  | IF't
  | INC't
  | INLINE't
  | INT't
  | LBRACE't
  | LBRACK't
  | LEFT't
  | LEFT_ASSIGN't
  | LEQ't
  | LONG't
  | LPAREN't
  | LT't
  | MINUS't
  | MOD_ASSIGN't
  | MUL_ASSIGN't
  | NEQ't
  | NORETURN't
  | OR_ASSIGN't
  | OTHER_NAME't
  | PACKED't
  | PERCENT't
  | PLUS't
  | PRAGMA't
  | PTR't
  | QUESTION't
  | RBRACE't
  | RBRACK't
  | REGISTER't
  | RESTRICT't
  | RETURN't
  | RIGHT't
  | RIGHT_ASSIGN't
  | RPAREN't
  | SEMICOLON't
  | SHORT't
  | SIGNED't
  | SIZEOF't
  | SLASH't
  | STAR't
  | STATIC't
  | STRING_LITERAL't
  | STRUCT't
  | SUB_ASSIGN't
  | SWITCH't
  | TILDE't
  | TYPEDEF't
  | TYPEDEF_NAME't
  | UNDERSCORE_BOOL't
  | UNION't
  | UNSIGNED't
  | VAR_NAME't
  | VOID't
  | VOLATILE't
  | WHILE't
  | XOR_ASSIGN't

  type terminal = terminal'

  (** val terminalNum : terminal coq_Numbered **)

  let terminalNum =
    { inj = (fun x ->
      match x with
      | ADD_ASSIGN't -> coq_On
      | ALIGNAS't -> coq_In
      | ALIGNOF't -> twice coq_In
      | AND't -> twice_plus_one coq_In
      | ANDAND't -> twice (twice coq_In)
      | AND_ASSIGN't -> twice_plus_one (twice coq_In)
      | ASM't -> twice (twice_plus_one coq_In)
      | ATTRIBUTE't -> twice_plus_one (twice_plus_one coq_In)
      | AUTO't -> twice (twice (twice coq_In))
      | BANG't -> twice_plus_one (twice (twice coq_In))
      | BAR't -> twice (twice_plus_one (twice coq_In))
      | BARBAR't -> twice_plus_one (twice_plus_one (twice coq_In))
      | BREAK't -> twice (twice (twice_plus_one coq_In))
      | BUILTIN_OFFSETOF't -> twice_plus_one (twice (twice_plus_one coq_In))
      | BUILTIN_VA_ARG't -> twice (twice_plus_one (twice_plus_one coq_In))
      | CASE't -> twice_plus_one (twice_plus_one (twice_plus_one coq_In))
      | CHAR't -> twice (twice (twice (twice coq_In)))
      | COLON't -> twice_plus_one (twice (twice (twice coq_In)))
      | COMMA't -> twice (twice_plus_one (twice (twice coq_In)))
      | CONST't -> twice_plus_one (twice_plus_one (twice (twice coq_In)))
      | CONSTANT't -> twice (twice (twice_plus_one (twice coq_In)))
      | CONTINUE't -> twice_plus_one (twice (twice_plus_one (twice coq_In)))
      | DEC't -> twice (twice_plus_one (twice_plus_one (twice coq_In)))
      | DEFAULT't ->
        twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))
      | DIV_ASSIGN't -> twice (twice (twice (twice_plus_one coq_In)))
      | DO't -> twice_plus_one (twice (twice (twice_plus_one coq_In)))
      | DOT't -> twice (twice_plus_one (twice (twice_plus_one coq_In)))
      | DOUBLE't ->
        twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))
      | ELLIPSIS't -> twice (twice (twice_plus_one (twice_plus_one coq_In)))
      | ELSE't ->
        twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))
      | ENUM't ->
        twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | EOF't ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | EQ't -> twice (twice (twice (twice (twice coq_In))))
      | EQEQ't -> twice_plus_one (twice (twice (twice (twice coq_In))))
      | EXTERN't -> twice (twice_plus_one (twice (twice (twice coq_In))))
      | FLOAT't ->
        twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))
      | FOR't -> twice (twice (twice_plus_one (twice (twice coq_In))))
      | GEQ't ->
        twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))
      | GOTO't ->
        twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | GT't ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | HAT't -> twice (twice (twice (twice_plus_one (twice coq_In))))
      | IF't -> twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))
      | INC't ->
        twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | INLINE't ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | INT't ->
        twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | LBRACE't ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | LBRACK't ->
        twice
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | LEFT't ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | LEFT_ASSIGN't -> twice (twice (twice (twice (twice_plus_one coq_In))))
      | LEQ't ->
        twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))
      | LONG't ->
        twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | LPAREN't ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | LT't -> twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | MINUS't ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | MOD_ASSIGN't ->
        twice
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | MUL_ASSIGN't ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | NEQ't ->
        twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | NORETURN't ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | OR_ASSIGN't ->
        twice
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | OTHER_NAME't ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | PACKED't ->
        twice
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | PERCENT't ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | PLUS't ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | PRAGMA't ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | PTR't -> twice (twice (twice (twice (twice (twice coq_In)))))
      | QUESTION't ->
        twice_plus_one (twice (twice (twice (twice (twice coq_In)))))
      | RBRACE't ->
        twice (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | RBRACK't ->
        twice_plus_one (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | REGISTER't ->
        twice (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | RESTRICT't ->
        twice_plus_one (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | RETURN't ->
        twice (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | RIGHT't ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | RIGHT_ASSIGN't ->
        twice (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | RPAREN't ->
        twice_plus_one (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | SEMICOLON't ->
        twice (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | SHORT't ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | SIGNED't ->
        twice (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | SIZEOF't ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | SLASH't ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | STAR't ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | STATIC't ->
        twice (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | STRING_LITERAL't ->
        twice_plus_one (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | STRUCT't ->
        twice (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | SUB_ASSIGN't ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | SWITCH't ->
        twice (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | TILDE't ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | TYPEDEF't ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | TYPEDEF_NAME't ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | UNDERSCORE_BOOL't ->
        twice (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | UNION't ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | UNSIGNED't ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | VAR_NAME't ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | VOID't ->
        twice
          (twice
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | VOLATILE't ->
        twice_plus_one
          (twice
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | WHILE't ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | XOR_ASSIGN't ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))));
      surj = (fun n ->
      Camlcoq.Int31.destr
        (fun d d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 ->
        match d with
        | false ->
          (match d0 with
           | false ->
             (match d1 with
              | false ->
                (match d2 with
                 | false ->
                   (match d3 with
                    | false ->
                      (match d4 with
                       | false ->
                         (match d5 with
                          | false ->
                            (match d6 with
                             | false ->
                               (match d7 with
                                | false ->
                                  (match d8 with
                                   | false ->
                                     (match d9 with
                                      | false ->
                                        (match d10 with
                                         | false ->
                                           (match d11 with
                                            | false ->
                                              (match d12 with
                                               | false ->
                                                 (match d13 with
                                                  | false ->
                                                    (match d14 with
                                                     | false ->
                                                       (match d15 with
                                                        | false ->
                                                          (match d16 with
                                                           | false ->
                                                             (match d17 with
                                                              | false ->
                                                                (match d18 with
                                                                 | false ->
                                                                   (match d19 with
                                                                    | false ->
                                                                    (match d20 with
                                                                    | false ->
                                                                    (match d21 with
                                                                    | false ->
                                                                    (match d22 with
                                                                    | false ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    ADD_ASSIGN't
                                                                    | true ->
                                                                    ALIGNAS't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    ALIGNOF't
                                                                    | true ->
                                                                    AND't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    ANDAND't
                                                                    | true ->
                                                                    AND_ASSIGN't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    ASM't
                                                                    | true ->
                                                                    ATTRIBUTE't)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    AUTO't
                                                                    | true ->
                                                                    BANG't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    BAR't
                                                                    | true ->
                                                                    BARBAR't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    BREAK't
                                                                    | true ->
                                                                    BUILTIN_OFFSETOF't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    BUILTIN_VA_ARG't
                                                                    | true ->
                                                                    CASE't))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    CHAR't
                                                                    | true ->
                                                                    COLON't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    COMMA't
                                                                    | true ->
                                                                    CONST't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    CONSTANT't
                                                                    | true ->
                                                                    CONTINUE't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    DEC't
                                                                    | true ->
                                                                    DEFAULT't)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    DIV_ASSIGN't
                                                                    | true ->
                                                                    DO't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    DOT't
                                                                    | true ->
                                                                    DOUBLE't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    ELLIPSIS't
                                                                    | true ->
                                                                    ELSE't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    ENUM't
                                                                    | true ->
                                                                    EOF't)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    EQ't
                                                                    | true ->
                                                                    EQEQ't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    EXTERN't
                                                                    | true ->
                                                                    FLOAT't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    FOR't
                                                                    | true ->
                                                                    GEQ't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    GOTO't
                                                                    | true ->
                                                                    GT't)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    HAT't
                                                                    | true ->
                                                                    IF't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    INC't
                                                                    | true ->
                                                                    INLINE't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    INT't
                                                                    | true ->
                                                                    LBRACE't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    LBRACK't
                                                                    | true ->
                                                                    LEFT't))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    LEFT_ASSIGN't
                                                                    | true ->
                                                                    LEQ't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    LONG't
                                                                    | true ->
                                                                    LPAREN't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    LT't
                                                                    | true ->
                                                                    MINUS't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    MOD_ASSIGN't
                                                                    | true ->
                                                                    MUL_ASSIGN't)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    NEQ't
                                                                    | true ->
                                                                    NORETURN't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    OR_ASSIGN't
                                                                    | true ->
                                                                    OTHER_NAME't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    PACKED't
                                                                    | true ->
                                                                    PERCENT't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    PLUS't
                                                                    | true ->
                                                                    PRAGMA't))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    PTR't
                                                                    | true ->
                                                                    QUESTION't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    RBRACE't
                                                                    | true ->
                                                                    RBRACK't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    REGISTER't
                                                                    | true ->
                                                                    RESTRICT't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    RETURN't
                                                                    | true ->
                                                                    RIGHT't)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    RIGHT_ASSIGN't
                                                                    | true ->
                                                                    RPAREN't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    SEMICOLON't
                                                                    | true ->
                                                                    SHORT't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    SIGNED't
                                                                    | true ->
                                                                    SIZEOF't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    SLASH't
                                                                    | true ->
                                                                    STAR't))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    STATIC't
                                                                    | true ->
                                                                    STRING_LITERAL't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    STRUCT't
                                                                    | true ->
                                                                    SUB_ASSIGN't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    SWITCH't
                                                                    | true ->
                                                                    TILDE't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    TYPEDEF't
                                                                    | true ->
                                                                    TYPEDEF_NAME't)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    UNDERSCORE_BOOL't
                                                                    | true ->
                                                                    UNION't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    UNSIGNED't
                                                                    | true ->
                                                                    VAR_NAME't))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    VOID't
                                                                    | true ->
                                                                    VOLATILE't)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    WHILE't
                                                                    | true ->
                                                                    XOR_ASSIGN't)))))
                                                                    | true ->
                                                                    ADD_ASSIGN't))
                                                                    | true ->
                                                                    ADD_ASSIGN't)
                                                                    | true ->
                                                                    ADD_ASSIGN't)
                                                                    | true ->
                                                                    ADD_ASSIGN't)
                                                                    | true ->
                                                                    ADD_ASSIGN't)
                                                                 | true ->
                                                                   ADD_ASSIGN't)
                                                              | true ->
                                                                ADD_ASSIGN't)
                                                           | true ->
                                                             ADD_ASSIGN't)
                                                        | true -> ADD_ASSIGN't)
                                                     | true -> ADD_ASSIGN't)
                                                  | true -> ADD_ASSIGN't)
                                               | true -> ADD_ASSIGN't)
                                            | true -> ADD_ASSIGN't)
                                         | true -> ADD_ASSIGN't)
                                      | true -> ADD_ASSIGN't)
                                   | true -> ADD_ASSIGN't)
                                | true -> ADD_ASSIGN't)
                             | true -> ADD_ASSIGN't)
                          | true -> ADD_ASSIGN't)
                       | true -> ADD_ASSIGN't)
                    | true -> ADD_ASSIGN't)
                 | true -> ADD_ASSIGN't)
              | true -> ADD_ASSIGN't)
           | true -> ADD_ASSIGN't)
        | true -> ADD_ASSIGN't)
        n); inj_bound = (Camlcoq.Int31.constr (false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      true, true, false, false, false, false, false)) }

  (** val coq_TerminalAlph : terminal coq_Alphabet **)

  let coq_TerminalAlph =
    coq_NumberedAlphabet terminalNum

  type nonterminal' =
  | AND_expression'nt
  | Coq_abstract_declarator'nt
  | Coq_additive_expression'nt
  | Coq_argument_expression_list'nt
  | Coq_asm_arguments'nt
  | Coq_asm_attributes'nt
  | Coq_asm_flags'nt
  | Coq_asm_op_name'nt
  | Coq_asm_operand'nt
  | Coq_asm_operands'nt
  | Coq_asm_operands_ne'nt
  | Coq_asm_statement'nt
  | Coq_assignment_expression'nt
  | Coq_assignment_operator'nt
  | Coq_attribute_specifier'nt
  | Coq_attribute_specifier_list'nt
  | Coq_block_item'nt
  | Coq_block_item_list'nt
  | Coq_c_initializer'nt
  | Coq_cast_expression'nt
  | Coq_compound_statement'nt
  | Coq_conditional_expression'nt
  | Coq_constant_expression'nt
  | Coq_declaration'nt
  | Coq_declaration_list'nt
  | Coq_declaration_specifiers'nt
  | Coq_declaration_specifiers_typespec_opt'nt
  | Coq_declarator'nt
  | Coq_declarator_noattrend'nt
  | Coq_designation'nt
  | Coq_designator'nt
  | Coq_designator_list'nt
  | Coq_direct_abstract_declarator'nt
  | Coq_direct_declarator'nt
  | Coq_enum_specifier'nt
  | Coq_enumeration_constant'nt
  | Coq_enumerator'nt
  | Coq_enumerator_list'nt
  | Coq_equality_expression'nt
  | Coq_exclusive_OR_expression'nt
  | Coq_expression'nt
  | Coq_expression_statement'nt
  | Coq_external_declaration'nt
  | Coq_function_definition'nt
  | Coq_function_specifier'nt
  | Coq_gcc_attribute'nt
  | Coq_gcc_attribute_list'nt
  | Coq_gcc_attribute_word'nt
  | Coq_identifier_list'nt
  | Coq_inclusive_OR_expression'nt
  | Coq_init_declarator'nt
  | Coq_init_declarator_list'nt
  | Coq_initializer_list'nt
  | Coq_iteration_statement_statement_dangerous_'nt
  | Coq_iteration_statement_statement_safe_'nt
  | Coq_jump_statement'nt
  | Coq_labeled_statement_statement_dangerous_'nt
  | Coq_labeled_statement_statement_safe_'nt
  | Coq_logical_AND_expression'nt
  | Coq_logical_OR_expression'nt
  | Coq_multiplicative_expression'nt
  | Coq_parameter_declaration'nt
  | Coq_parameter_list'nt
  | Coq_parameter_type_list'nt
  | Coq_pointer'nt
  | Coq_postfix_expression'nt
  | Coq_primary_expression'nt
  | Coq_relational_expression'nt
  | Coq_selection_statement_dangerous'nt
  | Coq_selection_statement_safe'nt
  | Coq_shift_expression'nt
  | Coq_specifier_qualifier_list'nt
  | Coq_statement_dangerous'nt
  | Coq_statement_safe'nt
  | Coq_storage_class_specifier'nt
  | Coq_struct_declaration'nt
  | Coq_struct_declaration_list'nt
  | Coq_struct_declarator'nt
  | Coq_struct_declarator_list'nt
  | Coq_struct_or_union'nt
  | Coq_struct_or_union_specifier'nt
  | Coq_translation_unit'nt
  | Coq_translation_unit_file'nt
  | Coq_type_name'nt
  | Coq_type_qualifier'nt
  | Coq_type_qualifier_list'nt
  | Coq_type_qualifier_noattr'nt
  | Coq_type_specifier'nt
  | Coq_unary_expression'nt
  | Coq_unary_operator'nt

  type nonterminal = nonterminal'

  (** val nonterminalNum : nonterminal coq_Numbered **)

  let nonterminalNum =
    { inj = (fun x ->
      match x with
      | AND_expression'nt -> coq_On
      | Coq_abstract_declarator'nt -> coq_In
      | Coq_additive_expression'nt -> twice coq_In
      | Coq_argument_expression_list'nt -> twice_plus_one coq_In
      | Coq_asm_arguments'nt -> twice (twice coq_In)
      | Coq_asm_attributes'nt -> twice_plus_one (twice coq_In)
      | Coq_asm_flags'nt -> twice (twice_plus_one coq_In)
      | Coq_asm_op_name'nt -> twice_plus_one (twice_plus_one coq_In)
      | Coq_asm_operand'nt -> twice (twice (twice coq_In))
      | Coq_asm_operands'nt -> twice_plus_one (twice (twice coq_In))
      | Coq_asm_operands_ne'nt -> twice (twice_plus_one (twice coq_In))
      | Coq_asm_statement'nt -> twice_plus_one (twice_plus_one (twice coq_In))
      | Coq_assignment_expression'nt -> twice (twice (twice_plus_one coq_In))
      | Coq_assignment_operator'nt ->
        twice_plus_one (twice (twice_plus_one coq_In))
      | Coq_attribute_specifier'nt ->
        twice (twice_plus_one (twice_plus_one coq_In))
      | Coq_attribute_specifier_list'nt ->
        twice_plus_one (twice_plus_one (twice_plus_one coq_In))
      | Coq_block_item'nt -> twice (twice (twice (twice coq_In)))
      | Coq_block_item_list'nt ->
        twice_plus_one (twice (twice (twice coq_In)))
      | Coq_c_initializer'nt -> twice (twice_plus_one (twice (twice coq_In)))
      | Coq_cast_expression'nt ->
        twice_plus_one (twice_plus_one (twice (twice coq_In)))
      | Coq_compound_statement'nt ->
        twice (twice (twice_plus_one (twice coq_In)))
      | Coq_conditional_expression'nt ->
        twice_plus_one (twice (twice_plus_one (twice coq_In)))
      | Coq_constant_expression'nt ->
        twice (twice_plus_one (twice_plus_one (twice coq_In)))
      | Coq_declaration'nt ->
        twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))
      | Coq_declaration_list'nt ->
        twice (twice (twice (twice_plus_one coq_In)))
      | Coq_declaration_specifiers'nt ->
        twice_plus_one (twice (twice (twice_plus_one coq_In)))
      | Coq_declaration_specifiers_typespec_opt'nt ->
        twice (twice_plus_one (twice (twice_plus_one coq_In)))
      | Coq_declarator'nt ->
        twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))
      | Coq_declarator_noattrend'nt ->
        twice (twice (twice_plus_one (twice_plus_one coq_In)))
      | Coq_designation'nt ->
        twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))
      | Coq_designator'nt ->
        twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | Coq_designator_list'nt ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | Coq_direct_abstract_declarator'nt ->
        twice (twice (twice (twice (twice coq_In))))
      | Coq_direct_declarator'nt ->
        twice_plus_one (twice (twice (twice (twice coq_In))))
      | Coq_enum_specifier'nt ->
        twice (twice_plus_one (twice (twice (twice coq_In))))
      | Coq_enumeration_constant'nt ->
        twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))
      | Coq_enumerator'nt ->
        twice (twice (twice_plus_one (twice (twice coq_In))))
      | Coq_enumerator_list'nt ->
        twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))
      | Coq_equality_expression'nt ->
        twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | Coq_exclusive_OR_expression'nt ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | Coq_expression'nt ->
        twice (twice (twice (twice_plus_one (twice coq_In))))
      | Coq_expression_statement'nt ->
        twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))
      | Coq_external_declaration'nt ->
        twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | Coq_function_definition'nt ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | Coq_function_specifier'nt ->
        twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | Coq_gcc_attribute'nt ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | Coq_gcc_attribute_list'nt ->
        twice
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | Coq_gcc_attribute_word'nt ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | Coq_identifier_list'nt ->
        twice (twice (twice (twice (twice_plus_one coq_In))))
      | Coq_inclusive_OR_expression'nt ->
        twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))
      | Coq_init_declarator'nt ->
        twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | Coq_init_declarator_list'nt ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | Coq_initializer_list'nt ->
        twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | Coq_iteration_statement_statement_dangerous_'nt ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | Coq_iteration_statement_statement_safe_'nt ->
        twice
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | Coq_jump_statement'nt ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | Coq_labeled_statement_statement_dangerous_'nt ->
        twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | Coq_labeled_statement_statement_safe_'nt ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | Coq_logical_AND_expression'nt ->
        twice
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | Coq_logical_OR_expression'nt ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | Coq_multiplicative_expression'nt ->
        twice
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Coq_parameter_declaration'nt ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Coq_parameter_list'nt ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Coq_parameter_type_list'nt ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Coq_pointer'nt -> twice (twice (twice (twice (twice (twice coq_In)))))
      | Coq_postfix_expression'nt ->
        twice_plus_one (twice (twice (twice (twice (twice coq_In)))))
      | Coq_primary_expression'nt ->
        twice (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | Coq_relational_expression'nt ->
        twice_plus_one (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | Coq_selection_statement_dangerous'nt ->
        twice (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | Coq_selection_statement_safe'nt ->
        twice_plus_one (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | Coq_shift_expression'nt ->
        twice (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | Coq_specifier_qualifier_list'nt ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | Coq_statement_dangerous'nt ->
        twice (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | Coq_statement_safe'nt ->
        twice_plus_one (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | Coq_storage_class_specifier'nt ->
        twice (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | Coq_struct_declaration'nt ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | Coq_struct_declaration_list'nt ->
        twice (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Coq_struct_declarator'nt ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Coq_struct_declarator_list'nt ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Coq_struct_or_union'nt ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Coq_struct_or_union_specifier'nt ->
        twice (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | Coq_translation_unit'nt ->
        twice_plus_one (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | Coq_translation_unit_file'nt ->
        twice (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | Coq_type_name'nt ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | Coq_type_qualifier'nt ->
        twice (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Coq_type_qualifier_list'nt ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Coq_type_qualifier_noattr'nt ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Coq_type_specifier'nt ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Coq_unary_expression'nt ->
        twice (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Coq_unary_operator'nt ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))));
      surj = (fun n ->
      Camlcoq.Int31.destr
        (fun d d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 ->
        match d with
        | false ->
          (match d0 with
           | false ->
             (match d1 with
              | false ->
                (match d2 with
                 | false ->
                   (match d3 with
                    | false ->
                      (match d4 with
                       | false ->
                         (match d5 with
                          | false ->
                            (match d6 with
                             | false ->
                               (match d7 with
                                | false ->
                                  (match d8 with
                                   | false ->
                                     (match d9 with
                                      | false ->
                                        (match d10 with
                                         | false ->
                                           (match d11 with
                                            | false ->
                                              (match d12 with
                                               | false ->
                                                 (match d13 with
                                                  | false ->
                                                    (match d14 with
                                                     | false ->
                                                       (match d15 with
                                                        | false ->
                                                          (match d16 with
                                                           | false ->
                                                             (match d17 with
                                                              | false ->
                                                                (match d18 with
                                                                 | false ->
                                                                   (match d19 with
                                                                    | false ->
                                                                    (match d20 with
                                                                    | false ->
                                                                    (match d21 with
                                                                    | false ->
                                                                    (match d22 with
                                                                    | false ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    AND_expression'nt
                                                                    | true ->
                                                                    Coq_abstract_declarator'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_additive_expression'nt
                                                                    | true ->
                                                                    Coq_argument_expression_list'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_asm_arguments'nt
                                                                    | true ->
                                                                    Coq_asm_attributes'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_asm_flags'nt
                                                                    | true ->
                                                                    Coq_asm_op_name'nt)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_asm_operand'nt
                                                                    | true ->
                                                                    Coq_asm_operands'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_asm_operands_ne'nt
                                                                    | true ->
                                                                    Coq_asm_statement'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_assignment_expression'nt
                                                                    | true ->
                                                                    Coq_assignment_operator'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_attribute_specifier'nt
                                                                    | true ->
                                                                    Coq_attribute_specifier_list'nt))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_block_item'nt
                                                                    | true ->
                                                                    Coq_block_item_list'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_c_initializer'nt
                                                                    | true ->
                                                                    Coq_cast_expression'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_compound_statement'nt
                                                                    | true ->
                                                                    Coq_conditional_expression'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_constant_expression'nt
                                                                    | true ->
                                                                    Coq_declaration'nt)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_declaration_list'nt
                                                                    | true ->
                                                                    Coq_declaration_specifiers'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_declaration_specifiers_typespec_opt'nt
                                                                    | true ->
                                                                    Coq_declarator'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_declarator_noattrend'nt
                                                                    | true ->
                                                                    Coq_designation'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_designator'nt
                                                                    | true ->
                                                                    Coq_designator_list'nt)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_direct_abstract_declarator'nt
                                                                    | true ->
                                                                    Coq_direct_declarator'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_enum_specifier'nt
                                                                    | true ->
                                                                    Coq_enumeration_constant'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_enumerator'nt
                                                                    | true ->
                                                                    Coq_enumerator_list'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_equality_expression'nt
                                                                    | true ->
                                                                    Coq_exclusive_OR_expression'nt)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_expression'nt
                                                                    | true ->
                                                                    Coq_expression_statement'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_external_declaration'nt
                                                                    | true ->
                                                                    Coq_function_definition'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_function_specifier'nt
                                                                    | true ->
                                                                    Coq_gcc_attribute'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_gcc_attribute_list'nt
                                                                    | true ->
                                                                    Coq_gcc_attribute_word'nt))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_identifier_list'nt
                                                                    | true ->
                                                                    Coq_inclusive_OR_expression'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_init_declarator'nt
                                                                    | true ->
                                                                    Coq_init_declarator_list'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_initializer_list'nt
                                                                    | true ->
                                                                    Coq_iteration_statement_statement_dangerous_'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_iteration_statement_statement_safe_'nt
                                                                    | true ->
                                                                    Coq_jump_statement'nt)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_labeled_statement_statement_dangerous_'nt
                                                                    | true ->
                                                                    Coq_labeled_statement_statement_safe_'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_logical_AND_expression'nt
                                                                    | true ->
                                                                    Coq_logical_OR_expression'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_multiplicative_expression'nt
                                                                    | true ->
                                                                    Coq_parameter_declaration'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_parameter_list'nt
                                                                    | true ->
                                                                    Coq_parameter_type_list'nt))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_pointer'nt
                                                                    | true ->
                                                                    Coq_postfix_expression'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_primary_expression'nt
                                                                    | true ->
                                                                    Coq_relational_expression'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_selection_statement_dangerous'nt
                                                                    | true ->
                                                                    Coq_selection_statement_safe'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_shift_expression'nt
                                                                    | true ->
                                                                    Coq_specifier_qualifier_list'nt)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_statement_dangerous'nt
                                                                    | true ->
                                                                    Coq_statement_safe'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_storage_class_specifier'nt
                                                                    | true ->
                                                                    Coq_struct_declaration'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_struct_declaration_list'nt
                                                                    | true ->
                                                                    Coq_struct_declarator'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_struct_declarator_list'nt
                                                                    | true ->
                                                                    Coq_struct_or_union'nt))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_struct_or_union_specifier'nt
                                                                    | true ->
                                                                    Coq_translation_unit'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_translation_unit_file'nt
                                                                    | true ->
                                                                    Coq_type_name'nt))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_type_qualifier'nt
                                                                    | true ->
                                                                    Coq_type_qualifier_list'nt)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_type_qualifier_noattr'nt
                                                                    | true ->
                                                                    Coq_type_specifier'nt)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Coq_unary_expression'nt
                                                                    | true ->
                                                                    Coq_unary_operator'nt)
                                                                    | true ->
                                                                    AND_expression'nt)
                                                                    | true ->
                                                                    AND_expression'nt)))
                                                                    | true ->
                                                                    AND_expression'nt))
                                                                    | true ->
                                                                    AND_expression'nt)
                                                                    | true ->
                                                                    AND_expression'nt)
                                                                    | true ->
                                                                    AND_expression'nt)
                                                                    | true ->
                                                                    AND_expression'nt)
                                                                 | true ->
                                                                   AND_expression'nt)
                                                              | true ->
                                                                AND_expression'nt)
                                                           | true ->
                                                             AND_expression'nt)
                                                        | true ->
                                                          AND_expression'nt)
                                                     | true ->
                                                       AND_expression'nt)
                                                  | true -> AND_expression'nt)
                                               | true -> AND_expression'nt)
                                            | true -> AND_expression'nt)
                                         | true -> AND_expression'nt)
                                      | true -> AND_expression'nt)
                                   | true -> AND_expression'nt)
                                | true -> AND_expression'nt)
                             | true -> AND_expression'nt)
                          | true -> AND_expression'nt)
                       | true -> AND_expression'nt)
                    | true -> AND_expression'nt)
                 | true -> AND_expression'nt)
              | true -> AND_expression'nt)
           | true -> AND_expression'nt)
        | true -> AND_expression'nt)
        n); inj_bound = (Camlcoq.Int31.constr (false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      true, false, true, true, false, true, false)) }

  (** val coq_NonTerminalAlph : nonterminal coq_Alphabet **)

  let coq_NonTerminalAlph =
    coq_NumberedAlphabet nonterminalNum

  type symbol =
  | T of terminal
  | NT of nonterminal

  (** val symbol_rect :
      (terminal -> 'a1) -> (nonterminal -> 'a1) -> symbol -> 'a1 **)

  let symbol_rect f f0 = function
  | T x -> f x
  | NT x -> f0 x

  (** val symbol_rec :
      (terminal -> 'a1) -> (nonterminal -> 'a1) -> symbol -> 'a1 **)

  let symbol_rec f f0 = function
  | T x -> f x
  | NT x -> f0 x

  (** val coq_SymbolAlph : symbol coq_Alphabet **)

  let coq_SymbolAlph =
    { coq_AlphabetComparable = (fun x y ->
      match x with
      | T x0 ->
        (match y with
         | T y0 -> compare coq_TerminalAlph.coq_AlphabetComparable x0 y0
         | NT _ -> Gt)
      | NT x0 ->
        (match y with
         | T _ -> Lt
         | NT y0 -> compare coq_NonTerminalAlph.coq_AlphabetComparable x0 y0));
      coq_AlphabetFinite =
      (app
        (map (fun x -> T x) (all_list coq_TerminalAlph.coq_AlphabetFinite))
        (map (fun x -> NT x)
          (all_list coq_NonTerminalAlph.coq_AlphabetFinite))) }

  type terminal_semantic_type = __

  type nonterminal_semantic_type = __

  type symbol_semantic_type = __

  type production' =
  | Prod'unary_operator'5
  | Prod'unary_operator'4
  | Prod'unary_operator'3
  | Prod'unary_operator'2
  | Prod'unary_operator'1
  | Prod'unary_operator'0
  | Prod'unary_expression'7
  | Prod'unary_expression'6
  | Prod'unary_expression'5
  | Prod'unary_expression'4
  | Prod'unary_expression'3
  | Prod'unary_expression'2
  | Prod'unary_expression'1
  | Prod'unary_expression'0
  | Prod'type_specifier'12
  | Prod'type_specifier'11
  | Prod'type_specifier'10
  | Prod'type_specifier'9
  | Prod'type_specifier'8
  | Prod'type_specifier'7
  | Prod'type_specifier'6
  | Prod'type_specifier'5
  | Prod'type_specifier'4
  | Prod'type_specifier'3
  | Prod'type_specifier'2
  | Prod'type_specifier'1
  | Prod'type_specifier'0
  | Prod'type_qualifier_noattr'2
  | Prod'type_qualifier_noattr'1
  | Prod'type_qualifier_noattr'0
  | Prod'type_qualifier_list'1
  | Prod'type_qualifier_list'0
  | Prod'type_qualifier'1
  | Prod'type_qualifier'0
  | Prod'type_name'1
  | Prod'type_name'0
  | Prod'translation_unit_file'1
  | Prod'translation_unit_file'0
  | Prod'translation_unit'3
  | Prod'translation_unit'2
  | Prod'translation_unit'1
  | Prod'translation_unit'0
  | Prod'struct_or_union_specifier'2
  | Prod'struct_or_union_specifier'1
  | Prod'struct_or_union_specifier'0
  | Prod'struct_or_union'1
  | Prod'struct_or_union'0
  | Prod'struct_declarator_list'1
  | Prod'struct_declarator_list'0
  | Prod'struct_declarator'2
  | Prod'struct_declarator'1
  | Prod'struct_declarator'0
  | Prod'struct_declaration_list'1
  | Prod'struct_declaration_list'0
  | Prod'struct_declaration'1
  | Prod'struct_declaration'0
  | Prod'storage_class_specifier'4
  | Prod'storage_class_specifier'3
  | Prod'storage_class_specifier'2
  | Prod'storage_class_specifier'1
  | Prod'storage_class_specifier'0
  | Prod'statement_safe'6
  | Prod'statement_safe'5
  | Prod'statement_safe'4
  | Prod'statement_safe'3
  | Prod'statement_safe'2
  | Prod'statement_safe'1
  | Prod'statement_safe'0
  | Prod'statement_dangerous'6
  | Prod'statement_dangerous'5
  | Prod'statement_dangerous'4
  | Prod'statement_dangerous'3
  | Prod'statement_dangerous'2
  | Prod'statement_dangerous'1
  | Prod'statement_dangerous'0
  | Prod'specifier_qualifier_list'3
  | Prod'specifier_qualifier_list'2
  | Prod'specifier_qualifier_list'1
  | Prod'specifier_qualifier_list'0
  | Prod'shift_expression'2
  | Prod'shift_expression'1
  | Prod'shift_expression'0
  | Prod'selection_statement_safe'1
  | Prod'selection_statement_safe'0
  | Prod'selection_statement_dangerous'2
  | Prod'selection_statement_dangerous'1
  | Prod'selection_statement_dangerous'0
  | Prod'relational_expression'4
  | Prod'relational_expression'3
  | Prod'relational_expression'2
  | Prod'relational_expression'1
  | Prod'relational_expression'0
  | Prod'primary_expression'3
  | Prod'primary_expression'2
  | Prod'primary_expression'1
  | Prod'primary_expression'0
  | Prod'postfix_expression'12
  | Prod'postfix_expression'11
  | Prod'postfix_expression'10
  | Prod'postfix_expression'9
  | Prod'postfix_expression'8
  | Prod'postfix_expression'7
  | Prod'postfix_expression'6
  | Prod'postfix_expression'5
  | Prod'postfix_expression'4
  | Prod'postfix_expression'3
  | Prod'postfix_expression'2
  | Prod'postfix_expression'1
  | Prod'postfix_expression'0
  | Prod'pointer'3
  | Prod'pointer'2
  | Prod'pointer'1
  | Prod'pointer'0
  | Prod'parameter_type_list'1
  | Prod'parameter_type_list'0
  | Prod'parameter_list'1
  | Prod'parameter_list'0
  | Prod'parameter_declaration'2
  | Prod'parameter_declaration'1
  | Prod'parameter_declaration'0
  | Prod'multiplicative_expression'3
  | Prod'multiplicative_expression'2
  | Prod'multiplicative_expression'1
  | Prod'multiplicative_expression'0
  | Prod'logical_OR_expression'1
  | Prod'logical_OR_expression'0
  | Prod'logical_AND_expression'1
  | Prod'logical_AND_expression'0
  | Prod'labeled_statement_statement_safe_'2
  | Prod'labeled_statement_statement_safe_'1
  | Prod'labeled_statement_statement_safe_'0
  | Prod'labeled_statement_statement_dangerous_'2
  | Prod'labeled_statement_statement_dangerous_'1
  | Prod'labeled_statement_statement_dangerous_'0
  | Prod'jump_statement'4
  | Prod'jump_statement'3
  | Prod'jump_statement'2
  | Prod'jump_statement'1
  | Prod'jump_statement'0
  | Prod'iteration_statement_statement_safe_'13
  | Prod'iteration_statement_statement_safe_'12
  | Prod'iteration_statement_statement_safe_'11
  | Prod'iteration_statement_statement_safe_'10
  | Prod'iteration_statement_statement_safe_'9
  | Prod'iteration_statement_statement_safe_'8
  | Prod'iteration_statement_statement_safe_'7
  | Prod'iteration_statement_statement_safe_'6
  | Prod'iteration_statement_statement_safe_'5
  | Prod'iteration_statement_statement_safe_'4
  | Prod'iteration_statement_statement_safe_'3
  | Prod'iteration_statement_statement_safe_'2
  | Prod'iteration_statement_statement_safe_'1
  | Prod'iteration_statement_statement_safe_'0
  | Prod'iteration_statement_statement_dangerous_'13
  | Prod'iteration_statement_statement_dangerous_'12
  | Prod'iteration_statement_statement_dangerous_'11
  | Prod'iteration_statement_statement_dangerous_'10
  | Prod'iteration_statement_statement_dangerous_'9
  | Prod'iteration_statement_statement_dangerous_'8
  | Prod'iteration_statement_statement_dangerous_'7
  | Prod'iteration_statement_statement_dangerous_'6
  | Prod'iteration_statement_statement_dangerous_'5
  | Prod'iteration_statement_statement_dangerous_'4
  | Prod'iteration_statement_statement_dangerous_'3
  | Prod'iteration_statement_statement_dangerous_'2
  | Prod'iteration_statement_statement_dangerous_'1
  | Prod'iteration_statement_statement_dangerous_'0
  | Prod'initializer_list'3
  | Prod'initializer_list'2
  | Prod'initializer_list'1
  | Prod'initializer_list'0
  | Prod'init_declarator_list'1
  | Prod'init_declarator_list'0
  | Prod'init_declarator'1
  | Prod'init_declarator'0
  | Prod'inclusive_OR_expression'1
  | Prod'inclusive_OR_expression'0
  | Prod'identifier_list'1
  | Prod'identifier_list'0
  | Prod'gcc_attribute_word'2
  | Prod'gcc_attribute_word'1
  | Prod'gcc_attribute_word'0
  | Prod'gcc_attribute_list'1
  | Prod'gcc_attribute_list'0
  | Prod'gcc_attribute'3
  | Prod'gcc_attribute'2
  | Prod'gcc_attribute'1
  | Prod'gcc_attribute'0
  | Prod'function_specifier'1
  | Prod'function_specifier'0
  | Prod'function_definition'1
  | Prod'function_definition'0
  | Prod'external_declaration'2
  | Prod'external_declaration'1
  | Prod'external_declaration'0
  | Prod'expression_statement'1
  | Prod'expression_statement'0
  | Prod'expression'1
  | Prod'expression'0
  | Prod'exclusive_OR_expression'1
  | Prod'exclusive_OR_expression'0
  | Prod'equality_expression'2
  | Prod'equality_expression'1
  | Prod'equality_expression'0
  | Prod'enumerator_list'1
  | Prod'enumerator_list'0
  | Prod'enumerator'1
  | Prod'enumerator'0
  | Prod'enumeration_constant'0
  | Prod'enum_specifier'4
  | Prod'enum_specifier'3
  | Prod'enum_specifier'2
  | Prod'enum_specifier'1
  | Prod'enum_specifier'0
  | Prod'direct_declarator'8
  | Prod'direct_declarator'7
  | Prod'direct_declarator'6
  | Prod'direct_declarator'5
  | Prod'direct_declarator'4
  | Prod'direct_declarator'3
  | Prod'direct_declarator'2
  | Prod'direct_declarator'1
  | Prod'direct_declarator'0
  | Prod'direct_abstract_declarator'12
  | Prod'direct_abstract_declarator'11
  | Prod'direct_abstract_declarator'10
  | Prod'direct_abstract_declarator'9
  | Prod'direct_abstract_declarator'8
  | Prod'direct_abstract_declarator'7
  | Prod'direct_abstract_declarator'6
  | Prod'direct_abstract_declarator'5
  | Prod'direct_abstract_declarator'4
  | Prod'direct_abstract_declarator'3
  | Prod'direct_abstract_declarator'2
  | Prod'direct_abstract_declarator'1
  | Prod'direct_abstract_declarator'0
  | Prod'designator_list'1
  | Prod'designator_list'0
  | Prod'designator'1
  | Prod'designator'0
  | Prod'designation'0
  | Prod'declarator_noattrend'1
  | Prod'declarator_noattrend'0
  | Prod'declarator'0
  | Prod'declaration_specifiers_typespec_opt'4
  | Prod'declaration_specifiers_typespec_opt'3
  | Prod'declaration_specifiers_typespec_opt'2
  | Prod'declaration_specifiers_typespec_opt'1
  | Prod'declaration_specifiers_typespec_opt'0
  | Prod'declaration_specifiers'4
  | Prod'declaration_specifiers'3
  | Prod'declaration_specifiers'2
  | Prod'declaration_specifiers'1
  | Prod'declaration_specifiers'0
  | Prod'declaration_list'1
  | Prod'declaration_list'0
  | Prod'declaration'1
  | Prod'declaration'0
  | Prod'constant_expression'0
  | Prod'conditional_expression'1
  | Prod'conditional_expression'0
  | Prod'compound_statement'1
  | Prod'compound_statement'0
  | Prod'cast_expression'1
  | Prod'cast_expression'0
  | Prod'c_initializer'2
  | Prod'c_initializer'1
  | Prod'c_initializer'0
  | Prod'block_item_list'1
  | Prod'block_item_list'0
  | Prod'block_item'2
  | Prod'block_item'1
  | Prod'block_item'0
  | Prod'attribute_specifier_list'1
  | Prod'attribute_specifier_list'0
  | Prod'attribute_specifier'3
  | Prod'attribute_specifier'2
  | Prod'attribute_specifier'1
  | Prod'attribute_specifier'0
  | Prod'assignment_operator'10
  | Prod'assignment_operator'9
  | Prod'assignment_operator'8
  | Prod'assignment_operator'7
  | Prod'assignment_operator'6
  | Prod'assignment_operator'5
  | Prod'assignment_operator'4
  | Prod'assignment_operator'3
  | Prod'assignment_operator'2
  | Prod'assignment_operator'1
  | Prod'assignment_operator'0
  | Prod'assignment_expression'1
  | Prod'assignment_expression'0
  | Prod'asm_statement'0
  | Prod'asm_operands_ne'1
  | Prod'asm_operands_ne'0
  | Prod'asm_operands'1
  | Prod'asm_operands'0
  | Prod'asm_operand'0
  | Prod'asm_op_name'1
  | Prod'asm_op_name'0
  | Prod'asm_flags'1
  | Prod'asm_flags'0
  | Prod'asm_attributes'2
  | Prod'asm_attributes'1
  | Prod'asm_attributes'0
  | Prod'asm_arguments'3
  | Prod'asm_arguments'2
  | Prod'asm_arguments'1
  | Prod'asm_arguments'0
  | Prod'argument_expression_list'1
  | Prod'argument_expression_list'0
  | Prod'additive_expression'2
  | Prod'additive_expression'1
  | Prod'additive_expression'0
  | Prod'abstract_declarator'2
  | Prod'abstract_declarator'1
  | Prod'abstract_declarator'0
  | Prod'AND_expression'1
  | Prod'AND_expression'0

  type production = production'

  (** val productionNum : production coq_Numbered **)

  let productionNum =
    { inj = (fun x ->
      match x with
      | Prod'unary_operator'5 -> coq_On
      | Prod'unary_operator'4 -> coq_In
      | Prod'unary_operator'3 -> twice coq_In
      | Prod'unary_operator'2 -> twice_plus_one coq_In
      | Prod'unary_operator'1 -> twice (twice coq_In)
      | Prod'unary_operator'0 -> twice_plus_one (twice coq_In)
      | Prod'unary_expression'7 -> twice (twice_plus_one coq_In)
      | Prod'unary_expression'6 -> twice_plus_one (twice_plus_one coq_In)
      | Prod'unary_expression'5 -> twice (twice (twice coq_In))
      | Prod'unary_expression'4 -> twice_plus_one (twice (twice coq_In))
      | Prod'unary_expression'3 -> twice (twice_plus_one (twice coq_In))
      | Prod'unary_expression'2 ->
        twice_plus_one (twice_plus_one (twice coq_In))
      | Prod'unary_expression'1 -> twice (twice (twice_plus_one coq_In))
      | Prod'unary_expression'0 ->
        twice_plus_one (twice (twice_plus_one coq_In))
      | Prod'type_specifier'12 ->
        twice (twice_plus_one (twice_plus_one coq_In))
      | Prod'type_specifier'11 ->
        twice_plus_one (twice_plus_one (twice_plus_one coq_In))
      | Prod'type_specifier'10 -> twice (twice (twice (twice coq_In)))
      | Prod'type_specifier'9 -> twice_plus_one (twice (twice (twice coq_In)))
      | Prod'type_specifier'8 -> twice (twice_plus_one (twice (twice coq_In)))
      | Prod'type_specifier'7 ->
        twice_plus_one (twice_plus_one (twice (twice coq_In)))
      | Prod'type_specifier'6 -> twice (twice (twice_plus_one (twice coq_In)))
      | Prod'type_specifier'5 ->
        twice_plus_one (twice (twice_plus_one (twice coq_In)))
      | Prod'type_specifier'4 ->
        twice (twice_plus_one (twice_plus_one (twice coq_In)))
      | Prod'type_specifier'3 ->
        twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))
      | Prod'type_specifier'2 -> twice (twice (twice (twice_plus_one coq_In)))
      | Prod'type_specifier'1 ->
        twice_plus_one (twice (twice (twice_plus_one coq_In)))
      | Prod'type_specifier'0 ->
        twice (twice_plus_one (twice (twice_plus_one coq_In)))
      | Prod'type_qualifier_noattr'2 ->
        twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))
      | Prod'type_qualifier_noattr'1 ->
        twice (twice (twice_plus_one (twice_plus_one coq_In)))
      | Prod'type_qualifier_noattr'0 ->
        twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))
      | Prod'type_qualifier_list'1 ->
        twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | Prod'type_qualifier_list'0 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | Prod'type_qualifier'1 -> twice (twice (twice (twice (twice coq_In))))
      | Prod'type_qualifier'0 ->
        twice_plus_one (twice (twice (twice (twice coq_In))))
      | Prod'type_name'1 ->
        twice (twice_plus_one (twice (twice (twice coq_In))))
      | Prod'type_name'0 ->
        twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))
      | Prod'translation_unit_file'1 ->
        twice (twice (twice_plus_one (twice (twice coq_In))))
      | Prod'translation_unit_file'0 ->
        twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))
      | Prod'translation_unit'3 ->
        twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | Prod'translation_unit'2 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | Prod'translation_unit'1 ->
        twice (twice (twice (twice_plus_one (twice coq_In))))
      | Prod'translation_unit'0 ->
        twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))
      | Prod'struct_or_union_specifier'2 ->
        twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | Prod'struct_or_union_specifier'1 ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | Prod'struct_or_union_specifier'0 ->
        twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | Prod'struct_or_union'1 ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | Prod'struct_or_union'0 ->
        twice
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | Prod'struct_declarator_list'1 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | Prod'struct_declarator_list'0 ->
        twice (twice (twice (twice (twice_plus_one coq_In))))
      | Prod'struct_declarator'2 ->
        twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))
      | Prod'struct_declarator'1 ->
        twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | Prod'struct_declarator'0 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | Prod'struct_declaration_list'1 ->
        twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | Prod'struct_declaration_list'0 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | Prod'struct_declaration'1 ->
        twice
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | Prod'struct_declaration'0 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | Prod'storage_class_specifier'4 ->
        twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | Prod'storage_class_specifier'3 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | Prod'storage_class_specifier'2 ->
        twice
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | Prod'storage_class_specifier'1 ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | Prod'storage_class_specifier'0 ->
        twice
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Prod'statement_safe'6 ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Prod'statement_safe'5 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Prod'statement_safe'4 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Prod'statement_safe'3 ->
        twice (twice (twice (twice (twice (twice coq_In)))))
      | Prod'statement_safe'2 ->
        twice_plus_one (twice (twice (twice (twice (twice coq_In)))))
      | Prod'statement_safe'1 ->
        twice (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | Prod'statement_safe'0 ->
        twice_plus_one (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | Prod'statement_dangerous'6 ->
        twice (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | Prod'statement_dangerous'5 ->
        twice_plus_one (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | Prod'statement_dangerous'4 ->
        twice (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | Prod'statement_dangerous'3 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | Prod'statement_dangerous'2 ->
        twice (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | Prod'statement_dangerous'1 ->
        twice_plus_one (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | Prod'statement_dangerous'0 ->
        twice (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | Prod'specifier_qualifier_list'3 ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | Prod'specifier_qualifier_list'2 ->
        twice (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Prod'specifier_qualifier_list'1 ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Prod'specifier_qualifier_list'0 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Prod'shift_expression'2 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Prod'shift_expression'1 ->
        twice (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | Prod'shift_expression'0 ->
        twice_plus_one (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | Prod'selection_statement_safe'1 ->
        twice (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | Prod'selection_statement_safe'0 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | Prod'selection_statement_dangerous'2 ->
        twice (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Prod'selection_statement_dangerous'1 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Prod'selection_statement_dangerous'0 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Prod'relational_expression'4 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Prod'relational_expression'3 ->
        twice (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'relational_expression'2 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'relational_expression'1 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'relational_expression'0 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'primary_expression'3 ->
        twice
          (twice
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'primary_expression'2 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'primary_expression'1 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'primary_expression'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Prod'postfix_expression'12 ->
        twice (twice (twice (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'11 ->
        twice_plus_one (twice (twice (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'10 ->
        twice (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'9 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'8 ->
        twice (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'7 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'6 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'5 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'4 ->
        twice (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'3 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'2 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'1 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'postfix_expression'0 ->
        twice
          (twice
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'pointer'3 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'pointer'2 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'pointer'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Prod'pointer'0 ->
        twice (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'parameter_type_list'1 ->
        twice_plus_one
          (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'parameter_type_list'0 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'parameter_list'1 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'parameter_list'0 ->
        twice
          (twice
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'parameter_declaration'2 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'parameter_declaration'1 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'parameter_declaration'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'multiplicative_expression'3 ->
        twice
          (twice
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'multiplicative_expression'2 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'multiplicative_expression'1 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'multiplicative_expression'0 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'logical_OR_expression'1 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'logical_OR_expression'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'logical_AND_expression'1 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'logical_AND_expression'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Prod'labeled_statement_statement_safe_'2 ->
        twice (twice (twice (twice (twice (twice (twice coq_In))))))
      | Prod'labeled_statement_statement_safe_'1 ->
        twice_plus_one (twice (twice (twice (twice (twice (twice coq_In))))))
      | Prod'labeled_statement_statement_safe_'0 ->
        twice (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))
      | Prod'labeled_statement_statement_dangerous_'2 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))
      | Prod'labeled_statement_statement_dangerous_'1 ->
        twice (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Prod'labeled_statement_statement_dangerous_'0 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Prod'jump_statement'4 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Prod'jump_statement'3 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Prod'jump_statement'2 ->
        twice (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'jump_statement'1 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'jump_statement'0 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'13 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'12 ->
        twice
          (twice
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'11 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'10 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'9 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'8 ->
        twice (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'7 ->
        twice_plus_one
          (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'6 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'5 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'4 ->
        twice
          (twice
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'3 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'2 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_safe_'0 ->
        twice
          (twice
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'13 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'12 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'11 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'10 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'9 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'8 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'7 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'6 ->
        twice (twice (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'5 ->
        twice_plus_one
          (twice (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'4 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'3 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'2 ->
        twice
          (twice
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'1 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'iteration_statement_statement_dangerous_'0 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'initializer_list'3 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Prod'initializer_list'2 ->
        twice
          (twice
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'initializer_list'1 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'initializer_list'0 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'init_declarator_list'1 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'init_declarator_list'0 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'init_declarator'1 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'init_declarator'0 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'inclusive_OR_expression'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Prod'inclusive_OR_expression'0 ->
        twice
          (twice
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'identifier_list'1 ->
        twice_plus_one
          (twice
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'identifier_list'0 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute_word'2 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute_word'1 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute_word'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute_list'1 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute_list'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute'3 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute'2 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute'1 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'gcc_attribute'0 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'function_specifier'1 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'function_specifier'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'function_definition'1 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'function_definition'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Prod'external_declaration'2 ->
        twice (twice (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'external_declaration'1 ->
        twice_plus_one
          (twice (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'external_declaration'0 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'expression_statement'1 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'expression_statement'0 ->
        twice
          (twice
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'expression'1 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'expression'0 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'exclusive_OR_expression'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Prod'exclusive_OR_expression'0 ->
        twice
          (twice
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'equality_expression'2 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'equality_expression'1 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'equality_expression'0 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'enumerator_list'1 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'enumerator_list'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'enumerator'1 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'enumerator'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Prod'enumeration_constant'0 ->
        twice
          (twice
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'enum_specifier'4 ->
        twice_plus_one
          (twice
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'enum_specifier'3 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'enum_specifier'2 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'enum_specifier'1 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'enum_specifier'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'8 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'7 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'6 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'5 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'4 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'3 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'2 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'1 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_declarator'0 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'12 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'11 ->
        twice
          (twice
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'10 ->
        twice_plus_one
          (twice
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'9 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'8 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'7 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'6 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'5 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'4 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'3 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'2 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'1 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'direct_abstract_declarator'0 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'designator_list'1 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'designator_list'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'designator'1 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'designator'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'designation'0 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declarator_noattrend'1 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declarator_noattrend'0 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declarator'0 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers_typespec_opt'4 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers_typespec_opt'3 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers_typespec_opt'2 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers_typespec_opt'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers_typespec_opt'0 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers'4 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers'3 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers'2 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers'1 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_specifiers'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_list'1 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration_list'0 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Prod'declaration'1 ->
        twice (twice (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'declaration'0 ->
        twice_plus_one
          (twice (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'constant_expression'0 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'conditional_expression'1 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'conditional_expression'0 ->
        twice
          (twice
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'compound_statement'1 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'compound_statement'0 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'cast_expression'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Prod'cast_expression'0 ->
        twice
          (twice
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'c_initializer'2 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'c_initializer'1 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'c_initializer'0 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'block_item_list'1 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'block_item_list'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'block_item'2 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'block_item'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Prod'block_item'0 ->
        twice
          (twice
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'attribute_specifier_list'1 ->
        twice_plus_one
          (twice
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'attribute_specifier_list'0 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'attribute_specifier'3 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'attribute_specifier'2 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'attribute_specifier'1 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'attribute_specifier'0 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'10 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'9 ->
        twice
          (twice
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'8 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'7 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'6 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'5 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'4 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'3 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'2 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Prod'assignment_operator'1 ->
        twice
          (twice
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'assignment_operator'0 ->
        twice_plus_one
          (twice
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'assignment_expression'1 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'assignment_expression'0 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_statement'0 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_operands_ne'1 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_operands_ne'0 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_operands'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_operands'0 ->
        twice
          (twice
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_operand'0 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_op_name'1 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_op_name'0 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_flags'1 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_flags'0 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_attributes'2 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_attributes'1 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_attributes'0 ->
        twice
          (twice
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_arguments'3 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_arguments'2 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_arguments'1 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'asm_arguments'0 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'argument_expression_list'1 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'argument_expression_list'0 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'additive_expression'2 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'additive_expression'1 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'additive_expression'0 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'abstract_declarator'2 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'abstract_declarator'1 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'abstract_declarator'0 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'AND_expression'1 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Prod'AND_expression'0 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In))))))));
      surj = (fun n ->
      Camlcoq.Int31.destr
        (fun d d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 ->
        match d with
        | false ->
          (match d0 with
           | false ->
             (match d1 with
              | false ->
                (match d2 with
                 | false ->
                   (match d3 with
                    | false ->
                      (match d4 with
                       | false ->
                         (match d5 with
                          | false ->
                            (match d6 with
                             | false ->
                               (match d7 with
                                | false ->
                                  (match d8 with
                                   | false ->
                                     (match d9 with
                                      | false ->
                                        (match d10 with
                                         | false ->
                                           (match d11 with
                                            | false ->
                                              (match d12 with
                                               | false ->
                                                 (match d13 with
                                                  | false ->
                                                    (match d14 with
                                                     | false ->
                                                       (match d15 with
                                                        | false ->
                                                          (match d16 with
                                                           | false ->
                                                             (match d17 with
                                                              | false ->
                                                                (match d18 with
                                                                 | false ->
                                                                   (match d19 with
                                                                    | false ->
                                                                    (match d20 with
                                                                    | false ->
                                                                    (match d21 with
                                                                    | false ->
                                                                    (match d22 with
                                                                    | false ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'unary_operator'5
                                                                    | true ->
                                                                    Prod'unary_operator'4)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'unary_operator'3
                                                                    | true ->
                                                                    Prod'unary_operator'2))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'unary_operator'1
                                                                    | true ->
                                                                    Prod'unary_operator'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'unary_expression'7
                                                                    | true ->
                                                                    Prod'unary_expression'6)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'unary_expression'5
                                                                    | true ->
                                                                    Prod'unary_expression'4)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'unary_expression'3
                                                                    | true ->
                                                                    Prod'unary_expression'2))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'unary_expression'1
                                                                    | true ->
                                                                    Prod'unary_expression'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_specifier'12
                                                                    | true ->
                                                                    Prod'type_specifier'11))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_specifier'10
                                                                    | true ->
                                                                    Prod'type_specifier'9)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_specifier'8
                                                                    | true ->
                                                                    Prod'type_specifier'7))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_specifier'6
                                                                    | true ->
                                                                    Prod'type_specifier'5)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_specifier'4
                                                                    | true ->
                                                                    Prod'type_specifier'3)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_specifier'2
                                                                    | true ->
                                                                    Prod'type_specifier'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_specifier'0
                                                                    | true ->
                                                                    Prod'type_qualifier_noattr'2))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_qualifier_noattr'1
                                                                    | true ->
                                                                    Prod'type_qualifier_noattr'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_qualifier_list'1
                                                                    | true ->
                                                                    Prod'type_qualifier_list'0)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_qualifier'1
                                                                    | true ->
                                                                    Prod'type_qualifier'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'type_name'1
                                                                    | true ->
                                                                    Prod'type_name'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'translation_unit_file'1
                                                                    | true ->
                                                                    Prod'translation_unit_file'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'translation_unit'3
                                                                    | true ->
                                                                    Prod'translation_unit'2)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'translation_unit'1
                                                                    | true ->
                                                                    Prod'translation_unit'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'struct_or_union_specifier'2
                                                                    | true ->
                                                                    Prod'struct_or_union_specifier'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'struct_or_union_specifier'0
                                                                    | true ->
                                                                    Prod'struct_or_union'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'struct_or_union'0
                                                                    | true ->
                                                                    Prod'struct_declarator_list'1))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'struct_declarator_list'0
                                                                    | true ->
                                                                    Prod'struct_declarator'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'struct_declarator'1
                                                                    | true ->
                                                                    Prod'struct_declarator'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'struct_declaration_list'1
                                                                    | true ->
                                                                    Prod'struct_declaration_list'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'struct_declaration'1
                                                                    | true ->
                                                                    Prod'struct_declaration'0)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'storage_class_specifier'4
                                                                    | true ->
                                                                    Prod'storage_class_specifier'3)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'storage_class_specifier'2
                                                                    | true ->
                                                                    Prod'storage_class_specifier'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'storage_class_specifier'0
                                                                    | true ->
                                                                    Prod'statement_safe'6)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'statement_safe'5
                                                                    | true ->
                                                                    Prod'statement_safe'4))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'statement_safe'3
                                                                    | true ->
                                                                    Prod'statement_safe'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'statement_safe'1
                                                                    | true ->
                                                                    Prod'statement_safe'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'statement_dangerous'6
                                                                    | true ->
                                                                    Prod'statement_dangerous'5)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'statement_dangerous'4
                                                                    | true ->
                                                                    Prod'statement_dangerous'3)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'statement_dangerous'2
                                                                    | true ->
                                                                    Prod'statement_dangerous'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'statement_dangerous'0
                                                                    | true ->
                                                                    Prod'specifier_qualifier_list'3))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'specifier_qualifier_list'2
                                                                    | true ->
                                                                    Prod'specifier_qualifier_list'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'specifier_qualifier_list'0
                                                                    | true ->
                                                                    Prod'shift_expression'2))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'shift_expression'1
                                                                    | true ->
                                                                    Prod'shift_expression'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'selection_statement_safe'1
                                                                    | true ->
                                                                    Prod'selection_statement_safe'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'selection_statement_dangerous'2
                                                                    | true ->
                                                                    Prod'selection_statement_dangerous'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'selection_statement_dangerous'0
                                                                    | true ->
                                                                    Prod'relational_expression'4)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'relational_expression'3
                                                                    | true ->
                                                                    Prod'relational_expression'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'relational_expression'1
                                                                    | true ->
                                                                    Prod'relational_expression'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'primary_expression'3
                                                                    | true ->
                                                                    Prod'primary_expression'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'primary_expression'1
                                                                    | true ->
                                                                    Prod'primary_expression'0)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'postfix_expression'12
                                                                    | true ->
                                                                    Prod'postfix_expression'11)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'postfix_expression'10
                                                                    | true ->
                                                                    Prod'postfix_expression'9))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'postfix_expression'8
                                                                    | true ->
                                                                    Prod'postfix_expression'7)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'postfix_expression'6
                                                                    | true ->
                                                                    Prod'postfix_expression'5)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'postfix_expression'4
                                                                    | true ->
                                                                    Prod'postfix_expression'3)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'postfix_expression'2
                                                                    | true ->
                                                                    Prod'postfix_expression'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'postfix_expression'0
                                                                    | true ->
                                                                    Prod'pointer'3)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'pointer'2
                                                                    | true ->
                                                                    Prod'pointer'1))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'pointer'0
                                                                    | true ->
                                                                    Prod'parameter_type_list'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'parameter_type_list'0
                                                                    | true ->
                                                                    Prod'parameter_list'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'parameter_list'0
                                                                    | true ->
                                                                    Prod'parameter_declaration'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'parameter_declaration'1
                                                                    | true ->
                                                                    Prod'parameter_declaration'0)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'multiplicative_expression'3
                                                                    | true ->
                                                                    Prod'multiplicative_expression'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'multiplicative_expression'1
                                                                    | true ->
                                                                    Prod'multiplicative_expression'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'logical_OR_expression'1
                                                                    | true ->
                                                                    Prod'logical_OR_expression'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'logical_AND_expression'1
                                                                    | true ->
                                                                    Prod'logical_AND_expression'0)))))))
                                                                    | true ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'labeled_statement_statement_safe_'2
                                                                    | true ->
                                                                    Prod'labeled_statement_statement_safe_'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'labeled_statement_statement_safe_'0
                                                                    | true ->
                                                                    Prod'labeled_statement_statement_dangerous_'2))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'labeled_statement_statement_dangerous_'1
                                                                    | true ->
                                                                    Prod'labeled_statement_statement_dangerous_'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'jump_statement'4
                                                                    | true ->
                                                                    Prod'jump_statement'3)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'jump_statement'2
                                                                    | true ->
                                                                    Prod'jump_statement'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'jump_statement'0
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_safe_'13))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_safe_'12
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_safe_'11)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_safe_'10
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_safe_'9))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_safe_'8
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_safe_'7)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_safe_'6
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_safe_'5))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_safe_'4
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_safe_'3)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_safe_'2
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_safe_'1)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_safe_'0
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_dangerous_'13)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_dangerous_'12
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_dangerous_'11))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_dangerous_'10
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_dangerous_'9)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_dangerous_'8
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_dangerous_'7)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_dangerous_'6
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_dangerous_'5)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_dangerous_'4
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_dangerous_'3))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_dangerous_'2
                                                                    | true ->
                                                                    Prod'iteration_statement_statement_dangerous_'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'iteration_statement_statement_dangerous_'0
                                                                    | true ->
                                                                    Prod'initializer_list'3)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'initializer_list'2
                                                                    | true ->
                                                                    Prod'initializer_list'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'initializer_list'0
                                                                    | true ->
                                                                    Prod'init_declarator_list'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'init_declarator_list'0
                                                                    | true ->
                                                                    Prod'init_declarator'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'init_declarator'0
                                                                    | true ->
                                                                    Prod'inclusive_OR_expression'1))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'inclusive_OR_expression'0
                                                                    | true ->
                                                                    Prod'identifier_list'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'identifier_list'0
                                                                    | true ->
                                                                    Prod'gcc_attribute_word'2))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'gcc_attribute_word'1
                                                                    | true ->
                                                                    Prod'gcc_attribute_word'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'gcc_attribute_list'1
                                                                    | true ->
                                                                    Prod'gcc_attribute_list'0)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'gcc_attribute'3
                                                                    | true ->
                                                                    Prod'gcc_attribute'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'gcc_attribute'1
                                                                    | true ->
                                                                    Prod'gcc_attribute'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'function_specifier'1
                                                                    | true ->
                                                                    Prod'function_specifier'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'function_definition'1
                                                                    | true ->
                                                                    Prod'function_definition'0))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'external_declaration'2
                                                                    | true ->
                                                                    Prod'external_declaration'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'external_declaration'0
                                                                    | true ->
                                                                    Prod'expression_statement'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'expression_statement'0
                                                                    | true ->
                                                                    Prod'expression'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'expression'0
                                                                    | true ->
                                                                    Prod'exclusive_OR_expression'1)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'exclusive_OR_expression'0
                                                                    | true ->
                                                                    Prod'equality_expression'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'equality_expression'1
                                                                    | true ->
                                                                    Prod'equality_expression'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'enumerator_list'1
                                                                    | true ->
                                                                    Prod'enumerator_list'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'enumerator'1
                                                                    | true ->
                                                                    Prod'enumerator'0))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'enumeration_constant'0
                                                                    | true ->
                                                                    Prod'enum_specifier'4)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'enum_specifier'3
                                                                    | true ->
                                                                    Prod'enum_specifier'2))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'enum_specifier'1
                                                                    | true ->
                                                                    Prod'enum_specifier'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_declarator'8
                                                                    | true ->
                                                                    Prod'direct_declarator'7)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_declarator'6
                                                                    | true ->
                                                                    Prod'direct_declarator'5)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_declarator'4
                                                                    | true ->
                                                                    Prod'direct_declarator'3))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_declarator'2
                                                                    | true ->
                                                                    Prod'direct_declarator'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_declarator'0
                                                                    | true ->
                                                                    Prod'direct_abstract_declarator'12)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_abstract_declarator'11
                                                                    | true ->
                                                                    Prod'direct_abstract_declarator'10)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_abstract_declarator'9
                                                                    | true ->
                                                                    Prod'direct_abstract_declarator'8))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_abstract_declarator'7
                                                                    | true ->
                                                                    Prod'direct_abstract_declarator'6)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_abstract_declarator'5
                                                                    | true ->
                                                                    Prod'direct_abstract_declarator'4)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_abstract_declarator'3
                                                                    | true ->
                                                                    Prod'direct_abstract_declarator'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'direct_abstract_declarator'1
                                                                    | true ->
                                                                    Prod'direct_abstract_declarator'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'designator_list'1
                                                                    | true ->
                                                                    Prod'designator_list'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'designator'1
                                                                    | true ->
                                                                    Prod'designator'0))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'designation'0
                                                                    | true ->
                                                                    Prod'declarator_noattrend'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declarator_noattrend'0
                                                                    | true ->
                                                                    Prod'declarator'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declaration_specifiers_typespec_opt'4
                                                                    | true ->
                                                                    Prod'declaration_specifiers_typespec_opt'3)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declaration_specifiers_typespec_opt'2
                                                                    | true ->
                                                                    Prod'declaration_specifiers_typespec_opt'1)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declaration_specifiers_typespec_opt'0
                                                                    | true ->
                                                                    Prod'declaration_specifiers'4)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declaration_specifiers'3
                                                                    | true ->
                                                                    Prod'declaration_specifiers'2))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declaration_specifiers'1
                                                                    | true ->
                                                                    Prod'declaration_specifiers'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declaration_list'1
                                                                    | true ->
                                                                    Prod'declaration_list'0))))))))
                                                                    | true ->
                                                                    (match d22 with
                                                                    | false ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'declaration'1
                                                                    | true ->
                                                                    Prod'declaration'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'constant_expression'0
                                                                    | true ->
                                                                    Prod'conditional_expression'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'conditional_expression'0
                                                                    | true ->
                                                                    Prod'compound_statement'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'compound_statement'0
                                                                    | true ->
                                                                    Prod'cast_expression'1)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'cast_expression'0
                                                                    | true ->
                                                                    Prod'c_initializer'2)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'c_initializer'1
                                                                    | true ->
                                                                    Prod'c_initializer'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'block_item_list'1
                                                                    | true ->
                                                                    Prod'block_item_list'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'block_item'2
                                                                    | true ->
                                                                    Prod'block_item'1))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'block_item'0
                                                                    | true ->
                                                                    Prod'attribute_specifier_list'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'attribute_specifier_list'0
                                                                    | true ->
                                                                    Prod'attribute_specifier'3))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'attribute_specifier'2
                                                                    | true ->
                                                                    Prod'attribute_specifier'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'attribute_specifier'0
                                                                    | true ->
                                                                    Prod'assignment_operator'10)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'assignment_operator'9
                                                                    | true ->
                                                                    Prod'assignment_operator'8)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'assignment_operator'7
                                                                    | true ->
                                                                    Prod'assignment_operator'6))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'assignment_operator'5
                                                                    | true ->
                                                                    Prod'assignment_operator'4)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'assignment_operator'3
                                                                    | true ->
                                                                    Prod'assignment_operator'2)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'assignment_operator'1
                                                                    | true ->
                                                                    Prod'assignment_operator'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'assignment_expression'1
                                                                    | true ->
                                                                    Prod'assignment_expression'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_statement'0
                                                                    | true ->
                                                                    Prod'asm_operands_ne'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_operands_ne'0
                                                                    | true ->
                                                                    Prod'asm_operands'1)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_operands'0
                                                                    | true ->
                                                                    Prod'asm_operand'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_op_name'1
                                                                    | true ->
                                                                    Prod'asm_op_name'0))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_flags'1
                                                                    | true ->
                                                                    Prod'asm_flags'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_attributes'2
                                                                    | true ->
                                                                    Prod'asm_attributes'1))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_attributes'0
                                                                    | true ->
                                                                    Prod'asm_arguments'3)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_arguments'2
                                                                    | true ->
                                                                    Prod'asm_arguments'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'asm_arguments'0
                                                                    | true ->
                                                                    Prod'argument_expression_list'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'argument_expression_list'0
                                                                    | true ->
                                                                    Prod'additive_expression'2)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'additive_expression'1
                                                                    | true ->
                                                                    Prod'additive_expression'0)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'abstract_declarator'2
                                                                    | true ->
                                                                    Prod'abstract_declarator'1))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'abstract_declarator'0
                                                                    | true ->
                                                                    Prod'AND_expression'1)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Prod'AND_expression'0
                                                                    | true ->
                                                                    Prod'unary_operator'5))))))
                                                                    | true ->
                                                                    Prod'unary_operator'5)
                                                                    | true ->
                                                                    Prod'unary_operator'5))
                                                                    | true ->
                                                                    Prod'unary_operator'5)
                                                                    | true ->
                                                                    Prod'unary_operator'5)
                                                                 | true ->
                                                                   Prod'unary_operator'5)
                                                              | true ->
                                                                Prod'unary_operator'5)
                                                           | true ->
                                                             Prod'unary_operator'5)
                                                        | true ->
                                                          Prod'unary_operator'5)
                                                     | true ->
                                                       Prod'unary_operator'5)
                                                  | true ->
                                                    Prod'unary_operator'5)
                                               | true -> Prod'unary_operator'5)
                                            | true -> Prod'unary_operator'5)
                                         | true -> Prod'unary_operator'5)
                                      | true -> Prod'unary_operator'5)
                                   | true -> Prod'unary_operator'5)
                                | true -> Prod'unary_operator'5)
                             | true -> Prod'unary_operator'5)
                          | true -> Prod'unary_operator'5)
                       | true -> Prod'unary_operator'5)
                    | true -> Prod'unary_operator'5)
                 | true -> Prod'unary_operator'5)
              | true -> Prod'unary_operator'5)
           | true -> Prod'unary_operator'5)
        | true -> Prod'unary_operator'5)
        n); inj_bound = (Camlcoq.Int31.constr (false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      false, false, false, false, false, false, false, false, true, false,
      false, true, true, true, true, true, true)) }

  (** val coq_ProductionAlph : production coq_Alphabet **)

  let coq_ProductionAlph =
    coq_NumberedAlphabet productionNum

  (** val prod_contents :
      production -> (nonterminal * symbol list, symbol_semantic_type
      arrows_left) sigT **)

  let prod_contents p =
    let box = fun x x0 -> Coq_existT (x, x0) in
    (match p with
     | Prod'unary_operator'5 ->
       Obj.magic box (Coq_unary_operator'nt, ((T BANG't) :: [])) (fun loc ->
         (NOT, loc))
     | Prod'unary_operator'4 ->
       Obj.magic box (Coq_unary_operator'nt, ((T TILDE't) :: [])) (fun loc ->
         (BNOT, loc))
     | Prod'unary_operator'3 ->
       Obj.magic box (Coq_unary_operator'nt, ((T MINUS't) :: [])) (fun loc ->
         (MINUS, loc))
     | Prod'unary_operator'2 ->
       Obj.magic box (Coq_unary_operator'nt, ((T PLUS't) :: [])) (fun loc ->
         (PLUS, loc))
     | Prod'unary_operator'1 ->
       Obj.magic box (Coq_unary_operator'nt, ((T STAR't) :: [])) (fun loc ->
         (MEMOF, loc))
     | Prod'unary_operator'0 ->
       Obj.magic box (Coq_unary_operator'nt, ((T AND't) :: [])) (fun loc ->
         (ADDROF, loc))
     | Prod'unary_expression'7 ->
       Obj.magic box (Coq_unary_expression'nt, ((T RPAREN't) :: ((NT
         Coq_type_name'nt) :: ((T LPAREN't) :: ((T ALIGNOF't) :: [])))))
         (fun _ typ _ loc -> ((TYPE_ALIGNOF typ), loc))
     | Prod'unary_expression'6 ->
       Obj.magic box (Coq_unary_expression'nt, ((NT
         Coq_unary_expression'nt) :: ((T ALIGNOF't) :: []))) (fun expr loc ->
         ((EXPR_ALIGNOF (fst expr)), loc))
     | Prod'unary_expression'5 ->
       Obj.magic box (Coq_unary_expression'nt, ((T RPAREN't) :: ((NT
         Coq_type_name'nt) :: ((T LPAREN't) :: ((T SIZEOF't) :: [])))))
         (fun _ typ _ loc -> ((TYPE_SIZEOF typ), loc))
     | Prod'unary_expression'4 ->
       Obj.magic box (Coq_unary_expression'nt, ((NT
         Coq_unary_expression'nt) :: ((T SIZEOF't) :: []))) (fun expr loc ->
         ((EXPR_SIZEOF (fst expr)), loc))
     | Prod'unary_expression'3 ->
       Obj.magic box (Coq_unary_expression'nt, ((NT
         Coq_cast_expression'nt) :: ((NT Coq_unary_operator'nt) :: [])))
         (fun expr op -> ((UNARY ((fst op), (fst expr))), (snd op)))
     | Prod'unary_expression'2 ->
       Obj.magic box (Coq_unary_expression'nt, ((NT
         Coq_unary_expression'nt) :: ((T DEC't) :: []))) (fun expr loc ->
         ((UNARY (PREDECR, (fst expr))), loc))
     | Prod'unary_expression'1 ->
       Obj.magic box (Coq_unary_expression'nt, ((NT
         Coq_unary_expression'nt) :: ((T INC't) :: []))) (fun expr loc ->
         ((UNARY (PREINCR, (fst expr))), loc))
     | Prod'unary_expression'0 ->
       Obj.magic box (Coq_unary_expression'nt, ((NT
         Coq_postfix_expression'nt) :: [])) (fun expr -> expr)
     | Prod'type_specifier'12 ->
       Obj.magic box (Coq_type_specifier'nt, ((T TYPEDEF_NAME't) :: []))
         (fun id -> ((Tnamed (fst id)), (snd id)))
     | Prod'type_specifier'11 ->
       Obj.magic box (Coq_type_specifier'nt, ((NT
         Coq_enum_specifier'nt) :: [])) (fun spec -> spec)
     | Prod'type_specifier'10 ->
       Obj.magic box (Coq_type_specifier'nt, ((NT
         Coq_struct_or_union_specifier'nt) :: [])) (fun spec -> spec)
     | Prod'type_specifier'9 ->
       Obj.magic box (Coq_type_specifier'nt, ((T UNDERSCORE_BOOL't) :: []))
         (fun loc -> (T_Bool, loc))
     | Prod'type_specifier'8 ->
       Obj.magic box (Coq_type_specifier'nt, ((T UNSIGNED't) :: []))
         (fun loc -> (Tunsigned, loc))
     | Prod'type_specifier'7 ->
       Obj.magic box (Coq_type_specifier'nt, ((T SIGNED't) :: []))
         (fun loc -> (Tsigned, loc))
     | Prod'type_specifier'6 ->
       Obj.magic box (Coq_type_specifier'nt, ((T DOUBLE't) :: []))
         (fun loc -> (Tdouble, loc))
     | Prod'type_specifier'5 ->
       Obj.magic box (Coq_type_specifier'nt, ((T FLOAT't) :: [])) (fun loc ->
         (Tfloat, loc))
     | Prod'type_specifier'4 ->
       Obj.magic box (Coq_type_specifier'nt, ((T LONG't) :: [])) (fun loc ->
         (Tlong, loc))
     | Prod'type_specifier'3 ->
       Obj.magic box (Coq_type_specifier'nt, ((T INT't) :: [])) (fun loc ->
         (Tint, loc))
     | Prod'type_specifier'2 ->
       Obj.magic box (Coq_type_specifier'nt, ((T SHORT't) :: [])) (fun loc ->
         (Tshort, loc))
     | Prod'type_specifier'1 ->
       Obj.magic box (Coq_type_specifier'nt, ((T CHAR't) :: [])) (fun loc ->
         (Tchar, loc))
     | Prod'type_specifier'0 ->
       Obj.magic box (Coq_type_specifier'nt, ((T VOID't) :: [])) (fun loc ->
         (Tvoid, loc))
     | Prod'type_qualifier_noattr'2 ->
       Obj.magic box (Coq_type_qualifier_noattr'nt, ((T VOLATILE't) :: []))
         (fun loc -> (CV_VOLATILE, loc))
     | Prod'type_qualifier_noattr'1 ->
       Obj.magic box (Coq_type_qualifier_noattr'nt, ((T RESTRICT't) :: []))
         (fun loc -> (CV_RESTRICT, loc))
     | Prod'type_qualifier_noattr'0 ->
       Obj.magic box (Coq_type_qualifier_noattr'nt, ((T CONST't) :: []))
         (fun loc -> (CV_CONST, loc))
     | Prod'type_qualifier_list'1 ->
       Obj.magic box (Coq_type_qualifier_list'nt, ((NT
         Coq_type_qualifier'nt) :: ((NT Coq_type_qualifier_list'nt) :: [])))
         (fun qualt qualq -> (fst qualt) :: qualq)
     | Prod'type_qualifier_list'0 ->
       Obj.magic box (Coq_type_qualifier_list'nt, ((NT
         Coq_type_qualifier'nt) :: [])) (fun qual -> (fst qual) :: [])
     | Prod'type_qualifier'1 ->
       Obj.magic box (Coq_type_qualifier'nt, ((NT
         Coq_attribute_specifier'nt) :: [])) (fun attr -> ((CV_ATTR
         (fst attr)), (snd attr)))
     | Prod'type_qualifier'0 ->
       Obj.magic box (Coq_type_qualifier'nt, ((NT
         Coq_type_qualifier_noattr'nt) :: [])) (fun qual -> qual)
     | Prod'type_name'1 ->
       Obj.magic box (Coq_type_name'nt, ((NT
         Coq_abstract_declarator'nt) :: ((NT
         Coq_specifier_qualifier_list'nt) :: []))) (fun typ specqual ->
         ((fst specqual), typ))
     | Prod'type_name'0 ->
       Obj.magic box (Coq_type_name'nt, ((NT
         Coq_specifier_qualifier_list'nt) :: [])) (fun specqual ->
         ((fst specqual), JUSTBASE))
     | Prod'translation_unit_file'1 ->
       Obj.magic box (Coq_translation_unit_file'nt, ((T EOF't) :: []))
         (fun _ -> [])
     | Prod'translation_unit_file'0 ->
       Obj.magic box (Coq_translation_unit_file'nt, ((T EOF't) :: ((NT
         Coq_translation_unit'nt) :: []))) (fun _ -> rev')
     | Prod'translation_unit'3 ->
       Obj.magic box (Coq_translation_unit'nt, ((T SEMICOLON't) :: []))
         (fun _ -> [])
     | Prod'translation_unit'2 ->
       Obj.magic box (Coq_translation_unit'nt, ((T SEMICOLON't) :: ((NT
         Coq_translation_unit'nt) :: []))) (fun _ tu -> tu)
     | Prod'translation_unit'1 ->
       Obj.magic box (Coq_translation_unit'nt, ((NT
         Coq_external_declaration'nt) :: ((NT
         Coq_translation_unit'nt) :: []))) (fun deft defq -> deft :: defq)
     | Prod'translation_unit'0 ->
       Obj.magic box (Coq_translation_unit'nt, ((NT
         Coq_external_declaration'nt) :: [])) (fun def -> def :: [])
     | Prod'struct_or_union_specifier'2 ->
       Obj.magic box (Coq_struct_or_union_specifier'nt, ((T
         OTHER_NAME't) :: ((NT Coq_attribute_specifier_list'nt) :: ((NT
         Coq_struct_or_union'nt) :: [])))) (fun id attrs str_uni ->
         ((Tstruct_union ((fst str_uni), (Some (fst id)), None, attrs)),
         (snd str_uni)))
     | Prod'struct_or_union_specifier'1 ->
       Obj.magic box (Coq_struct_or_union_specifier'nt, ((T RBRACE't) :: ((NT
         Coq_struct_declaration_list'nt) :: ((T LBRACE't) :: ((NT
         Coq_attribute_specifier_list'nt) :: ((NT
         Coq_struct_or_union'nt) :: [])))))) (fun _ decls _ attrs str_uni ->
         ((Tstruct_union ((fst str_uni), None, (Some (rev' decls)), attrs)),
         (snd str_uni)))
     | Prod'struct_or_union_specifier'0 ->
       Obj.magic box (Coq_struct_or_union_specifier'nt, ((T RBRACE't) :: ((NT
         Coq_struct_declaration_list'nt) :: ((T LBRACE't) :: ((T
         OTHER_NAME't) :: ((NT Coq_attribute_specifier_list'nt) :: ((NT
         Coq_struct_or_union'nt) :: [])))))))
         (fun _ decls _ id attrs str_uni -> ((Tstruct_union ((fst str_uni),
         (Some (fst id)), (Some (rev' decls)), attrs)), (snd str_uni)))
     | Prod'struct_or_union'1 ->
       Obj.magic box (Coq_struct_or_union'nt, ((T UNION't) :: []))
         (fun loc -> (UNION, loc))
     | Prod'struct_or_union'0 ->
       Obj.magic box (Coq_struct_or_union'nt, ((T STRUCT't) :: []))
         (fun loc -> (STRUCT, loc))
     | Prod'struct_declarator_list'1 ->
       Obj.magic box (Coq_struct_declarator_list'nt, ((NT
         Coq_struct_declarator'nt) :: ((T COMMA't) :: ((NT
         Coq_struct_declarator_list'nt) :: [])))) (fun declt _ declq ->
         declt :: declq)
     | Prod'struct_declarator_list'0 ->
       Obj.magic box (Coq_struct_declarator_list'nt, ((NT
         Coq_struct_declarator'nt) :: [])) (fun decl -> decl :: [])
     | Prod'struct_declarator'2 ->
       Obj.magic box (Coq_struct_declarator'nt, ((NT
         Coq_constant_expression'nt) :: ((T COLON't) :: []))) (fun expr _ ->
         (None, (Some (fst expr))))
     | Prod'struct_declarator'1 ->
       Obj.magic box (Coq_struct_declarator'nt, ((NT
         Coq_constant_expression'nt) :: ((T COLON't) :: ((NT
         Coq_declarator'nt) :: [])))) (fun expr _ decl -> ((Some decl), (Some
         (fst expr))))
     | Prod'struct_declarator'0 ->
       Obj.magic box (Coq_struct_declarator'nt, ((NT
         Coq_declarator'nt) :: [])) (fun decl -> ((Some decl), None))
     | Prod'struct_declaration_list'1 ->
       Obj.magic box (Coq_struct_declaration_list'nt, ((NT
         Coq_struct_declaration'nt) :: ((NT
         Coq_struct_declaration_list'nt) :: []))) (fun tdecls qdecls ->
         tdecls :: qdecls)
     | Prod'struct_declaration_list'0 ->
       Obj.magic box (Coq_struct_declaration_list'nt, []) []
     | Prod'struct_declaration'1 ->
       Obj.magic box (Coq_struct_declaration'nt, ((T SEMICOLON't) :: ((NT
         Coq_specifier_qualifier_list'nt) :: []))) (fun _ decspec ->
         Field_group ((fst decspec), ((None, None) :: []), (snd decspec)))
     | Prod'struct_declaration'0 ->
       Obj.magic box (Coq_struct_declaration'nt, ((T SEMICOLON't) :: ((NT
         Coq_struct_declarator_list'nt) :: ((NT
         Coq_specifier_qualifier_list'nt) :: [])))) (fun _ decls decspec ->
         Field_group ((fst decspec), (rev' decls), (snd decspec)))
     | Prod'storage_class_specifier'4 ->
       Obj.magic box (Coq_storage_class_specifier'nt, ((T REGISTER't) :: []))
         (fun loc -> (REGISTER, loc))
     | Prod'storage_class_specifier'3 ->
       Obj.magic box (Coq_storage_class_specifier'nt, ((T AUTO't) :: []))
         (fun loc -> (AUTO, loc))
     | Prod'storage_class_specifier'2 ->
       Obj.magic box (Coq_storage_class_specifier'nt, ((T STATIC't) :: []))
         (fun loc -> (STATIC, loc))
     | Prod'storage_class_specifier'1 ->
       Obj.magic box (Coq_storage_class_specifier'nt, ((T EXTERN't) :: []))
         (fun loc -> (EXTERN, loc))
     | Prod'storage_class_specifier'0 ->
       Obj.magic box (Coq_storage_class_specifier'nt, ((T TYPEDEF't) :: []))
         (fun loc -> (TYPEDEF, loc))
     | Prod'statement_safe'6 ->
       Obj.magic box (Coq_statement_safe'nt, ((NT
         Coq_asm_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_safe'5 ->
       Obj.magic box (Coq_statement_safe'nt, ((NT
         Coq_jump_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_safe'4 ->
       Obj.magic box (Coq_statement_safe'nt, ((NT
         Coq_iteration_statement_statement_safe_'nt) :: [])) (fun stmt ->
         stmt)
     | Prod'statement_safe'3 ->
       Obj.magic box (Coq_statement_safe'nt, ((NT
         Coq_selection_statement_safe'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_safe'2 ->
       Obj.magic box (Coq_statement_safe'nt, ((NT
         Coq_expression_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_safe'1 ->
       Obj.magic box (Coq_statement_safe'nt, ((NT
         Coq_compound_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_safe'0 ->
       Obj.magic box (Coq_statement_safe'nt, ((NT
         Coq_labeled_statement_statement_safe_'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_dangerous'6 ->
       Obj.magic box (Coq_statement_dangerous'nt, ((NT
         Coq_asm_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_dangerous'5 ->
       Obj.magic box (Coq_statement_dangerous'nt, ((NT
         Coq_jump_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_dangerous'4 ->
       Obj.magic box (Coq_statement_dangerous'nt, ((NT
         Coq_iteration_statement_statement_dangerous_'nt) :: []))
         (fun stmt -> stmt)
     | Prod'statement_dangerous'3 ->
       Obj.magic box (Coq_statement_dangerous'nt, ((NT
         Coq_selection_statement_dangerous'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_dangerous'2 ->
       Obj.magic box (Coq_statement_dangerous'nt, ((NT
         Coq_expression_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_dangerous'1 ->
       Obj.magic box (Coq_statement_dangerous'nt, ((NT
         Coq_compound_statement'nt) :: [])) (fun stmt -> stmt)
     | Prod'statement_dangerous'0 ->
       Obj.magic box (Coq_statement_dangerous'nt, ((NT
         Coq_labeled_statement_statement_dangerous_'nt) :: [])) (fun stmt ->
         stmt)
     | Prod'specifier_qualifier_list'3 ->
       Obj.magic box (Coq_specifier_qualifier_list'nt, ((NT
         Coq_type_qualifier'nt) :: [])) (fun qual -> (((SpecCV
         (fst qual)) :: []), (snd qual)))
     | Prod'specifier_qualifier_list'2 ->
       Obj.magic box (Coq_specifier_qualifier_list'nt, ((NT
         Coq_specifier_qualifier_list'nt) :: ((NT
         Coq_type_qualifier'nt) :: []))) (fun rest qual -> (((SpecCV
         (fst qual)) :: (fst rest)), (snd qual)))
     | Prod'specifier_qualifier_list'1 ->
       Obj.magic box (Coq_specifier_qualifier_list'nt, ((NT
         Coq_type_specifier'nt) :: [])) (fun typ -> (((SpecType
         (fst typ)) :: []), (snd typ)))
     | Prod'specifier_qualifier_list'0 ->
       Obj.magic box (Coq_specifier_qualifier_list'nt, ((NT
         Coq_specifier_qualifier_list'nt) :: ((NT
         Coq_type_specifier'nt) :: []))) (fun rest typ -> (((SpecType
         (fst typ)) :: (fst rest)), (snd typ)))
     | Prod'shift_expression'2 ->
       Obj.magic box (Coq_shift_expression'nt, ((NT
         Coq_additive_expression'nt) :: ((T RIGHT't) :: ((NT
         Coq_shift_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY
         (SHR, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'shift_expression'1 ->
       Obj.magic box (Coq_shift_expression'nt, ((NT
         Coq_additive_expression'nt) :: ((T LEFT't) :: ((NT
         Coq_shift_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY
         (SHL, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'shift_expression'0 ->
       Obj.magic box (Coq_shift_expression'nt, ((NT
         Coq_additive_expression'nt) :: [])) (fun expr -> expr)
     | Prod'selection_statement_safe'1 ->
       Obj.magic box (Coq_selection_statement_safe'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T SWITCH't) :: []))))))
         (fun stmt _ expr _ loc -> SWITCH ((fst expr), stmt, loc))
     | Prod'selection_statement_safe'0 ->
       Obj.magic box (Coq_selection_statement_safe'nt, ((NT
         Coq_statement_safe'nt) :: ((T ELSE't) :: ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T IF't) :: []))))))))
         (fun stmt2 _ stmt1 _ expr _ loc -> If ((fst expr), stmt1, (Some
         stmt2), loc))
     | Prod'selection_statement_dangerous'2 ->
       Obj.magic box (Coq_selection_statement_dangerous'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T SWITCH't) :: []))))))
         (fun stmt _ expr _ loc -> SWITCH ((fst expr), stmt, loc))
     | Prod'selection_statement_dangerous'1 ->
       Obj.magic box (Coq_selection_statement_dangerous'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T ELSE't) :: ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T IF't) :: []))))))))
         (fun stmt2 _ stmt1 _ expr _ loc -> If ((fst expr), stmt1, (Some
         stmt2), loc))
     | Prod'selection_statement_dangerous'0 ->
       Obj.magic box (Coq_selection_statement_dangerous'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T IF't) :: []))))))
         (fun stmt _ expr _ loc -> If ((fst expr), stmt, None, loc))
     | Prod'relational_expression'4 ->
       Obj.magic box (Coq_relational_expression'nt, ((NT
         Coq_shift_expression'nt) :: ((T GEQ't) :: ((NT
         Coq_relational_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (GE, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'relational_expression'3 ->
       Obj.magic box (Coq_relational_expression'nt, ((NT
         Coq_shift_expression'nt) :: ((T LEQ't) :: ((NT
         Coq_relational_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (LE, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'relational_expression'2 ->
       Obj.magic box (Coq_relational_expression'nt, ((NT
         Coq_shift_expression'nt) :: ((T GT't) :: ((NT
         Coq_relational_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (GT, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'relational_expression'1 ->
       Obj.magic box (Coq_relational_expression'nt, ((NT
         Coq_shift_expression'nt) :: ((T LT't) :: ((NT
         Coq_relational_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (LT, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'relational_expression'0 ->
       Obj.magic box (Coq_relational_expression'nt, ((NT
         Coq_shift_expression'nt) :: [])) (fun expr -> expr)
     | Prod'primary_expression'3 ->
       Obj.magic box (Coq_primary_expression'nt, ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: [])))) (fun _ expr loc ->
         ((fst expr), loc))
     | Prod'primary_expression'2 ->
       Obj.magic box (Coq_primary_expression'nt, ((T
         STRING_LITERAL't) :: [])) (fun str ->
         let (p0, loc) = str in
         let (wide, chars) = p0 in
         ((CONSTANT (CONST_STRING (wide, chars))), loc))
     | Prod'primary_expression'1 ->
       Obj.magic box (Coq_primary_expression'nt, ((T CONSTANT't) :: []))
         (fun cst -> ((CONSTANT (fst cst)), (snd cst)))
     | Prod'primary_expression'0 ->
       Obj.magic box (Coq_primary_expression'nt, ((T VAR_NAME't) :: []))
         (fun var -> ((VARIABLE (fst var)), (snd var)))
     | Prod'postfix_expression'12 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RPAREN't) :: ((T
         OTHER_NAME't) :: ((T COMMA't) :: ((NT Coq_type_name'nt) :: ((T
         LPAREN't) :: ((T BUILTIN_OFFSETOF't) :: [])))))))
         (fun _ mem0 _ typ _ loc -> ((BUILTIN_OFFSETOF (typ, ((INFIELD_INIT
         (fst mem0)) :: []))), loc))
     | Prod'postfix_expression'11 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RPAREN't) :: ((NT
         Coq_designator_list'nt) :: ((T OTHER_NAME't) :: ((T COMMA't) :: ((NT
         Coq_type_name'nt) :: ((T LPAREN't) :: ((T
         BUILTIN_OFFSETOF't) :: [])))))))) (fun _ mems id _ typ _ loc ->
         ((BUILTIN_OFFSETOF (typ, ((INFIELD_INIT (fst id)) :: (rev mems)))),
         loc))
     | Prod'postfix_expression'10 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RBRACE't) :: ((T
         COMMA't) :: ((NT Coq_initializer_list'nt) :: ((T LBRACE't) :: ((T
         RPAREN't) :: ((NT Coq_type_name'nt) :: ((T LPAREN't) :: []))))))))
         (fun _ _ init _ _ typ loc -> ((CAST (typ, (COMPOUND_INIT
         (rev' init)))), loc))
     | Prod'postfix_expression'9 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RBRACE't) :: ((NT
         Coq_initializer_list'nt) :: ((T LBRACE't) :: ((T RPAREN't) :: ((NT
         Coq_type_name'nt) :: ((T LPAREN't) :: [])))))))
         (fun _ init _ _ typ loc -> ((CAST (typ, (COMPOUND_INIT
         (rev' init)))), loc))
     | Prod'postfix_expression'8 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T DEC't) :: ((NT
         Coq_postfix_expression'nt) :: []))) (fun _ expr -> ((UNARY (POSDECR,
         (fst expr))), (snd expr)))
     | Prod'postfix_expression'7 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T INC't) :: ((NT
         Coq_postfix_expression'nt) :: []))) (fun _ expr -> ((UNARY (POSINCR,
         (fst expr))), (snd expr)))
     | Prod'postfix_expression'6 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T OTHER_NAME't) :: ((T
         PTR't) :: ((NT Coq_postfix_expression'nt) :: []))))
         (fun mem0 _ expr -> ((MEMBEROFPTR ((fst expr), (fst mem0))),
         (snd expr)))
     | Prod'postfix_expression'5 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T OTHER_NAME't) :: ((T
         DOT't) :: ((NT Coq_postfix_expression'nt) :: []))))
         (fun mem0 _ expr -> ((MEMBEROF ((fst expr), (fst mem0))),
         (snd expr)))
     | Prod'postfix_expression'4 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RPAREN't) :: ((NT
         Coq_type_name'nt) :: ((T COMMA't) :: ((NT
         Coq_assignment_expression'nt) :: ((T LPAREN't) :: ((T
         BUILTIN_VA_ARG't) :: []))))))) (fun _ ty _ expr _ loc ->
         ((BUILTIN_VA_ARG ((fst expr), ty)), loc))
     | Prod'postfix_expression'3 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RPAREN't) :: ((T
         LPAREN't) :: ((NT Coq_postfix_expression'nt) :: []))))
         (fun _ _ expr -> ((CALL ((fst expr), [])), (snd expr)))
     | Prod'postfix_expression'2 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RPAREN't) :: ((NT
         Coq_argument_expression_list'nt) :: ((T LPAREN't) :: ((NT
         Coq_postfix_expression'nt) :: []))))) (fun _ args _ expr -> ((CALL
         ((fst expr), (rev' args))), (snd expr)))
     | Prod'postfix_expression'1 ->
       Obj.magic box (Coq_postfix_expression'nt, ((T RBRACK't) :: ((NT
         Coq_expression'nt) :: ((T LBRACK't) :: ((NT
         Coq_postfix_expression'nt) :: []))))) (fun _ index _ expr -> ((INDEX
         ((fst expr), (fst index))), (snd expr)))
     | Prod'postfix_expression'0 ->
       Obj.magic box (Coq_postfix_expression'nt, ((NT
         Coq_primary_expression'nt) :: [])) (fun expr -> expr)
     | Prod'pointer'3 ->
       Obj.magic box (Coq_pointer'nt, ((NT Coq_pointer'nt) :: ((NT
         Coq_type_qualifier_list'nt) :: ((T STAR't) :: []))))
         (fun pt quallst loc -> ((fun typ -> PTR ((rev' quallst),
         (fst pt typ))), loc))
     | Prod'pointer'2 ->
       Obj.magic box (Coq_pointer'nt, ((NT Coq_pointer'nt) :: ((T
         STAR't) :: []))) (fun pt loc -> ((fun typ -> PTR ([],
         (fst pt typ))), loc))
     | Prod'pointer'1 ->
       Obj.magic box (Coq_pointer'nt, ((NT Coq_type_qualifier_list'nt) :: ((T
         STAR't) :: []))) (fun quallst loc -> ((fun typ -> PTR
         ((rev' quallst), typ)), loc))
     | Prod'pointer'0 ->
       Obj.magic box (Coq_pointer'nt, ((T STAR't) :: [])) (fun loc ->
         ((fun typ -> PTR ([], typ)), loc))
     | Prod'parameter_type_list'1 ->
       Obj.magic box (Coq_parameter_type_list'nt, ((T ELLIPSIS't) :: ((T
         COMMA't) :: ((NT Coq_parameter_list'nt) :: [])))) (fun _ _ lst ->
         ((rev' lst), true))
     | Prod'parameter_type_list'0 ->
       Obj.magic box (Coq_parameter_type_list'nt, ((NT
         Coq_parameter_list'nt) :: [])) (fun lst -> ((rev' lst), false))
     | Prod'parameter_list'1 ->
       Obj.magic box (Coq_parameter_list'nt, ((NT
         Coq_parameter_declaration'nt) :: ((T COMMA't) :: ((NT
         Coq_parameter_list'nt) :: [])))) (fun paramt _ paramq ->
         paramt :: paramq)
     | Prod'parameter_list'0 ->
       Obj.magic box (Coq_parameter_list'nt, ((NT
         Coq_parameter_declaration'nt) :: [])) (fun param -> param :: [])
     | Prod'parameter_declaration'2 ->
       Obj.magic box (Coq_parameter_declaration'nt, ((NT
         Coq_declaration_specifiers'nt) :: [])) (fun specs -> PARAM
         ((fst specs), None, JUSTBASE, [], (snd specs)))
     | Prod'parameter_declaration'1 ->
       Obj.magic box (Coq_parameter_declaration'nt, ((NT
         Coq_abstract_declarator'nt) :: ((NT
         Coq_declaration_specifiers'nt) :: []))) (fun decl specs -> PARAM
         ((fst specs), None, decl, [], (snd specs)))
     | Prod'parameter_declaration'0 ->
       Obj.magic box (Coq_parameter_declaration'nt, ((NT
         Coq_declarator'nt) :: ((NT Coq_declaration_specifiers'nt) :: [])))
         (fun decl specs ->
         let Name (name, typ, attr, _) = decl in
         PARAM ((fst specs), (Some name), typ, attr, (snd specs)))
     | Prod'multiplicative_expression'3 ->
       Obj.magic box (Coq_multiplicative_expression'nt, ((NT
         Coq_cast_expression'nt) :: ((T PERCENT't) :: ((NT
         Coq_multiplicative_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (MOD, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'multiplicative_expression'2 ->
       Obj.magic box (Coq_multiplicative_expression'nt, ((NT
         Coq_cast_expression'nt) :: ((T SLASH't) :: ((NT
         Coq_multiplicative_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (DIV, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'multiplicative_expression'1 ->
       Obj.magic box (Coq_multiplicative_expression'nt, ((NT
         Coq_cast_expression'nt) :: ((T STAR't) :: ((NT
         Coq_multiplicative_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (MUL, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'multiplicative_expression'0 ->
       Obj.magic box (Coq_multiplicative_expression'nt, ((NT
         Coq_cast_expression'nt) :: [])) (fun expr -> expr)
     | Prod'logical_OR_expression'1 ->
       Obj.magic box (Coq_logical_OR_expression'nt, ((NT
         Coq_logical_AND_expression'nt) :: ((T BARBAR't) :: ((NT
         Coq_logical_OR_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (OR, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'logical_OR_expression'0 ->
       Obj.magic box (Coq_logical_OR_expression'nt, ((NT
         Coq_logical_AND_expression'nt) :: [])) (fun expr -> expr)
     | Prod'logical_AND_expression'1 ->
       Obj.magic box (Coq_logical_AND_expression'nt, ((NT
         Coq_inclusive_OR_expression'nt) :: ((T ANDAND't) :: ((NT
         Coq_logical_AND_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (AND, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'logical_AND_expression'0 ->
       Obj.magic box (Coq_logical_AND_expression'nt, ((NT
         Coq_inclusive_OR_expression'nt) :: [])) (fun expr -> expr)
     | Prod'labeled_statement_statement_safe_'2 ->
       Obj.magic box (Coq_labeled_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T COLON't) :: ((T DEFAULT't) :: []))))
         (fun stmt _ loc -> DEFAULT (stmt, loc))
     | Prod'labeled_statement_statement_safe_'1 ->
       Obj.magic box (Coq_labeled_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T COLON't) :: ((NT
         Coq_constant_expression'nt) :: ((T CASE't) :: [])))))
         (fun stmt _ expr loc -> CASE ((fst expr), stmt, loc))
     | Prod'labeled_statement_statement_safe_'0 ->
       Obj.magic box (Coq_labeled_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T COLON't) :: ((T
         OTHER_NAME't) :: [])))) (fun stmt _ lbl -> LABEL ((fst lbl), stmt,
         (snd lbl)))
     | Prod'labeled_statement_statement_dangerous_'2 ->
       Obj.magic box (Coq_labeled_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T COLON't) :: ((T
         DEFAULT't) :: [])))) (fun stmt _ loc -> DEFAULT (stmt, loc))
     | Prod'labeled_statement_statement_dangerous_'1 ->
       Obj.magic box (Coq_labeled_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T COLON't) :: ((NT
         Coq_constant_expression'nt) :: ((T CASE't) :: [])))))
         (fun stmt _ expr loc -> CASE ((fst expr), stmt, loc))
     | Prod'labeled_statement_statement_dangerous_'0 ->
       Obj.magic box (Coq_labeled_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T COLON't) :: ((T
         OTHER_NAME't) :: [])))) (fun stmt _ lbl -> LABEL ((fst lbl), stmt,
         (snd lbl)))
     | Prod'jump_statement'4 ->
       Obj.magic box (Coq_jump_statement'nt, ((T SEMICOLON't) :: ((T
         RETURN't) :: []))) (fun _ loc -> RETURN (None, loc))
     | Prod'jump_statement'3 ->
       Obj.magic box (Coq_jump_statement'nt, ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T RETURN't) :: [])))) (fun _ expr loc ->
         RETURN ((Some (fst expr)), loc))
     | Prod'jump_statement'2 ->
       Obj.magic box (Coq_jump_statement'nt, ((T SEMICOLON't) :: ((T
         BREAK't) :: []))) (fun _ loc -> BREAK loc)
     | Prod'jump_statement'1 ->
       Obj.magic box (Coq_jump_statement'nt, ((T SEMICOLON't) :: ((T
         CONTINUE't) :: []))) (fun _ loc -> CONTINUE loc)
     | Prod'jump_statement'0 ->
       Obj.magic box (Coq_jump_statement'nt, ((T SEMICOLON't) :: ((T
         OTHER_NAME't) :: ((T GOTO't) :: [])))) (fun _ id loc -> GOTO
         ((fst id), loc))
     | Prod'iteration_statement_statement_safe_'13 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((T SEMICOLON't) :: ((T
         SEMICOLON't) :: ((T LPAREN't) :: ((T FOR't) :: [])))))))
         (fun stmt _ _ _ _ loc -> FOR (None, None, None, stmt, loc))
     | Prod'iteration_statement_statement_safe_'12 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((T SEMICOLON't) :: ((NT
         Coq_declaration'nt) :: ((T LPAREN't) :: ((T FOR't) :: [])))))))
         (fun stmt _ _ decl1 _ loc -> FOR ((Some (FC_DECL decl1)), None,
         None, stmt, loc))
     | Prod'iteration_statement_statement_safe_'11 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((T SEMICOLON't) :: ((T
         SEMICOLON't) :: ((NT Coq_expression'nt) :: ((T LPAREN't) :: ((T
         FOR't) :: [])))))))) (fun stmt _ _ _ expr1 _ loc -> FOR ((Some
         (FC_EXP (fst expr1))), None, None, stmt, loc))
     | Prod'iteration_statement_statement_safe_'10 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((T LPAREN't) :: ((T
         FOR't) :: [])))))))) (fun stmt _ _ expr2 _ _ loc -> FOR (None, (Some
         (fst expr2)), None, stmt, loc))
     | Prod'iteration_statement_statement_safe_'9 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((NT Coq_declaration'nt) :: ((T
         LPAREN't) :: ((T FOR't) :: []))))))))
         (fun stmt _ _ expr2 decl1 _ loc -> FOR ((Some (FC_DECL decl1)),
         (Some (fst expr2)), None, stmt, loc))
     | Prod'iteration_statement_statement_safe_'8 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T FOR't) :: [])))))))))
         (fun stmt _ _ expr2 _ expr1 _ loc -> FOR ((Some (FC_EXP
         (fst expr1))), (Some (fst expr2)), None, stmt, loc))
     | Prod'iteration_statement_statement_safe_'7 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((T SEMICOLON't) :: ((T
         LPAREN't) :: ((T FOR't) :: [])))))))) (fun stmt _ expr3 _ _ _ loc ->
         FOR (None, None, (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_safe_'6 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_declaration'nt) :: ((T LPAREN't) :: ((T FOR't) :: []))))))))
         (fun stmt _ expr3 _ decl1 _ loc -> FOR ((Some (FC_DECL decl1)),
         None, (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_safe_'5 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T FOR't) :: [])))))))))
         (fun stmt _ expr3 _ _ expr1 _ loc -> FOR ((Some (FC_EXP
         (fst expr1))), None, (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_safe_'4 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((T LPAREN't) :: ((T
         FOR't) :: []))))))))) (fun stmt _ expr3 _ expr2 _ _ loc -> FOR
         (None, (Some (fst expr2)), (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_safe_'3 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((NT Coq_declaration'nt) :: ((T
         LPAREN't) :: ((T FOR't) :: [])))))))))
         (fun stmt _ expr3 _ expr2 decl1 _ loc -> FOR ((Some (FC_DECL
         decl1)), (Some (fst expr2)), (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_safe_'2 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T FOR't) :: []))))))))))
         (fun stmt _ expr3 _ expr2 _ expr1 _ loc -> FOR ((Some (FC_EXP
         (fst expr1))), (Some (fst expr2)), (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_safe_'1 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((T
         SEMICOLON't) :: ((T RPAREN't) :: ((NT Coq_expression'nt) :: ((T
         LPAREN't) :: ((T WHILE't) :: ((NT Coq_statement_dangerous'nt) :: ((T
         DO't) :: [])))))))) (fun _ _ expr _ _ stmt loc -> DOWHILE
         ((fst expr), stmt, loc))
     | Prod'iteration_statement_statement_safe_'0 ->
       Obj.magic box (Coq_iteration_statement_statement_safe_'nt, ((NT
         Coq_statement_safe'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T WHILE't) :: []))))))
         (fun stmt _ expr _ loc -> WHILE ((fst expr), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'13 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((T
         SEMICOLON't) :: ((T SEMICOLON't) :: ((T LPAREN't) :: ((T
         FOR't) :: []))))))) (fun stmt _ _ _ _ loc -> FOR (None, None, None,
         stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'12 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((T
         SEMICOLON't) :: ((NT Coq_declaration'nt) :: ((T LPAREN't) :: ((T
         FOR't) :: []))))))) (fun stmt _ _ decl1 _ loc -> FOR ((Some (FC_DECL
         decl1)), None, None, stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'11 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((T
         SEMICOLON't) :: ((T SEMICOLON't) :: ((NT Coq_expression'nt) :: ((T
         LPAREN't) :: ((T FOR't) :: [])))))))) (fun stmt _ _ _ expr1 _ loc ->
         FOR ((Some (FC_EXP (fst expr1))), None, None, stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'10 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((T
         SEMICOLON't) :: ((NT Coq_expression'nt) :: ((T SEMICOLON't) :: ((T
         LPAREN't) :: ((T FOR't) :: [])))))))) (fun stmt _ _ expr2 _ _ loc ->
         FOR (None, (Some (fst expr2)), None, stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'9 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((T
         SEMICOLON't) :: ((NT Coq_expression'nt) :: ((NT
         Coq_declaration'nt) :: ((T LPAREN't) :: ((T FOR't) :: []))))))))
         (fun stmt _ _ expr2 decl1 _ loc -> FOR ((Some (FC_DECL decl1)),
         (Some (fst expr2)), None, stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'8 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((T
         SEMICOLON't) :: ((NT Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T FOR't) :: [])))))))))
         (fun stmt _ _ expr2 _ expr1 _ loc -> FOR ((Some (FC_EXP
         (fst expr1))), (Some (fst expr2)), None, stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'7 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((T SEMICOLON't) :: ((T
         LPAREN't) :: ((T FOR't) :: [])))))))) (fun stmt _ expr3 _ _ _ loc ->
         FOR (None, None, (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'6 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_declaration'nt) :: ((T LPAREN't) :: ((T FOR't) :: []))))))))
         (fun stmt _ expr3 _ decl1 _ loc -> FOR ((Some (FC_DECL decl1)),
         None, (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'5 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T FOR't) :: [])))))))))
         (fun stmt _ expr3 _ _ expr1 _ loc -> FOR ((Some (FC_EXP
         (fst expr1))), None, (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'4 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((T LPAREN't) :: ((T
         FOR't) :: []))))))))) (fun stmt _ expr3 _ expr2 _ _ loc -> FOR
         (None, (Some (fst expr2)), (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'3 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((NT Coq_declaration'nt) :: ((T
         LPAREN't) :: ((T FOR't) :: [])))))))))
         (fun stmt _ expr3 _ expr2 decl1 _ loc -> FOR ((Some (FC_DECL
         decl1)), (Some (fst expr2)), (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'2 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T FOR't) :: []))))))))))
         (fun stmt _ expr3 _ expr2 _ expr1 _ loc -> FOR ((Some (FC_EXP
         (fst expr1))), (Some (fst expr2)), (Some (fst expr3)), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'1 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((T
         SEMICOLON't) :: ((T RPAREN't) :: ((NT Coq_expression'nt) :: ((T
         LPAREN't) :: ((T WHILE't) :: ((NT Coq_statement_dangerous'nt) :: ((T
         DO't) :: [])))))))) (fun _ _ expr _ _ stmt loc -> DOWHILE
         ((fst expr), stmt, loc))
     | Prod'iteration_statement_statement_dangerous_'0 ->
       Obj.magic box (Coq_iteration_statement_statement_dangerous_'nt, ((NT
         Coq_statement_dangerous'nt) :: ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T WHILE't) :: []))))))
         (fun stmt _ expr _ loc -> WHILE ((fst expr), stmt, loc))
     | Prod'initializer_list'3 ->
       Obj.magic box (Coq_initializer_list'nt, ((NT
         Coq_c_initializer'nt) :: ((T COMMA't) :: ((NT
         Coq_initializer_list'nt) :: [])))) (fun init _ initq -> ([],
         init) :: initq)
     | Prod'initializer_list'2 ->
       Obj.magic box (Coq_initializer_list'nt, ((NT
         Coq_c_initializer'nt) :: ((NT Coq_designation'nt) :: ((T
         COMMA't) :: ((NT Coq_initializer_list'nt) :: [])))))
         (fun init design _ initq -> (design, init) :: initq)
     | Prod'initializer_list'1 ->
       Obj.magic box (Coq_initializer_list'nt, ((NT
         Coq_c_initializer'nt) :: [])) (fun init -> ([], init) :: [])
     | Prod'initializer_list'0 ->
       Obj.magic box (Coq_initializer_list'nt, ((NT
         Coq_c_initializer'nt) :: ((NT Coq_designation'nt) :: [])))
         (fun init design -> (design, init) :: [])
     | Prod'init_declarator_list'1 ->
       Obj.magic box (Coq_init_declarator_list'nt, ((NT
         Coq_init_declarator'nt) :: ((T COMMA't) :: ((NT
         Coq_init_declarator_list'nt) :: [])))) (fun initt _ initq ->
         initt :: initq)
     | Prod'init_declarator_list'0 ->
       Obj.magic box (Coq_init_declarator_list'nt, ((NT
         Coq_init_declarator'nt) :: [])) (fun init -> init :: [])
     | Prod'init_declarator'1 ->
       Obj.magic box (Coq_init_declarator'nt, ((NT
         Coq_c_initializer'nt) :: ((T EQ't) :: ((NT
         Coq_declarator'nt) :: [])))) (fun init _ name -> Init_name (name,
         init))
     | Prod'init_declarator'0 ->
       Obj.magic box (Coq_init_declarator'nt, ((NT Coq_declarator'nt) :: []))
         (fun name -> Init_name (name, NO_INIT))
     | Prod'inclusive_OR_expression'1 ->
       Obj.magic box (Coq_inclusive_OR_expression'nt, ((NT
         Coq_exclusive_OR_expression'nt) :: ((T BAR't) :: ((NT
         Coq_inclusive_OR_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (BOR, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'inclusive_OR_expression'0 ->
       Obj.magic box (Coq_inclusive_OR_expression'nt, ((NT
         Coq_exclusive_OR_expression'nt) :: [])) (fun expr -> expr)
     | Prod'identifier_list'1 ->
       Obj.magic box (Coq_identifier_list'nt, ((T VAR_NAME't) :: ((T
         COMMA't) :: ((NT Coq_identifier_list'nt) :: [])))) (fun id _ idl ->
         (fst id) :: idl)
     | Prod'identifier_list'0 ->
       Obj.magic box (Coq_identifier_list'nt, ((T VAR_NAME't) :: []))
         (fun id -> (fst id) :: [])
     | Prod'gcc_attribute_word'2 ->
       Obj.magic box (Coq_gcc_attribute_word'nt, ((T PACKED't) :: []))
         (fun _ -> GCC_ATTR_PACKED)
     | Prod'gcc_attribute_word'1 ->
       Obj.magic box (Coq_gcc_attribute_word'nt, ((T CONST't) :: []))
         (fun _ -> GCC_ATTR_CONST)
     | Prod'gcc_attribute_word'0 ->
       Obj.magic box (Coq_gcc_attribute_word'nt, ((T OTHER_NAME't) :: []))
         (fun i -> GCC_ATTR_IDENT (fst i))
     | Prod'gcc_attribute_list'1 ->
       Obj.magic box (Coq_gcc_attribute_list'nt, ((NT
         Coq_gcc_attribute'nt) :: ((T COMMA't) :: ((NT
         Coq_gcc_attribute_list'nt) :: [])))) (fun t0 _ q -> t0 :: q)
     | Prod'gcc_attribute_list'0 ->
       Obj.magic box (Coq_gcc_attribute_list'nt, ((NT
         Coq_gcc_attribute'nt) :: [])) (fun a -> a :: [])
     | Prod'gcc_attribute'3 ->
       Obj.magic box (Coq_gcc_attribute'nt, ((T RPAREN't) :: ((NT
         Coq_argument_expression_list'nt) :: ((T LPAREN't) :: ((NT
         Coq_gcc_attribute_word'nt) :: []))))) (fun _ args _ w ->
         GCC_ATTR_ARGS (w, args))
     | Prod'gcc_attribute'2 ->
       Obj.magic box (Coq_gcc_attribute'nt, ((T RPAREN't) :: ((T
         LPAREN't) :: ((NT Coq_gcc_attribute_word'nt) :: [])))) (fun _ _ w ->
         GCC_ATTR_ARGS (w, []))
     | Prod'gcc_attribute'1 ->
       Obj.magic box (Coq_gcc_attribute'nt, ((NT
         Coq_gcc_attribute_word'nt) :: [])) (fun w -> GCC_ATTR_NOARGS w)
     | Prod'gcc_attribute'0 ->
       Obj.magic box (Coq_gcc_attribute'nt, []) GCC_ATTR_EMPTY
     | Prod'function_specifier'1 ->
       Obj.magic box (Coq_function_specifier'nt, ((T NORETURN't) :: []))
         (fun loc -> (NORETURN, loc))
     | Prod'function_specifier'0 ->
       Obj.magic box (Coq_function_specifier'nt, ((T INLINE't) :: []))
         (fun loc -> (INLINE, loc))
     | Prod'function_definition'1 ->
       Obj.magic box (Coq_function_definition'nt, ((NT
         Coq_compound_statement'nt) :: ((NT Coq_declarator'nt) :: ((NT
         Coq_declaration_specifiers'nt) :: [])))) (fun stmt decl specs ->
         FUNDEF ((fst specs), decl, [], stmt, (snd specs)))
     | Prod'function_definition'0 ->
       Obj.magic box (Coq_function_definition'nt, ((NT
         Coq_compound_statement'nt) :: ((NT Coq_declaration_list'nt) :: ((NT
         Coq_declarator_noattrend'nt) :: ((NT
         Coq_declaration_specifiers'nt) :: [])))))
         (fun stmt dlist decl specs -> FUNDEF ((fst specs), decl,
         (rev' dlist), stmt, (snd specs)))
     | Prod'external_declaration'2 ->
       Obj.magic box (Coq_external_declaration'nt, ((T PRAGMA't) :: []))
         (fun p0 -> PRAGMA ((fst p0), (snd p0)))
     | Prod'external_declaration'1 ->
       Obj.magic box (Coq_external_declaration'nt, ((NT
         Coq_declaration'nt) :: [])) (fun def -> def)
     | Prod'external_declaration'0 ->
       Obj.magic box (Coq_external_declaration'nt, ((NT
         Coq_function_definition'nt) :: [])) (fun def -> def)
     | Prod'expression_statement'1 ->
       Obj.magic box (Coq_expression_statement'nt, ((T SEMICOLON't) :: []))
         (fun loc -> NOP loc)
     | Prod'expression_statement'0 ->
       Obj.magic box (Coq_expression_statement'nt, ((T SEMICOLON't) :: ((NT
         Coq_expression'nt) :: []))) (fun _ expr -> COMPUTATION ((fst expr),
         (snd expr)))
     | Prod'expression'1 ->
       Obj.magic box (Coq_expression'nt, ((NT
         Coq_assignment_expression'nt) :: ((T COMMA't) :: ((NT
         Coq_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY (COMMA,
         (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'expression'0 ->
       Obj.magic box (Coq_expression'nt, ((NT
         Coq_assignment_expression'nt) :: [])) (fun expr -> expr)
     | Prod'exclusive_OR_expression'1 ->
       Obj.magic box (Coq_exclusive_OR_expression'nt, ((NT
         AND_expression'nt) :: ((T HAT't) :: ((NT
         Coq_exclusive_OR_expression'nt) :: [])))) (fun expr2 _ expr1 ->
         ((BINARY (XOR, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'exclusive_OR_expression'0 ->
       Obj.magic box (Coq_exclusive_OR_expression'nt, ((NT
         AND_expression'nt) :: [])) (fun expr -> expr)
     | Prod'equality_expression'2 ->
       Obj.magic box (Coq_equality_expression'nt, ((NT
         Coq_relational_expression'nt) :: ((T NEQ't) :: ((NT
         Coq_equality_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY
         (NE, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'equality_expression'1 ->
       Obj.magic box (Coq_equality_expression'nt, ((NT
         Coq_relational_expression'nt) :: ((T EQEQ't) :: ((NT
         Coq_equality_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY
         (EQ, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'equality_expression'0 ->
       Obj.magic box (Coq_equality_expression'nt, ((NT
         Coq_relational_expression'nt) :: [])) (fun expr -> expr)
     | Prod'enumerator_list'1 ->
       Obj.magic box (Coq_enumerator_list'nt, ((NT Coq_enumerator'nt) :: ((T
         COMMA't) :: ((NT Coq_enumerator_list'nt) :: []))))
         (fun enumst _ enumsq -> enumst :: enumsq)
     | Prod'enumerator_list'0 ->
       Obj.magic box (Coq_enumerator_list'nt, ((NT Coq_enumerator'nt) :: []))
         (fun enum -> enum :: [])
     | Prod'enumerator'1 ->
       Obj.magic box (Coq_enumerator'nt, ((NT
         Coq_constant_expression'nt) :: ((T EQ't) :: ((NT
         Coq_enumeration_constant'nt) :: [])))) (fun expr _ cst ->
         (((fst cst), (Some (fst expr))), (snd cst)))
     | Prod'enumerator'0 ->
       Obj.magic box (Coq_enumerator'nt, ((NT
         Coq_enumeration_constant'nt) :: [])) (fun cst -> (((fst cst), None),
         (snd cst)))
     | Prod'enumeration_constant'0 ->
       Obj.magic box (Coq_enumeration_constant'nt, ((T VAR_NAME't) :: []))
         (fun cst -> cst)
     | Prod'enum_specifier'4 ->
       Obj.magic box (Coq_enum_specifier'nt, ((T OTHER_NAME't) :: ((NT
         Coq_attribute_specifier_list'nt) :: ((T ENUM't) :: []))))
         (fun name attrs loc -> ((Tenum ((Some (fst name)), None, attrs)),
         loc))
     | Prod'enum_specifier'3 ->
       Obj.magic box (Coq_enum_specifier'nt, ((T RBRACE't) :: ((T
         COMMA't) :: ((NT Coq_enumerator_list'nt) :: ((T LBRACE't) :: ((NT
         Coq_attribute_specifier_list'nt) :: ((T ENUM't) :: [])))))))
         (fun _ _ enum_list _ attrs loc -> ((Tenum (None, (Some
         (rev' enum_list)), attrs)), loc))
     | Prod'enum_specifier'2 ->
       Obj.magic box (Coq_enum_specifier'nt, ((T RBRACE't) :: ((T
         COMMA't) :: ((NT Coq_enumerator_list'nt) :: ((T LBRACE't) :: ((T
         OTHER_NAME't) :: ((NT Coq_attribute_specifier_list'nt) :: ((T
         ENUM't) :: [])))))))) (fun _ _ enum_list _ name attrs loc -> ((Tenum
         ((Some (fst name)), (Some (rev' enum_list)), attrs)), loc))
     | Prod'enum_specifier'1 ->
       Obj.magic box (Coq_enum_specifier'nt, ((T RBRACE't) :: ((NT
         Coq_enumerator_list'nt) :: ((T LBRACE't) :: ((NT
         Coq_attribute_specifier_list'nt) :: ((T ENUM't) :: []))))))
         (fun _ enum_list _ attrs loc -> ((Tenum (None, (Some
         (rev' enum_list)), attrs)), loc))
     | Prod'enum_specifier'0 ->
       Obj.magic box (Coq_enum_specifier'nt, ((T RBRACE't) :: ((NT
         Coq_enumerator_list'nt) :: ((T LBRACE't) :: ((T
         OTHER_NAME't) :: ((NT Coq_attribute_specifier_list'nt) :: ((T
         ENUM't) :: []))))))) (fun _ enum_list _ name attrs loc -> ((Tenum
         ((Some (fst name)), (Some (rev' enum_list)), attrs)), loc))
     | Prod'direct_declarator'8 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RPAREN't) :: ((NT
         Coq_identifier_list'nt) :: ((T LPAREN't) :: ((NT
         Coq_direct_declarator'nt) :: []))))) (fun _ params _ decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, (PROTO_OLD (typ, (rev' params))), attr, loc))
     | Prod'direct_declarator'7 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RPAREN't) :: ((T
         LPAREN't) :: ((NT Coq_direct_declarator'nt) :: []))))
         (fun _ _ decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, (PROTO_OLD (typ, [])), attr, loc))
     | Prod'direct_declarator'6 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RPAREN't) :: ((NT
         Coq_parameter_type_list'nt) :: ((T LPAREN't) :: ((NT
         Coq_direct_declarator'nt) :: []))))) (fun _ params _ decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, (PROTO (typ, params)), attr, loc))
     | Prod'direct_declarator'5 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RBRACK't) :: ((T
         LBRACK't) :: ((NT Coq_direct_declarator'nt) :: []))))
         (fun _ _ decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, (ARRAY (typ, [], None)), attr, loc))
     | Prod'direct_declarator'4 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RBRACK't) :: ((NT
         Coq_type_qualifier_list'nt) :: ((T LBRACK't) :: ((NT
         Coq_direct_declarator'nt) :: []))))) (fun _ quallst _ decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, (ARRAY (typ, (rev' quallst), None)), attr, loc))
     | Prod'direct_declarator'3 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RBRACK't) :: ((NT
         Coq_assignment_expression'nt) :: ((T LBRACK't) :: ((NT
         Coq_direct_declarator'nt) :: []))))) (fun _ expr _ decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, (ARRAY (typ, [], (Some (fst expr)))), attr, loc))
     | Prod'direct_declarator'2 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RBRACK't) :: ((NT
         Coq_assignment_expression'nt) :: ((NT
         Coq_type_qualifier_list'nt) :: ((T LBRACK't) :: ((NT
         Coq_direct_declarator'nt) :: [])))))) (fun _ expr quallst _ decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, (ARRAY (typ, (rev' quallst), (Some (fst expr)))), attr,
         loc))
     | Prod'direct_declarator'1 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T RPAREN't) :: ((NT
         Coq_declarator'nt) :: ((T LPAREN't) :: [])))) (fun _ decl _ -> decl)
     | Prod'direct_declarator'0 ->
       Obj.magic box (Coq_direct_declarator'nt, ((T VAR_NAME't) :: []))
         (fun id -> Name ((fst id), JUSTBASE, [], (snd id)))
     | Prod'direct_abstract_declarator'12 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T RPAREN't) :: ((T
         LPAREN't) :: []))) (fun _ _ -> PROTO (JUSTBASE, ([], false)))
     | Prod'direct_abstract_declarator'11 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T RPAREN't) :: ((T
         LPAREN't) :: ((NT Coq_direct_abstract_declarator'nt) :: []))))
         (fun _ _ typ -> PROTO (typ, ([], false)))
     | Prod'direct_abstract_declarator'10 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RPAREN't) :: ((NT Coq_parameter_type_list'nt) :: ((T
         LPAREN't) :: [])))) (fun _ params _ -> PROTO (JUSTBASE, params))
     | Prod'direct_abstract_declarator'9 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RPAREN't) :: ((NT Coq_parameter_type_list'nt) :: ((T
         LPAREN't) :: ((NT Coq_direct_abstract_declarator'nt) :: [])))))
         (fun _ params _ typ -> PROTO (typ, params))
     | Prod'direct_abstract_declarator'8 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T RBRACK't) :: ((T
         LBRACK't) :: []))) (fun _ _ -> ARRAY (JUSTBASE, [], None))
     | Prod'direct_abstract_declarator'7 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T RBRACK't) :: ((T
         LBRACK't) :: ((NT Coq_direct_abstract_declarator'nt) :: []))))
         (fun _ _ typ -> ARRAY (typ, [], None))
     | Prod'direct_abstract_declarator'6 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RBRACK't) :: ((NT Coq_type_qualifier_list'nt) :: ((T
         LBRACK't) :: [])))) (fun _ cvspec _ -> ARRAY (JUSTBASE, cvspec,
         None))
     | Prod'direct_abstract_declarator'5 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RBRACK't) :: ((NT Coq_type_qualifier_list'nt) :: ((T
         LBRACK't) :: ((NT Coq_direct_abstract_declarator'nt) :: [])))))
         (fun _ cvspec _ typ -> ARRAY (typ, cvspec, None))
     | Prod'direct_abstract_declarator'4 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RBRACK't) :: ((NT Coq_assignment_expression'nt) :: ((T
         LBRACK't) :: [])))) (fun _ expr _ -> ARRAY (JUSTBASE, [], (Some
         (fst expr))))
     | Prod'direct_abstract_declarator'3 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RBRACK't) :: ((NT Coq_assignment_expression'nt) :: ((T
         LBRACK't) :: ((NT Coq_direct_abstract_declarator'nt) :: [])))))
         (fun _ expr _ typ -> ARRAY (typ, [], (Some (fst expr))))
     | Prod'direct_abstract_declarator'2 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RBRACK't) :: ((NT Coq_assignment_expression'nt) :: ((NT
         Coq_type_qualifier_list'nt) :: ((T LBRACK't) :: [])))))
         (fun _ expr cvspec _ -> ARRAY (JUSTBASE, cvspec, (Some (fst expr))))
     | Prod'direct_abstract_declarator'1 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RBRACK't) :: ((NT Coq_assignment_expression'nt) :: ((NT
         Coq_type_qualifier_list'nt) :: ((T LBRACK't) :: ((NT
         Coq_direct_abstract_declarator'nt) :: []))))))
         (fun _ expr cvspec _ typ -> ARRAY (typ, cvspec, (Some (fst expr))))
     | Prod'direct_abstract_declarator'0 ->
       Obj.magic box (Coq_direct_abstract_declarator'nt, ((T
         RPAREN't) :: ((NT Coq_abstract_declarator'nt) :: ((T
         LPAREN't) :: [])))) (fun _ typ _ -> typ)
     | Prod'designator_list'1 ->
       Obj.magic box (Coq_designator_list'nt, ((NT Coq_designator'nt) :: ((NT
         Coq_designator_list'nt) :: []))) (fun designt designq ->
         designt :: designq)
     | Prod'designator_list'0 ->
       Obj.magic box (Coq_designator_list'nt, ((NT Coq_designator'nt) :: []))
         (fun design -> design :: [])
     | Prod'designator'1 ->
       Obj.magic box (Coq_designator'nt, ((T OTHER_NAME't) :: ((T
         DOT't) :: []))) (fun id _ -> INFIELD_INIT (fst id))
     | Prod'designator'0 ->
       Obj.magic box (Coq_designator'nt, ((T RBRACK't) :: ((NT
         Coq_constant_expression'nt) :: ((T LBRACK't) :: []))))
         (fun _ expr _ -> ATINDEX_INIT (fst expr))
     | Prod'designation'0 ->
       Obj.magic box (Coq_designation'nt, ((T EQ't) :: ((NT
         Coq_designator_list'nt) :: []))) (fun _ -> rev')
     | Prod'declarator_noattrend'1 ->
       Obj.magic box (Coq_declarator_noattrend'nt, ((NT
         Coq_direct_declarator'nt) :: ((NT Coq_pointer'nt) :: [])))
         (fun decl pt ->
         let Name (name, typ, attr, _) = decl in
         Name (name, (fst pt typ), attr, (snd pt)))
     | Prod'declarator_noattrend'0 ->
       Obj.magic box (Coq_declarator_noattrend'nt, ((NT
         Coq_direct_declarator'nt) :: [])) (fun decl -> decl)
     | Prod'declarator'0 ->
       Obj.magic box (Coq_declarator'nt, ((NT
         Coq_attribute_specifier_list'nt) :: ((NT
         Coq_declarator_noattrend'nt) :: []))) (fun attrs decl ->
         let Name (name, typ, attr, loc) = decl in
         Name (name, typ, (app attr attrs), loc))
     | Prod'declaration_specifiers_typespec_opt'4 ->
       Obj.magic box (Coq_declaration_specifiers_typespec_opt'nt, []) []
     | Prod'declaration_specifiers_typespec_opt'3 ->
       Obj.magic box (Coq_declaration_specifiers_typespec_opt'nt, ((NT
         Coq_declaration_specifiers_typespec_opt'nt) :: ((NT
         Coq_function_specifier'nt) :: []))) (fun rest func -> (SpecFunction
         (fst func)) :: rest)
     | Prod'declaration_specifiers_typespec_opt'2 ->
       Obj.magic box (Coq_declaration_specifiers_typespec_opt'nt, ((NT
         Coq_declaration_specifiers_typespec_opt'nt) :: ((NT
         Coq_type_qualifier'nt) :: []))) (fun rest qual -> (SpecCV
         (fst qual)) :: rest)
     | Prod'declaration_specifiers_typespec_opt'1 ->
       Obj.magic box (Coq_declaration_specifiers_typespec_opt'nt, ((NT
         Coq_declaration_specifiers_typespec_opt'nt) :: ((NT
         Coq_type_specifier'nt) :: []))) (fun rest typ -> (SpecType
         (fst typ)) :: rest)
     | Prod'declaration_specifiers_typespec_opt'0 ->
       Obj.magic box (Coq_declaration_specifiers_typespec_opt'nt, ((NT
         Coq_declaration_specifiers_typespec_opt'nt) :: ((NT
         Coq_storage_class_specifier'nt) :: []))) (fun rest storage ->
         (SpecStorage (fst storage)) :: rest)
     | Prod'declaration_specifiers'4 ->
       Obj.magic box (Coq_declaration_specifiers'nt, ((NT
         Coq_declaration_specifiers'nt) :: ((NT
         Coq_function_specifier'nt) :: []))) (fun rest func ->
         (((SpecFunction (fst func)) :: (fst rest)), (snd func)))
     | Prod'declaration_specifiers'3 ->
       Obj.magic box (Coq_declaration_specifiers'nt, ((NT
         Coq_declaration_specifiers'nt) :: ((NT
         Coq_attribute_specifier'nt) :: []))) (fun rest attr -> (((SpecCV
         (CV_ATTR (fst attr))) :: (fst rest)), (snd attr)))
     | Prod'declaration_specifiers'2 ->
       Obj.magic box (Coq_declaration_specifiers'nt, ((NT
         Coq_declaration_specifiers'nt) :: ((NT
         Coq_type_qualifier_noattr'nt) :: []))) (fun rest qual -> (((SpecCV
         (fst qual)) :: (fst rest)), (snd qual)))
     | Prod'declaration_specifiers'1 ->
       Obj.magic box (Coq_declaration_specifiers'nt, ((NT
         Coq_declaration_specifiers_typespec_opt'nt) :: ((NT
         Coq_type_specifier'nt) :: []))) (fun rest typ -> (((SpecType
         (fst typ)) :: rest), (snd typ)))
     | Prod'declaration_specifiers'0 ->
       Obj.magic box (Coq_declaration_specifiers'nt, ((NT
         Coq_declaration_specifiers'nt) :: ((NT
         Coq_storage_class_specifier'nt) :: []))) (fun rest storage ->
         (((SpecStorage (fst storage)) :: (fst rest)), (snd storage)))
     | Prod'declaration_list'1 ->
       Obj.magic box (Coq_declaration_list'nt, ((NT
         Coq_declaration'nt) :: ((NT Coq_declaration_list'nt) :: [])))
         (fun d dl -> d :: dl)
     | Prod'declaration_list'0 ->
       Obj.magic box (Coq_declaration_list'nt, ((NT
         Coq_declaration'nt) :: [])) (fun d -> d :: [])
     | Prod'declaration'1 ->
       Obj.magic box (Coq_declaration'nt, ((T SEMICOLON't) :: ((NT
         Coq_declaration_specifiers'nt) :: []))) (fun _ decspec -> DECDEF
         (((fst decspec), []), (snd decspec)))
     | Prod'declaration'0 ->
       Obj.magic box (Coq_declaration'nt, ((T SEMICOLON't) :: ((NT
         Coq_init_declarator_list'nt) :: ((NT
         Coq_declaration_specifiers'nt) :: [])))) (fun _ decls decspec ->
         DECDEF (((fst decspec), (rev' decls)), (snd decspec)))
     | Prod'constant_expression'0 ->
       Obj.magic box (Coq_constant_expression'nt, ((NT
         Coq_conditional_expression'nt) :: [])) (fun expr -> expr)
     | Prod'conditional_expression'1 ->
       Obj.magic box (Coq_conditional_expression'nt, ((NT
         Coq_conditional_expression'nt) :: ((T COLON't) :: ((NT
         Coq_expression'nt) :: ((T QUESTION't) :: ((NT
         Coq_logical_OR_expression'nt) :: []))))))
         (fun expr3 _ expr2 _ expr1 -> ((QUESTION ((fst expr1), (fst expr2),
         (fst expr3))), (snd expr1)))
     | Prod'conditional_expression'0 ->
       Obj.magic box (Coq_conditional_expression'nt, ((NT
         Coq_logical_OR_expression'nt) :: [])) (fun expr -> expr)
     | Prod'compound_statement'1 ->
       Obj.magic box (Coq_compound_statement'nt, ((T RBRACE't) :: ((T
         LBRACE't) :: []))) (fun _ loc -> BLOCK ([], loc))
     | Prod'compound_statement'0 ->
       Obj.magic box (Coq_compound_statement'nt, ((T RBRACE't) :: ((NT
         Coq_block_item_list'nt) :: ((T LBRACE't) :: [])))) (fun _ lst loc ->
         BLOCK ((rev' lst), loc))
     | Prod'cast_expression'1 ->
       Obj.magic box (Coq_cast_expression'nt, ((NT
         Coq_cast_expression'nt) :: ((T RPAREN't) :: ((NT
         Coq_type_name'nt) :: ((T LPAREN't) :: []))))) (fun expr _ typ loc ->
         ((CAST (typ, (SINGLE_INIT (fst expr)))), loc))
     | Prod'cast_expression'0 ->
       Obj.magic box (Coq_cast_expression'nt, ((NT
         Coq_unary_expression'nt) :: [])) (fun expr -> expr)
     | Prod'c_initializer'2 ->
       Obj.magic box (Coq_c_initializer'nt, ((T RBRACE't) :: ((T
         COMMA't) :: ((NT Coq_initializer_list'nt) :: ((T
         LBRACE't) :: []))))) (fun _ _ init _ -> COMPOUND_INIT (rev' init))
     | Prod'c_initializer'1 ->
       Obj.magic box (Coq_c_initializer'nt, ((T RBRACE't) :: ((NT
         Coq_initializer_list'nt) :: ((T LBRACE't) :: [])))) (fun _ init _ ->
         COMPOUND_INIT (rev' init))
     | Prod'c_initializer'0 ->
       Obj.magic box (Coq_c_initializer'nt, ((NT
         Coq_assignment_expression'nt) :: [])) (fun expr -> SINGLE_INIT
         (fst expr))
     | Prod'block_item_list'1 ->
       Obj.magic box (Coq_block_item_list'nt, ((NT Coq_block_item'nt) :: ((NT
         Coq_block_item_list'nt) :: []))) (fun stmtt stmtq -> stmtt :: stmtq)
     | Prod'block_item_list'0 ->
       Obj.magic box (Coq_block_item_list'nt, ((NT Coq_block_item'nt) :: []))
         (fun stmt -> stmt :: [])
     | Prod'block_item'2 ->
       Obj.magic box (Coq_block_item'nt, ((T PRAGMA't) :: [])) (fun p0 ->
         DEFINITION (PRAGMA ((fst p0), (snd p0))))
     | Prod'block_item'1 ->
       Obj.magic box (Coq_block_item'nt, ((NT
         Coq_statement_dangerous'nt) :: [])) (fun stmt -> stmt)
     | Prod'block_item'0 ->
       Obj.magic box (Coq_block_item'nt, ((NT Coq_declaration'nt) :: []))
         (fun decl -> DEFINITION decl)
     | Prod'attribute_specifier_list'1 ->
       Obj.magic box (Coq_attribute_specifier_list'nt, ((NT
         Coq_attribute_specifier_list'nt) :: ((NT
         Coq_attribute_specifier'nt) :: []))) (fun attrs attr ->
         (fst attr) :: attrs)
     | Prod'attribute_specifier_list'0 ->
       Obj.magic box (Coq_attribute_specifier_list'nt, []) []
     | Prod'attribute_specifier'3 ->
       Obj.magic box (Coq_attribute_specifier'nt, ((T RPAREN't) :: ((NT
         Coq_type_name'nt) :: ((T LPAREN't) :: ((T ALIGNAS't) :: [])))))
         (fun _ typ _ loc -> ((ALIGNAS_ATTR (((TYPE_ALIGNOF typ) :: []),
         loc)), loc))
     | Prod'attribute_specifier'2 ->
       Obj.magic box (Coq_attribute_specifier'nt, ((T RPAREN't) :: ((NT
         Coq_argument_expression_list'nt) :: ((T LPAREN't) :: ((T
         ALIGNAS't) :: []))))) (fun _ args _ loc -> ((ALIGNAS_ATTR
         ((rev' args), loc)), loc))
     | Prod'attribute_specifier'1 ->
       Obj.magic box (Coq_attribute_specifier'nt, ((T RPAREN't) :: ((NT
         Coq_argument_expression_list'nt) :: ((T LPAREN't) :: ((T
         PACKED't) :: []))))) (fun _ args _ loc -> ((PACKED_ATTR
         ((rev' args), loc)), loc))
     | Prod'attribute_specifier'0 ->
       Obj.magic box (Coq_attribute_specifier'nt, ((T RPAREN't) :: ((T
         RPAREN't) :: ((NT Coq_gcc_attribute_list'nt) :: ((T LPAREN't) :: ((T
         LPAREN't) :: ((T ATTRIBUTE't) :: []))))))) (fun _ _ attr _ _ loc ->
         ((GCC_ATTR ((rev' attr), loc)), loc))
     | Prod'assignment_operator'10 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T AND_ASSIGN't) :: []))
         (fun _ -> BAND_ASSIGN)
     | Prod'assignment_operator'9 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T OR_ASSIGN't) :: []))
         (fun _ -> BOR_ASSIGN)
     | Prod'assignment_operator'8 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T XOR_ASSIGN't) :: []))
         (fun _ -> XOR_ASSIGN)
     | Prod'assignment_operator'7 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T RIGHT_ASSIGN't) :: []))
         (fun _ -> SHR_ASSIGN)
     | Prod'assignment_operator'6 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T LEFT_ASSIGN't) :: []))
         (fun _ -> SHL_ASSIGN)
     | Prod'assignment_operator'5 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T SUB_ASSIGN't) :: []))
         (fun _ -> SUB_ASSIGN)
     | Prod'assignment_operator'4 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T ADD_ASSIGN't) :: []))
         (fun _ -> ADD_ASSIGN)
     | Prod'assignment_operator'3 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T MOD_ASSIGN't) :: []))
         (fun _ -> MOD_ASSIGN)
     | Prod'assignment_operator'2 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T DIV_ASSIGN't) :: []))
         (fun _ -> DIV_ASSIGN)
     | Prod'assignment_operator'1 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T MUL_ASSIGN't) :: []))
         (fun _ -> MUL_ASSIGN)
     | Prod'assignment_operator'0 ->
       Obj.magic box (Coq_assignment_operator'nt, ((T EQ't) :: [])) (fun _ ->
         ASSIGN)
     | Prod'assignment_expression'1 ->
       Obj.magic box (Coq_assignment_expression'nt, ((NT
         Coq_assignment_expression'nt) :: ((NT
         Coq_assignment_operator'nt) :: ((NT
         Coq_unary_expression'nt) :: [])))) (fun expr2 op expr1 -> ((BINARY
         (op, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'assignment_expression'0 ->
       Obj.magic box (Coq_assignment_expression'nt, ((NT
         Coq_conditional_expression'nt) :: [])) (fun expr -> expr)
     | Prod'asm_statement'0 ->
       Obj.magic box (Coq_asm_statement'nt, ((T SEMICOLON't) :: ((T
         RPAREN't) :: ((NT Coq_asm_arguments'nt) :: ((T
         STRING_LITERAL't) :: ((T LPAREN't) :: ((NT
         Coq_asm_attributes'nt) :: ((T ASM't) :: []))))))))
         (fun _ _ args template _ attr loc ->
         let (p0, _) = template in
         let (wide, chars) = p0 in
         let (p1, flags) = args in
         let (outputs, inputs) = p1 in
         ASM (attr, wide, chars, outputs, inputs, flags, loc))
     | Prod'asm_operands_ne'1 ->
       Obj.magic box (Coq_asm_operands_ne'nt, ((NT
         Coq_asm_operand'nt) :: [])) (fun o -> o :: [])
     | Prod'asm_operands_ne'0 ->
       Obj.magic box (Coq_asm_operands_ne'nt, ((NT Coq_asm_operand'nt) :: ((T
         COMMA't) :: ((NT Coq_asm_operands_ne'nt) :: [])))) (fun o _ ol ->
         o :: ol)
     | Prod'asm_operands'1 ->
       Obj.magic box (Coq_asm_operands'nt, ((NT
         Coq_asm_operands_ne'nt) :: [])) rev'
     | Prod'asm_operands'0 -> Obj.magic box (Coq_asm_operands'nt, []) []
     | Prod'asm_operand'0 ->
       Obj.magic box (Coq_asm_operand'nt, ((T RPAREN't) :: ((NT
         Coq_expression'nt) :: ((T LPAREN't) :: ((T STRING_LITERAL't) :: ((NT
         Coq_asm_op_name'nt) :: [])))))) (fun _ e _ cstr n ->
         let (p0, _) = cstr in
         let (wide, s) = p0 in ASMOPERAND (n, wide, s, (fst e)))
     | Prod'asm_op_name'1 ->
       Obj.magic box (Coq_asm_op_name'nt, ((T RBRACK't) :: ((T
         OTHER_NAME't) :: ((T LBRACK't) :: [])))) (fun _ n _ -> Some 
         (fst n))
     | Prod'asm_op_name'0 -> Obj.magic box (Coq_asm_op_name'nt, []) None
     | Prod'asm_flags'1 ->
       Obj.magic box (Coq_asm_flags'nt, ((NT Coq_asm_flags'nt) :: ((T
         COMMA't) :: ((T STRING_LITERAL't) :: [])))) (fun fl _ f ->
         let (p0, _) = f in let (wide, s) = p0 in (wide, s) :: fl)
     | Prod'asm_flags'0 ->
       Obj.magic box (Coq_asm_flags'nt, ((T STRING_LITERAL't) :: []))
         (fun f -> let (p0, _) = f in let (wide, s) = p0 in (wide, s) :: [])
     | Prod'asm_attributes'2 ->
       Obj.magic box (Coq_asm_attributes'nt, ((NT
         Coq_asm_attributes'nt) :: ((T VOLATILE't) :: []))) (fun attr _ ->
         CV_VOLATILE :: attr)
     | Prod'asm_attributes'1 ->
       Obj.magic box (Coq_asm_attributes'nt, ((NT
         Coq_asm_attributes'nt) :: ((T CONST't) :: []))) (fun attr _ ->
         CV_CONST :: attr)
     | Prod'asm_attributes'0 -> Obj.magic box (Coq_asm_attributes'nt, []) []
     | Prod'asm_arguments'3 ->
       Obj.magic box (Coq_asm_arguments'nt, ((NT Coq_asm_flags'nt) :: ((T
         COLON't) :: ((NT Coq_asm_operands'nt) :: ((T COLON't) :: ((NT
         Coq_asm_operands'nt) :: ((T COLON't) :: [])))))))
         (fun f _ i _ o _ -> ((o, i), f))
     | Prod'asm_arguments'2 ->
       Obj.magic box (Coq_asm_arguments'nt, ((NT Coq_asm_operands'nt) :: ((T
         COLON't) :: ((NT Coq_asm_operands'nt) :: ((T COLON't) :: [])))))
         (fun i _ o _ -> ((o, i), []))
     | Prod'asm_arguments'1 ->
       Obj.magic box (Coq_asm_arguments'nt, ((NT Coq_asm_operands'nt) :: ((T
         COLON't) :: []))) (fun o _ -> ((o, []), []))
     | Prod'asm_arguments'0 ->
       Obj.magic box (Coq_asm_arguments'nt, []) (([], []), [])
     | Prod'argument_expression_list'1 ->
       Obj.magic box (Coq_argument_expression_list'nt, ((NT
         Coq_assignment_expression'nt) :: ((T COMMA't) :: ((NT
         Coq_argument_expression_list'nt) :: [])))) (fun exprt _ exprq ->
         (fst exprt) :: exprq)
     | Prod'argument_expression_list'0 ->
       Obj.magic box (Coq_argument_expression_list'nt, ((NT
         Coq_assignment_expression'nt) :: [])) (fun expr -> (fst expr) :: [])
     | Prod'additive_expression'2 ->
       Obj.magic box (Coq_additive_expression'nt, ((NT
         Coq_multiplicative_expression'nt) :: ((T MINUS't) :: ((NT
         Coq_additive_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY
         (SUB, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'additive_expression'1 ->
       Obj.magic box (Coq_additive_expression'nt, ((NT
         Coq_multiplicative_expression'nt) :: ((T PLUS't) :: ((NT
         Coq_additive_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY
         (ADD, (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'additive_expression'0 ->
       Obj.magic box (Coq_additive_expression'nt, ((NT
         Coq_multiplicative_expression'nt) :: [])) (fun expr -> expr)
     | Prod'abstract_declarator'2 ->
       Obj.magic box (Coq_abstract_declarator'nt, ((NT
         Coq_direct_abstract_declarator'nt) :: [])) (fun typ -> typ)
     | Prod'abstract_declarator'1 ->
       Obj.magic box (Coq_abstract_declarator'nt, ((NT
         Coq_direct_abstract_declarator'nt) :: ((NT Coq_pointer'nt) :: [])))
         (fun typ pt -> fst pt typ)
     | Prod'abstract_declarator'0 ->
       Obj.magic box (Coq_abstract_declarator'nt, ((NT
         Coq_pointer'nt) :: [])) (fun pt -> fst pt JUSTBASE)
     | Prod'AND_expression'1 ->
       Obj.magic box (AND_expression'nt, ((NT
         Coq_equality_expression'nt) :: ((T AND't) :: ((NT
         AND_expression'nt) :: [])))) (fun expr2 _ expr1 -> ((BINARY (BAND,
         (fst expr1), (fst expr2))), (snd expr1)))
     | Prod'AND_expression'0 ->
       Obj.magic box (AND_expression'nt, ((NT
         Coq_equality_expression'nt) :: [])) (fun expr -> expr))

  (** val prod_lhs : production -> nonterminal **)

  let prod_lhs p =
    fst (projT1 (prod_contents p))

  (** val prod_rhs_rev : production -> symbol list **)

  let prod_rhs_rev p =
    snd (projT1 (prod_contents p))

  (** val prod_action : production -> symbol_semantic_type arrows_left **)

  let prod_action p =
    projT2 (prod_contents p)

  type token = (terminal, symbol_semantic_type) sigT

  type parse_tree =
  | Terminal_pt of terminal * symbol_semantic_type
  | Non_terminal_pt of production * token list * tuple * parse_tree_list
  and parse_tree_list =
  | Nil_ptl
  | Cons_ptl of symbol * token list * symbol_semantic_type * parse_tree
     * symbol list * token list * tuple * parse_tree_list

  (** val parse_tree_rect :
      (terminal -> symbol_semantic_type -> 'a1) -> (production -> token list
      -> tuple -> parse_tree_list -> 'a1) -> symbol -> token list ->
      symbol_semantic_type -> parse_tree -> 'a1 **)

  let parse_tree_rect f f0 _ _ _ = function
  | Terminal_pt (x, x0) -> f x x0
  | Non_terminal_pt (x, x0, x1, x2) -> f0 x x0 x1 x2

  (** val parse_tree_rec :
      (terminal -> symbol_semantic_type -> 'a1) -> (production -> token list
      -> tuple -> parse_tree_list -> 'a1) -> symbol -> token list ->
      symbol_semantic_type -> parse_tree -> 'a1 **)

  let parse_tree_rec f f0 _ _ _ = function
  | Terminal_pt (x, x0) -> f x x0
  | Non_terminal_pt (x, x0, x1, x2) -> f0 x x0 x1 x2

  (** val parse_tree_list_rect :
      'a1 -> (symbol -> token list -> symbol_semantic_type -> parse_tree ->
      symbol list -> token list -> tuple -> parse_tree_list -> 'a1 -> 'a1) ->
      symbol list -> token list -> tuple -> parse_tree_list -> 'a1 **)

  let rec parse_tree_list_rect f f0 _ _ _ = function
  | Nil_ptl -> f
  | Cons_ptl (head_symbolt, wordt, semantic_valuet, p0, head_symbolsq, wordq,
              semantic_valuesq, p1) ->
    f0 head_symbolt wordt semantic_valuet p0 head_symbolsq wordq
      semantic_valuesq p1
      (parse_tree_list_rect f f0 head_symbolsq wordq semantic_valuesq p1)

  (** val parse_tree_list_rec :
      'a1 -> (symbol -> token list -> symbol_semantic_type -> parse_tree ->
      symbol list -> token list -> tuple -> parse_tree_list -> 'a1 -> 'a1) ->
      symbol list -> token list -> tuple -> parse_tree_list -> 'a1 **)

  let rec parse_tree_list_rec f f0 _ _ _ = function
  | Nil_ptl -> f
  | Cons_ptl (head_symbolt, wordt, semantic_valuet, p0, head_symbolsq, wordq,
              semantic_valuesq, p1) ->
    f0 head_symbolt wordt semantic_valuet p0 head_symbolsq wordq
      semantic_valuesq p1
      (parse_tree_list_rec f f0 head_symbolsq wordq semantic_valuesq p1)

  (** val pt_size :
      symbol -> token list -> symbol_semantic_type -> parse_tree -> nat **)

  let rec pt_size _ _ _ = function
  | Terminal_pt (_, _) -> S O
  | Non_terminal_pt (p, word, semantic_values, l) ->
    S (ptl_size (rev (prod_rhs_rev p)) word semantic_values l)

  (** val ptl_size :
      symbol list -> token list -> tuple -> parse_tree_list -> nat **)

  and ptl_size _ _ _ = function
  | Nil_ptl -> O
  | Cons_ptl (head_symbolt, wordt, semantic_valuet, t0, head_symbolsq, wordq,
              semantic_valuesq, q) ->
    add (pt_size head_symbolt wordt semantic_valuet t0)
      (ptl_size head_symbolsq wordq semantic_valuesq q)
 end
module Coq__1 = Gram

module Aut =
 struct
  module Gram = Gram

  module GramDefs = Gram

  (** val nullable_nterm : Coq__1.nonterminal -> bool **)

  let nullable_nterm = function
  | Coq__1.Coq_asm_arguments'nt -> true
  | Coq__1.Coq_asm_attributes'nt -> true
  | Coq__1.Coq_asm_op_name'nt -> true
  | Coq__1.Coq_asm_operands'nt -> true
  | Coq__1.Coq_attribute_specifier_list'nt -> true
  | Coq__1.Coq_declaration_specifiers_typespec_opt'nt -> true
  | Coq__1.Coq_gcc_attribute'nt -> true
  | Coq__1.Coq_gcc_attribute_list'nt -> true
  | Coq__1.Coq_struct_declaration_list'nt -> true
  | _ -> false

  (** val first_nterm : Coq__1.nonterminal -> Coq__1.terminal list **)

  let first_nterm = function
  | Coq__1.Coq_abstract_declarator'nt ->
    Coq__1.STAR't :: (Coq__1.LPAREN't :: (Coq__1.LBRACK't :: []))
  | Coq__1.Coq_asm_arguments'nt -> Coq__1.COLON't :: []
  | Coq__1.Coq_asm_attributes'nt ->
    Coq__1.VOLATILE't :: (Coq__1.CONST't :: [])
  | Coq__1.Coq_asm_flags'nt -> Coq__1.STRING_LITERAL't :: []
  | Coq__1.Coq_asm_op_name'nt -> Coq__1.LBRACK't :: []
  | Coq__1.Coq_asm_operand'nt ->
    Coq__1.STRING_LITERAL't :: (Coq__1.LBRACK't :: [])
  | Coq__1.Coq_asm_operands'nt ->
    Coq__1.STRING_LITERAL't :: (Coq__1.LBRACK't :: [])
  | Coq__1.Coq_asm_operands_ne'nt ->
    Coq__1.STRING_LITERAL't :: (Coq__1.LBRACK't :: [])
  | Coq__1.Coq_asm_statement'nt -> Coq__1.ASM't :: []
  | Coq__1.Coq_assignment_operator'nt ->
    Coq__1.XOR_ASSIGN't :: (Coq__1.SUB_ASSIGN't :: (Coq__1.RIGHT_ASSIGN't :: (Coq__1.OR_ASSIGN't :: (Coq__1.MUL_ASSIGN't :: (Coq__1.MOD_ASSIGN't :: (Coq__1.LEFT_ASSIGN't :: (Coq__1.EQ't :: (Coq__1.DIV_ASSIGN't :: (Coq__1.AND_ASSIGN't :: (Coq__1.ADD_ASSIGN't :: []))))))))))
  | Coq__1.Coq_attribute_specifier'nt ->
    Coq__1.PACKED't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))
  | Coq__1.Coq_attribute_specifier_list'nt ->
    Coq__1.PACKED't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))
  | Coq__1.Coq_block_item'nt ->
    Coq__1.WHILE't :: (Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.VAR_NAME't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.TILDE't :: (Coq__1.SWITCH't :: (Coq__1.STRUCT't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STATIC't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.SEMICOLON't :: (Coq__1.RETURN't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PRAGMA't :: (Coq__1.PLUS't :: (Coq__1.PACKED't :: (Coq__1.OTHER_NAME't :: (Coq__1.NORETURN't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.LONG't :: (Coq__1.LBRACE't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.INC't :: (Coq__1.IF't :: (Coq__1.GOTO't :: (Coq__1.FOR't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.DO't :: (Coq__1.DEFAULT't :: (Coq__1.DEC't :: (Coq__1.CONTINUE't :: (Coq__1.CONSTANT't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.CASE't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BREAK't :: (Coq__1.BANG't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ASM't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  | Coq__1.Coq_block_item_list'nt ->
    Coq__1.WHILE't :: (Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.VAR_NAME't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.TILDE't :: (Coq__1.SWITCH't :: (Coq__1.STRUCT't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STATIC't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.SEMICOLON't :: (Coq__1.RETURN't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PRAGMA't :: (Coq__1.PLUS't :: (Coq__1.PACKED't :: (Coq__1.OTHER_NAME't :: (Coq__1.NORETURN't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.LONG't :: (Coq__1.LBRACE't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.INC't :: (Coq__1.IF't :: (Coq__1.GOTO't :: (Coq__1.FOR't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.DO't :: (Coq__1.DEFAULT't :: (Coq__1.DEC't :: (Coq__1.CONTINUE't :: (Coq__1.CONSTANT't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.CASE't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BREAK't :: (Coq__1.BANG't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ASM't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  | Coq__1.Coq_c_initializer'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.TILDE't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.PLUS't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.LBRACE't :: (Coq__1.INC't :: (Coq__1.DEC't :: (Coq__1.CONSTANT't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BANG't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: []))))))))))))))))
  | Coq__1.Coq_compound_statement'nt -> Coq__1.LBRACE't :: []
  | Coq__1.Coq_declaration'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_declaration_list'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_declaration_specifiers'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_declaration_specifiers_typespec_opt'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_declarator'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STAR't :: (Coq__1.LPAREN't :: []))
  | Coq__1.Coq_declarator_noattrend'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STAR't :: (Coq__1.LPAREN't :: []))
  | Coq__1.Coq_designation'nt -> Coq__1.LBRACK't :: (Coq__1.DOT't :: [])
  | Coq__1.Coq_designator'nt -> Coq__1.LBRACK't :: (Coq__1.DOT't :: [])
  | Coq__1.Coq_designator_list'nt -> Coq__1.LBRACK't :: (Coq__1.DOT't :: [])
  | Coq__1.Coq_direct_abstract_declarator'nt ->
    Coq__1.LPAREN't :: (Coq__1.LBRACK't :: [])
  | Coq__1.Coq_direct_declarator'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.LPAREN't :: [])
  | Coq__1.Coq_enum_specifier'nt -> Coq__1.ENUM't :: []
  | Coq__1.Coq_enumeration_constant'nt -> Coq__1.VAR_NAME't :: []
  | Coq__1.Coq_enumerator'nt -> Coq__1.VAR_NAME't :: []
  | Coq__1.Coq_enumerator_list'nt -> Coq__1.VAR_NAME't :: []
  | Coq__1.Coq_expression_statement'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.TILDE't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.SEMICOLON't :: (Coq__1.PLUS't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.INC't :: (Coq__1.DEC't :: (Coq__1.CONSTANT't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BANG't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: []))))))))))))))))
  | Coq__1.Coq_external_declaration'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PRAGMA't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))))))))))))))))))))))))
  | Coq__1.Coq_function_definition'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_function_specifier'nt ->
    Coq__1.NORETURN't :: (Coq__1.INLINE't :: [])
  | Coq__1.Coq_gcc_attribute'nt ->
    Coq__1.PACKED't :: (Coq__1.OTHER_NAME't :: (Coq__1.CONST't :: []))
  | Coq__1.Coq_gcc_attribute_list'nt ->
    Coq__1.PACKED't :: (Coq__1.OTHER_NAME't :: (Coq__1.CONST't :: (Coq__1.COMMA't :: [])))
  | Coq__1.Coq_gcc_attribute_word'nt ->
    Coq__1.PACKED't :: (Coq__1.OTHER_NAME't :: (Coq__1.CONST't :: []))
  | Coq__1.Coq_identifier_list'nt -> Coq__1.VAR_NAME't :: []
  | Coq__1.Coq_init_declarator'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STAR't :: (Coq__1.LPAREN't :: []))
  | Coq__1.Coq_init_declarator_list'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STAR't :: (Coq__1.LPAREN't :: []))
  | Coq__1.Coq_initializer_list'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.TILDE't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.PLUS't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.LBRACK't :: (Coq__1.LBRACE't :: (Coq__1.INC't :: (Coq__1.DOT't :: (Coq__1.DEC't :: (Coq__1.CONSTANT't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BANG't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: []))))))))))))))))))
  | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
    Coq__1.WHILE't :: (Coq__1.FOR't :: (Coq__1.DO't :: []))
  | Coq__1.Coq_iteration_statement_statement_safe_'nt ->
    Coq__1.WHILE't :: (Coq__1.FOR't :: (Coq__1.DO't :: []))
  | Coq__1.Coq_jump_statement'nt ->
    Coq__1.RETURN't :: (Coq__1.GOTO't :: (Coq__1.CONTINUE't :: (Coq__1.BREAK't :: [])))
  | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
    Coq__1.OTHER_NAME't :: (Coq__1.DEFAULT't :: (Coq__1.CASE't :: []))
  | Coq__1.Coq_labeled_statement_statement_safe_'nt ->
    Coq__1.OTHER_NAME't :: (Coq__1.DEFAULT't :: (Coq__1.CASE't :: []))
  | Coq__1.Coq_parameter_declaration'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_parameter_list'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_parameter_type_list'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))
  | Coq__1.Coq_pointer'nt -> Coq__1.STAR't :: []
  | Coq__1.Coq_postfix_expression'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STRING_LITERAL't :: (Coq__1.LPAREN't :: (Coq__1.CONSTANT't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: [])))))
  | Coq__1.Coq_primary_expression'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STRING_LITERAL't :: (Coq__1.LPAREN't :: (Coq__1.CONSTANT't :: [])))
  | Coq__1.Coq_selection_statement_dangerous'nt ->
    Coq__1.SWITCH't :: (Coq__1.IF't :: [])
  | Coq__1.Coq_selection_statement_safe'nt ->
    Coq__1.SWITCH't :: (Coq__1.IF't :: [])
  | Coq__1.Coq_specifier_qualifier_list'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.STRUCT't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.PACKED't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.FLOAT't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))))))))))))))))
  | Coq__1.Coq_statement_dangerous'nt ->
    Coq__1.WHILE't :: (Coq__1.VAR_NAME't :: (Coq__1.TILDE't :: (Coq__1.SWITCH't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.SEMICOLON't :: (Coq__1.RETURN't :: (Coq__1.PLUS't :: (Coq__1.OTHER_NAME't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.LBRACE't :: (Coq__1.INC't :: (Coq__1.IF't :: (Coq__1.GOTO't :: (Coq__1.FOR't :: (Coq__1.DO't :: (Coq__1.DEFAULT't :: (Coq__1.DEC't :: (Coq__1.CONTINUE't :: (Coq__1.CONSTANT't :: (Coq__1.CASE't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BREAK't :: (Coq__1.BANG't :: (Coq__1.ASM't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: []))))))))))))))))))))))))))))))
  | Coq__1.Coq_statement_safe'nt ->
    Coq__1.WHILE't :: (Coq__1.VAR_NAME't :: (Coq__1.TILDE't :: (Coq__1.SWITCH't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.SEMICOLON't :: (Coq__1.RETURN't :: (Coq__1.PLUS't :: (Coq__1.OTHER_NAME't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.LBRACE't :: (Coq__1.INC't :: (Coq__1.IF't :: (Coq__1.GOTO't :: (Coq__1.FOR't :: (Coq__1.DO't :: (Coq__1.DEFAULT't :: (Coq__1.DEC't :: (Coq__1.CONTINUE't :: (Coq__1.CONSTANT't :: (Coq__1.CASE't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BREAK't :: (Coq__1.BANG't :: (Coq__1.ASM't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: []))))))))))))))))))))))))))))))
  | Coq__1.Coq_storage_class_specifier'nt ->
    Coq__1.TYPEDEF't :: (Coq__1.STATIC't :: (Coq__1.REGISTER't :: (Coq__1.EXTERN't :: (Coq__1.AUTO't :: []))))
  | Coq__1.Coq_struct_declaration'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.STRUCT't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.PACKED't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.FLOAT't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))))))))))))))))
  | Coq__1.Coq_struct_declaration_list'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.STRUCT't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.PACKED't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.FLOAT't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))))))))))))))))
  | Coq__1.Coq_struct_declarator'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STAR't :: (Coq__1.LPAREN't :: (Coq__1.COLON't :: [])))
  | Coq__1.Coq_struct_declarator_list'nt ->
    Coq__1.VAR_NAME't :: (Coq__1.STAR't :: (Coq__1.LPAREN't :: (Coq__1.COLON't :: [])))
  | Coq__1.Coq_struct_or_union'nt -> Coq__1.UNION't :: (Coq__1.STRUCT't :: [])
  | Coq__1.Coq_struct_or_union_specifier'nt ->
    Coq__1.UNION't :: (Coq__1.STRUCT't :: [])
  | Coq__1.Coq_translation_unit'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.SEMICOLON't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PRAGMA't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: []))))))))))))))))))))))))))))
  | Coq__1.Coq_translation_unit_file'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.TYPEDEF't :: (Coq__1.STRUCT't :: (Coq__1.STATIC't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.SEMICOLON't :: (Coq__1.RESTRICT't :: (Coq__1.REGISTER't :: (Coq__1.PRAGMA't :: (Coq__1.PACKED't :: (Coq__1.NORETURN't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.INLINE't :: (Coq__1.FLOAT't :: (Coq__1.EXTERN't :: (Coq__1.EOF't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.AUTO't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))))))))))))))))))))))))))
  | Coq__1.Coq_type_name'nt ->
    Coq__1.VOLATILE't :: (Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.STRUCT't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.RESTRICT't :: (Coq__1.PACKED't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.FLOAT't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CONST't :: (Coq__1.CHAR't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))))))))))))))))
  | Coq__1.Coq_type_qualifier'nt ->
    Coq__1.VOLATILE't :: (Coq__1.RESTRICT't :: (Coq__1.PACKED't :: (Coq__1.CONST't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))
  | Coq__1.Coq_type_qualifier_list'nt ->
    Coq__1.VOLATILE't :: (Coq__1.RESTRICT't :: (Coq__1.PACKED't :: (Coq__1.CONST't :: (Coq__1.ATTRIBUTE't :: (Coq__1.ALIGNAS't :: [])))))
  | Coq__1.Coq_type_qualifier_noattr'nt ->
    Coq__1.VOLATILE't :: (Coq__1.RESTRICT't :: (Coq__1.CONST't :: []))
  | Coq__1.Coq_type_specifier'nt ->
    Coq__1.VOID't :: (Coq__1.UNSIGNED't :: (Coq__1.UNION't :: (Coq__1.UNDERSCORE_BOOL't :: (Coq__1.TYPEDEF_NAME't :: (Coq__1.STRUCT't :: (Coq__1.SIGNED't :: (Coq__1.SHORT't :: (Coq__1.LONG't :: (Coq__1.INT't :: (Coq__1.FLOAT't :: (Coq__1.ENUM't :: (Coq__1.DOUBLE't :: (Coq__1.CHAR't :: [])))))))))))))
  | Coq__1.Coq_unary_operator'nt ->
    Coq__1.TILDE't :: (Coq__1.STAR't :: (Coq__1.PLUS't :: (Coq__1.MINUS't :: (Coq__1.BANG't :: (Coq__1.AND't :: [])))))
  | _ ->
    Coq__1.VAR_NAME't :: (Coq__1.TILDE't :: (Coq__1.STRING_LITERAL't :: (Coq__1.STAR't :: (Coq__1.SIZEOF't :: (Coq__1.PLUS't :: (Coq__1.MINUS't :: (Coq__1.LPAREN't :: (Coq__1.INC't :: (Coq__1.DEC't :: (Coq__1.CONSTANT't :: (Coq__1.BUILTIN_VA_ARG't :: (Coq__1.BUILTIN_OFFSETOF't :: (Coq__1.BANG't :: (Coq__1.AND't :: (Coq__1.ALIGNOF't :: [])))))))))))))))

  type noninitstate' =
  | Nis'613
  | Nis'612
  | Nis'611
  | Nis'610
  | Nis'609
  | Nis'608
  | Nis'607
  | Nis'606
  | Nis'605
  | Nis'604
  | Nis'603
  | Nis'602
  | Nis'601
  | Nis'600
  | Nis'599
  | Nis'598
  | Nis'597
  | Nis'596
  | Nis'595
  | Nis'594
  | Nis'593
  | Nis'592
  | Nis'591
  | Nis'590
  | Nis'589
  | Nis'588
  | Nis'587
  | Nis'586
  | Nis'585
  | Nis'584
  | Nis'583
  | Nis'582
  | Nis'581
  | Nis'580
  | Nis'579
  | Nis'578
  | Nis'577
  | Nis'576
  | Nis'575
  | Nis'574
  | Nis'573
  | Nis'572
  | Nis'571
  | Nis'570
  | Nis'569
  | Nis'568
  | Nis'567
  | Nis'566
  | Nis'565
  | Nis'564
  | Nis'563
  | Nis'562
  | Nis'561
  | Nis'560
  | Nis'559
  | Nis'558
  | Nis'557
  | Nis'556
  | Nis'555
  | Nis'554
  | Nis'553
  | Nis'552
  | Nis'551
  | Nis'550
  | Nis'549
  | Nis'548
  | Nis'547
  | Nis'546
  | Nis'545
  | Nis'544
  | Nis'543
  | Nis'542
  | Nis'541
  | Nis'540
  | Nis'539
  | Nis'538
  | Nis'537
  | Nis'536
  | Nis'535
  | Nis'534
  | Nis'533
  | Nis'532
  | Nis'531
  | Nis'530
  | Nis'529
  | Nis'528
  | Nis'527
  | Nis'526
  | Nis'525
  | Nis'524
  | Nis'523
  | Nis'522
  | Nis'521
  | Nis'520
  | Nis'519
  | Nis'518
  | Nis'517
  | Nis'516
  | Nis'515
  | Nis'514
  | Nis'513
  | Nis'512
  | Nis'511
  | Nis'510
  | Nis'509
  | Nis'508
  | Nis'507
  | Nis'506
  | Nis'505
  | Nis'504
  | Nis'503
  | Nis'502
  | Nis'501
  | Nis'500
  | Nis'499
  | Nis'498
  | Nis'497
  | Nis'496
  | Nis'495
  | Nis'494
  | Nis'493
  | Nis'492
  | Nis'491
  | Nis'490
  | Nis'489
  | Nis'488
  | Nis'487
  | Nis'486
  | Nis'485
  | Nis'484
  | Nis'483
  | Nis'482
  | Nis'481
  | Nis'480
  | Nis'479
  | Nis'478
  | Nis'477
  | Nis'476
  | Nis'475
  | Nis'474
  | Nis'473
  | Nis'472
  | Nis'471
  | Nis'470
  | Nis'469
  | Nis'468
  | Nis'467
  | Nis'466
  | Nis'465
  | Nis'464
  | Nis'463
  | Nis'462
  | Nis'461
  | Nis'460
  | Nis'459
  | Nis'458
  | Nis'457
  | Nis'456
  | Nis'455
  | Nis'454
  | Nis'453
  | Nis'452
  | Nis'451
  | Nis'450
  | Nis'449
  | Nis'448
  | Nis'447
  | Nis'446
  | Nis'445
  | Nis'444
  | Nis'443
  | Nis'442
  | Nis'441
  | Nis'440
  | Nis'439
  | Nis'438
  | Nis'437
  | Nis'436
  | Nis'435
  | Nis'434
  | Nis'433
  | Nis'432
  | Nis'431
  | Nis'430
  | Nis'429
  | Nis'428
  | Nis'427
  | Nis'426
  | Nis'425
  | Nis'424
  | Nis'423
  | Nis'422
  | Nis'421
  | Nis'420
  | Nis'419
  | Nis'418
  | Nis'417
  | Nis'416
  | Nis'415
  | Nis'414
  | Nis'413
  | Nis'412
  | Nis'411
  | Nis'410
  | Nis'409
  | Nis'408
  | Nis'407
  | Nis'406
  | Nis'405
  | Nis'404
  | Nis'403
  | Nis'402
  | Nis'401
  | Nis'400
  | Nis'399
  | Nis'398
  | Nis'397
  | Nis'396
  | Nis'395
  | Nis'394
  | Nis'393
  | Nis'392
  | Nis'391
  | Nis'390
  | Nis'389
  | Nis'388
  | Nis'387
  | Nis'386
  | Nis'385
  | Nis'384
  | Nis'383
  | Nis'382
  | Nis'381
  | Nis'380
  | Nis'379
  | Nis'378
  | Nis'377
  | Nis'376
  | Nis'375
  | Nis'374
  | Nis'373
  | Nis'372
  | Nis'371
  | Nis'370
  | Nis'369
  | Nis'368
  | Nis'367
  | Nis'366
  | Nis'365
  | Nis'364
  | Nis'363
  | Nis'362
  | Nis'361
  | Nis'360
  | Nis'358
  | Nis'357
  | Nis'356
  | Nis'355
  | Nis'354
  | Nis'353
  | Nis'352
  | Nis'351
  | Nis'350
  | Nis'349
  | Nis'348
  | Nis'347
  | Nis'346
  | Nis'345
  | Nis'344
  | Nis'343
  | Nis'342
  | Nis'341
  | Nis'340
  | Nis'339
  | Nis'338
  | Nis'337
  | Nis'336
  | Nis'335
  | Nis'334
  | Nis'333
  | Nis'332
  | Nis'331
  | Nis'330
  | Nis'329
  | Nis'328
  | Nis'327
  | Nis'326
  | Nis'325
  | Nis'324
  | Nis'323
  | Nis'322
  | Nis'321
  | Nis'320
  | Nis'319
  | Nis'318
  | Nis'317
  | Nis'316
  | Nis'315
  | Nis'314
  | Nis'313
  | Nis'312
  | Nis'311
  | Nis'310
  | Nis'309
  | Nis'308
  | Nis'307
  | Nis'306
  | Nis'305
  | Nis'304
  | Nis'303
  | Nis'302
  | Nis'301
  | Nis'300
  | Nis'299
  | Nis'298
  | Nis'297
  | Nis'296
  | Nis'295
  | Nis'294
  | Nis'293
  | Nis'292
  | Nis'291
  | Nis'290
  | Nis'289
  | Nis'288
  | Nis'287
  | Nis'286
  | Nis'285
  | Nis'284
  | Nis'283
  | Nis'282
  | Nis'281
  | Nis'280
  | Nis'279
  | Nis'278
  | Nis'277
  | Nis'276
  | Nis'275
  | Nis'274
  | Nis'273
  | Nis'272
  | Nis'271
  | Nis'270
  | Nis'269
  | Nis'268
  | Nis'267
  | Nis'266
  | Nis'265
  | Nis'264
  | Nis'263
  | Nis'262
  | Nis'261
  | Nis'260
  | Nis'259
  | Nis'258
  | Nis'257
  | Nis'256
  | Nis'255
  | Nis'254
  | Nis'253
  | Nis'252
  | Nis'251
  | Nis'250
  | Nis'249
  | Nis'248
  | Nis'247
  | Nis'246
  | Nis'245
  | Nis'244
  | Nis'243
  | Nis'242
  | Nis'241
  | Nis'240
  | Nis'239
  | Nis'238
  | Nis'237
  | Nis'236
  | Nis'235
  | Nis'234
  | Nis'233
  | Nis'232
  | Nis'231
  | Nis'230
  | Nis'229
  | Nis'228
  | Nis'227
  | Nis'226
  | Nis'225
  | Nis'224
  | Nis'223
  | Nis'222
  | Nis'221
  | Nis'220
  | Nis'219
  | Nis'218
  | Nis'217
  | Nis'216
  | Nis'215
  | Nis'214
  | Nis'213
  | Nis'212
  | Nis'211
  | Nis'210
  | Nis'209
  | Nis'208
  | Nis'207
  | Nis'206
  | Nis'205
  | Nis'204
  | Nis'203
  | Nis'202
  | Nis'201
  | Nis'200
  | Nis'199
  | Nis'198
  | Nis'197
  | Nis'196
  | Nis'195
  | Nis'194
  | Nis'193
  | Nis'192
  | Nis'191
  | Nis'190
  | Nis'189
  | Nis'188
  | Nis'187
  | Nis'186
  | Nis'185
  | Nis'184
  | Nis'183
  | Nis'182
  | Nis'181
  | Nis'180
  | Nis'179
  | Nis'178
  | Nis'177
  | Nis'176
  | Nis'175
  | Nis'174
  | Nis'173
  | Nis'172
  | Nis'171
  | Nis'170
  | Nis'169
  | Nis'168
  | Nis'167
  | Nis'166
  | Nis'165
  | Nis'164
  | Nis'163
  | Nis'162
  | Nis'161
  | Nis'160
  | Nis'159
  | Nis'158
  | Nis'157
  | Nis'156
  | Nis'155
  | Nis'154
  | Nis'153
  | Nis'152
  | Nis'151
  | Nis'150
  | Nis'149
  | Nis'148
  | Nis'147
  | Nis'146
  | Nis'145
  | Nis'144
  | Nis'143
  | Nis'142
  | Nis'141
  | Nis'140
  | Nis'139
  | Nis'138
  | Nis'137
  | Nis'136
  | Nis'135
  | Nis'134
  | Nis'133
  | Nis'132
  | Nis'131
  | Nis'130
  | Nis'129
  | Nis'128
  | Nis'127
  | Nis'126
  | Nis'125
  | Nis'124
  | Nis'123
  | Nis'122
  | Nis'121
  | Nis'120
  | Nis'119
  | Nis'118
  | Nis'117
  | Nis'116
  | Nis'115
  | Nis'114
  | Nis'113
  | Nis'112
  | Nis'111
  | Nis'110
  | Nis'109
  | Nis'108
  | Nis'107
  | Nis'106
  | Nis'105
  | Nis'104
  | Nis'103
  | Nis'102
  | Nis'101
  | Nis'100
  | Nis'99
  | Nis'98
  | Nis'97
  | Nis'96
  | Nis'95
  | Nis'94
  | Nis'93
  | Nis'92
  | Nis'91
  | Nis'90
  | Nis'89
  | Nis'88
  | Nis'87
  | Nis'86
  | Nis'85
  | Nis'84
  | Nis'83
  | Nis'82
  | Nis'81
  | Nis'80
  | Nis'79
  | Nis'78
  | Nis'77
  | Nis'76
  | Nis'75
  | Nis'74
  | Nis'73
  | Nis'72
  | Nis'71
  | Nis'70
  | Nis'69
  | Nis'68
  | Nis'67
  | Nis'66
  | Nis'65
  | Nis'64
  | Nis'63
  | Nis'62
  | Nis'61
  | Nis'60
  | Nis'59
  | Nis'58
  | Nis'57
  | Nis'56
  | Nis'55
  | Nis'54
  | Nis'53
  | Nis'52
  | Nis'51
  | Nis'50
  | Nis'49
  | Nis'48
  | Nis'47
  | Nis'46
  | Nis'45
  | Nis'44
  | Nis'43
  | Nis'42
  | Nis'41
  | Nis'40
  | Nis'39
  | Nis'38
  | Nis'37
  | Nis'36
  | Nis'35
  | Nis'34
  | Nis'33
  | Nis'32
  | Nis'31
  | Nis'30
  | Nis'29
  | Nis'28
  | Nis'27
  | Nis'26
  | Nis'25
  | Nis'24
  | Nis'23
  | Nis'22
  | Nis'21
  | Nis'20
  | Nis'19
  | Nis'18
  | Nis'17
  | Nis'16
  | Nis'15
  | Nis'14
  | Nis'13
  | Nis'12
  | Nis'11
  | Nis'10
  | Nis'9
  | Nis'8
  | Nis'7
  | Nis'6
  | Nis'5
  | Nis'4
  | Nis'3
  | Nis'2
  | Nis'1

  type noninitstate = noninitstate'

  (** val noninitstateNum : noninitstate coq_Numbered **)

  let noninitstateNum =
    { inj = (fun x ->
      match x with
      | Nis'613 -> coq_On
      | Nis'612 -> coq_In
      | Nis'611 -> twice coq_In
      | Nis'610 -> twice_plus_one coq_In
      | Nis'609 -> twice (twice coq_In)
      | Nis'608 -> twice_plus_one (twice coq_In)
      | Nis'607 -> twice (twice_plus_one coq_In)
      | Nis'606 -> twice_plus_one (twice_plus_one coq_In)
      | Nis'605 -> twice (twice (twice coq_In))
      | Nis'604 -> twice_plus_one (twice (twice coq_In))
      | Nis'603 -> twice (twice_plus_one (twice coq_In))
      | Nis'602 -> twice_plus_one (twice_plus_one (twice coq_In))
      | Nis'601 -> twice (twice (twice_plus_one coq_In))
      | Nis'600 -> twice_plus_one (twice (twice_plus_one coq_In))
      | Nis'599 -> twice (twice_plus_one (twice_plus_one coq_In))
      | Nis'598 -> twice_plus_one (twice_plus_one (twice_plus_one coq_In))
      | Nis'597 -> twice (twice (twice (twice coq_In)))
      | Nis'596 -> twice_plus_one (twice (twice (twice coq_In)))
      | Nis'595 -> twice (twice_plus_one (twice (twice coq_In)))
      | Nis'594 -> twice_plus_one (twice_plus_one (twice (twice coq_In)))
      | Nis'593 -> twice (twice (twice_plus_one (twice coq_In)))
      | Nis'592 -> twice_plus_one (twice (twice_plus_one (twice coq_In)))
      | Nis'591 -> twice (twice_plus_one (twice_plus_one (twice coq_In)))
      | Nis'590 ->
        twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))
      | Nis'589 -> twice (twice (twice (twice_plus_one coq_In)))
      | Nis'588 -> twice_plus_one (twice (twice (twice_plus_one coq_In)))
      | Nis'587 -> twice (twice_plus_one (twice (twice_plus_one coq_In)))
      | Nis'586 ->
        twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))
      | Nis'585 -> twice (twice (twice_plus_one (twice_plus_one coq_In)))
      | Nis'584 ->
        twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))
      | Nis'583 ->
        twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | Nis'582 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))
      | Nis'581 -> twice (twice (twice (twice (twice coq_In))))
      | Nis'580 -> twice_plus_one (twice (twice (twice (twice coq_In))))
      | Nis'579 -> twice (twice_plus_one (twice (twice (twice coq_In))))
      | Nis'578 ->
        twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))
      | Nis'577 -> twice (twice (twice_plus_one (twice (twice coq_In))))
      | Nis'576 ->
        twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))
      | Nis'575 ->
        twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | Nis'574 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice coq_In))))
      | Nis'573 -> twice (twice (twice (twice_plus_one (twice coq_In))))
      | Nis'572 ->
        twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))
      | Nis'571 ->
        twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | Nis'570 ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice coq_In))))
      | Nis'569 ->
        twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | Nis'568 ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice coq_In))))
      | Nis'567 ->
        twice
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | Nis'566 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In))))
      | Nis'565 -> twice (twice (twice (twice (twice_plus_one coq_In))))
      | Nis'564 ->
        twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))
      | Nis'563 ->
        twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | Nis'562 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one coq_In))))
      | Nis'561 ->
        twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | Nis'560 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one coq_In))))
      | Nis'559 ->
        twice
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | Nis'558 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In))))
      | Nis'557 ->
        twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | Nis'556 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one coq_In))))
      | Nis'555 ->
        twice
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | Nis'554 ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In))))
      | Nis'553 ->
        twice
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Nis'552 ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Nis'551 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Nis'550 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))
      | Nis'549 -> twice (twice (twice (twice (twice (twice coq_In)))))
      | Nis'548 ->
        twice_plus_one (twice (twice (twice (twice (twice coq_In)))))
      | Nis'547 ->
        twice (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | Nis'546 ->
        twice_plus_one (twice_plus_one (twice (twice (twice (twice coq_In)))))
      | Nis'545 ->
        twice (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | Nis'544 ->
        twice_plus_one (twice (twice_plus_one (twice (twice (twice coq_In)))))
      | Nis'543 ->
        twice (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | Nis'542 ->
        twice_plus_one
          (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))
      | Nis'541 ->
        twice (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | Nis'540 ->
        twice_plus_one (twice (twice (twice_plus_one (twice (twice coq_In)))))
      | Nis'539 ->
        twice (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | Nis'538 ->
        twice_plus_one
          (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))
      | Nis'537 ->
        twice (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Nis'536 ->
        twice_plus_one
          (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Nis'535 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Nis'534 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice coq_In)))))
      | Nis'533 ->
        twice (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | Nis'532 ->
        twice_plus_one (twice (twice (twice (twice_plus_one (twice coq_In)))))
      | Nis'531 ->
        twice (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | Nis'530 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))
      | Nis'529 ->
        twice (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Nis'528 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Nis'527 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Nis'526 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice coq_In)))))
      | Nis'525 ->
        twice (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'524 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'523 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'522 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'521 ->
        twice
          (twice
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'520 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'519 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'518 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice_plus_one (twice coq_In)))))
      | Nis'517 ->
        twice (twice (twice (twice (twice (twice_plus_one coq_In)))))
      | Nis'516 ->
        twice_plus_one (twice (twice (twice (twice (twice_plus_one coq_In)))))
      | Nis'515 ->
        twice (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))
      | Nis'514 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))
      | Nis'513 ->
        twice (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Nis'512 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Nis'511 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Nis'510 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one coq_In)))))
      | Nis'509 ->
        twice (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'508 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'507 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'506 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'505 ->
        twice
          (twice
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'504 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'503 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'502 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice_plus_one coq_In)))))
      | Nis'501 ->
        twice (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'500 ->
        twice_plus_one
          (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'499 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'498 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'497 ->
        twice
          (twice
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'496 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'495 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'494 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'493 ->
        twice
          (twice
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'492 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'491 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'490 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'489 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'488 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'487 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'486 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))
      | Nis'485 ->
        twice (twice (twice (twice (twice (twice (twice coq_In))))))
      | Nis'484 ->
        twice_plus_one (twice (twice (twice (twice (twice (twice coq_In))))))
      | Nis'483 ->
        twice (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))
      | Nis'482 ->
        twice_plus_one
          (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))
      | Nis'481 ->
        twice (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Nis'480 ->
        twice_plus_one
          (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Nis'479 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Nis'478 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice coq_In))))))
      | Nis'477 ->
        twice (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'476 ->
        twice_plus_one
          (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'475 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'474 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'473 ->
        twice
          (twice
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'472 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'471 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'470 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice_plus_one (twice (twice (twice coq_In))))))
      | Nis'469 ->
        twice (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'468 ->
        twice_plus_one
          (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'467 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'466 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'465 ->
        twice
          (twice
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'464 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'463 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'462 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice_plus_one (twice (twice coq_In))))))
      | Nis'461 ->
        twice
          (twice
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'460 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'459 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'458 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'457 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'456 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'455 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'454 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice coq_In))))))
      | Nis'453 ->
        twice (twice (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'452 ->
        twice_plus_one
          (twice (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'451 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'450 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'449 ->
        twice
          (twice
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'448 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'447 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'446 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice_plus_one (twice coq_In))))))
      | Nis'445 ->
        twice
          (twice
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'444 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'443 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'442 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'441 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'440 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'439 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'438 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice coq_In))))))
      | Nis'437 ->
        twice
          (twice
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'436 ->
        twice_plus_one
          (twice
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'435 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'434 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'433 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'432 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'431 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'430 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'429 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'428 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'427 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'426 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'425 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'424 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'423 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'422 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice coq_In))))))
      | Nis'421 ->
        twice (twice (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'420 ->
        twice_plus_one
          (twice (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'419 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'418 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'417 ->
        twice
          (twice
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'416 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'415 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'414 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice_plus_one coq_In))))))
      | Nis'413 ->
        twice
          (twice
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'412 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'411 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'410 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'409 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'408 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'407 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'406 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one coq_In))))))
      | Nis'405 ->
        twice
          (twice
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'404 ->
        twice_plus_one
          (twice
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'403 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'402 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'401 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'400 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'399 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'398 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'397 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'396 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'395 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'394 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'393 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'392 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'391 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'390 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one coq_In))))))
      | Nis'389 ->
        twice
          (twice
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'388 ->
        twice_plus_one
          (twice
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'387 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'386 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'385 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'384 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'383 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'382 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'381 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'380 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'379 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'378 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'377 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'376 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'375 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'374 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'373 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'372 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'371 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'370 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'369 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'368 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'367 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'366 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'365 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'364 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'363 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'362 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'361 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'360 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'358 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'357 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice_plus_one coq_In))))))
      | Nis'356 ->
        twice (twice (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'355 ->
        twice_plus_one
          (twice (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'354 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'353 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'352 ->
        twice
          (twice
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'351 ->
        twice_plus_one
          (twice
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'350 ->
        twice
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'349 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one (twice (twice (twice (twice (twice coq_In)))))))
      | Nis'348 ->
        twice
          (twice
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'347 ->
        twice_plus_one
          (twice
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'346 ->
        twice
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'345 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'344 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'343 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'342 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'341 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice coq_In)))))))
      | Nis'340 ->
        twice
          (twice
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'339 ->
        twice_plus_one
          (twice
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'338 ->
        twice
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'337 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'336 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'335 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'334 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'333 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'332 ->
        twice
          (twice
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'331 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'330 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'329 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'328 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'327 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'326 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'325 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice_plus_one (twice (twice (twice coq_In)))))))
      | Nis'324 ->
        twice
          (twice
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'323 ->
        twice_plus_one
          (twice
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'322 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'321 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'320 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'319 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'318 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'317 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'316 ->
        twice
          (twice
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'315 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'314 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'313 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'312 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'311 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'310 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'309 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice_plus_one (twice (twice coq_In)))))))
      | Nis'308 ->
        twice
          (twice
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'307 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'306 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'305 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'304 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'303 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'302 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'301 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'300 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'299 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'298 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'297 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'296 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'295 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'294 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'293 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))
      | Nis'292 ->
        twice
          (twice
            (twice (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'291 ->
        twice_plus_one
          (twice
            (twice (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'290 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'289 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'288 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'287 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'286 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'285 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'284 ->
        twice
          (twice
            (twice
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'283 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'282 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'281 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'280 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'279 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'278 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'277 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice_plus_one (twice coq_In)))))))
      | Nis'276 ->
        twice
          (twice
            (twice
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'275 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'274 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'273 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'272 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'271 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'270 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'269 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'268 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'267 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'266 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'265 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'264 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'263 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'262 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'261 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice_plus_one (twice coq_In)))))))
      | Nis'260 ->
        twice
          (twice
            (twice
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'259 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'258 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'257 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'256 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'255 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'254 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'253 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'252 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'251 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'250 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'249 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'248 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'247 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'246 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'245 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'244 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'243 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'242 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'241 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'240 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'239 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'238 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'237 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'236 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'235 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'234 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'233 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'232 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'231 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'230 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'229 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice coq_In)))))))
      | Nis'228 ->
        twice
          (twice
            (twice (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'227 ->
        twice_plus_one
          (twice
            (twice (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'226 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'225 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'224 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'223 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'222 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'221 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'220 ->
        twice
          (twice
            (twice
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'219 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'218 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'217 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'216 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'215 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'214 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'213 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice_plus_one coq_In)))))))
      | Nis'212 ->
        twice
          (twice
            (twice
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'211 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'210 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'209 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'208 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'207 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'206 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'205 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'204 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'203 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'202 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'201 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'200 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'199 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'198 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'197 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice_plus_one coq_In)))))))
      | Nis'196 ->
        twice
          (twice
            (twice
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'195 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'194 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'193 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'192 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'191 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'190 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'189 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'188 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'187 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'186 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'185 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'184 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'183 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'182 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'181 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'180 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'179 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'178 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'177 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'176 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'175 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'174 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'173 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'172 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'171 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'170 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'169 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'168 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'167 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'166 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'165 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice_plus_one coq_In)))))))
      | Nis'164 ->
        twice
          (twice
            (twice
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'163 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'162 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'161 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'160 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'159 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'158 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'157 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'156 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'155 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'154 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'153 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'152 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'151 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'150 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'149 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'148 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'147 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'146 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'145 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'144 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'143 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'142 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'141 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'140 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'139 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'138 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'137 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'136 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'135 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'134 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'133 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'132 ->
        twice
          (twice
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'131 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'130 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'129 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'128 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'127 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'126 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'125 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'124 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'123 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'122 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'121 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'120 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'119 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'118 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'117 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'116 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'115 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'114 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'113 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'112 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'111 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'110 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'109 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'108 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'107 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'106 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'105 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'104 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'103 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'102 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'101 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice_plus_one (twice_plus_one coq_In)))))))
      | Nis'100 ->
        twice
          (twice
            (twice (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'99 ->
        twice_plus_one
          (twice
            (twice (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'98 ->
        twice
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'97 ->
        twice_plus_one
          (twice_plus_one
            (twice (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'96 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'95 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'94 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'93 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'92 ->
        twice
          (twice
            (twice
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'91 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'90 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'89 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'88 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'87 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'86 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'85 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one (twice (twice (twice (twice (twice coq_In))))))))
      | Nis'84 ->
        twice
          (twice
            (twice
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'83 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'82 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'81 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'80 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'79 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'78 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'77 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'76 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'75 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'74 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'73 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'72 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'71 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'70 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'69 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one (twice (twice (twice (twice coq_In))))))))
      | Nis'68 ->
        twice
          (twice
            (twice
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'67 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'66 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'65 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'64 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'63 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'62 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'61 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'60 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'59 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'58 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'57 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'56 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'55 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'54 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'53 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'52 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'51 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'50 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'49 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'48 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'47 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'46 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'45 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'44 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'43 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'42 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'41 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'40 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'39 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'38 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'37 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice_plus_one (twice (twice (twice coq_In))))))))
      | Nis'36 ->
        twice
          (twice
            (twice
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'35 ->
        twice_plus_one
          (twice
            (twice
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'34 ->
        twice
          (twice_plus_one
            (twice
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'33 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'32 ->
        twice
          (twice
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'31 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'30 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'29 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'28 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'27 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'26 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'25 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'24 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'23 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'22 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'21 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'20 ->
        twice
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'19 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'18 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'17 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'16 ->
        twice
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'15 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'14 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'13 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'12 ->
        twice
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'11 ->
        twice_plus_one
          (twice
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'10 ->
        twice
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'9 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'8 ->
        twice
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'7 ->
        twice_plus_one
          (twice
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'6 ->
        twice
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'5 ->
        twice_plus_one
          (twice_plus_one
            (twice_plus_one
              (twice_plus_one
                (twice_plus_one
                  (twice (twice_plus_one (twice (twice coq_In))))))))
      | Nis'4 ->
        twice
          (twice
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice (twice coq_In))))))))
      | Nis'3 ->
        twice_plus_one
          (twice
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice (twice coq_In))))))))
      | Nis'2 ->
        twice
          (twice_plus_one
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice (twice coq_In))))))))
      | Nis'1 ->
        twice_plus_one
          (twice_plus_one
            (twice
              (twice
                (twice
                  (twice_plus_one (twice_plus_one (twice (twice coq_In)))))))));
      surj = (fun n ->
      Camlcoq.Int31.destr
        (fun d d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 ->
        match d with
        | false ->
          (match d0 with
           | false ->
             (match d1 with
              | false ->
                (match d2 with
                 | false ->
                   (match d3 with
                    | false ->
                      (match d4 with
                       | false ->
                         (match d5 with
                          | false ->
                            (match d6 with
                             | false ->
                               (match d7 with
                                | false ->
                                  (match d8 with
                                   | false ->
                                     (match d9 with
                                      | false ->
                                        (match d10 with
                                         | false ->
                                           (match d11 with
                                            | false ->
                                              (match d12 with
                                               | false ->
                                                 (match d13 with
                                                  | false ->
                                                    (match d14 with
                                                     | false ->
                                                       (match d15 with
                                                        | false ->
                                                          (match d16 with
                                                           | false ->
                                                             (match d17 with
                                                              | false ->
                                                                (match d18 with
                                                                 | false ->
                                                                   (match d19 with
                                                                    | false ->
                                                                    (match d20 with
                                                                    | false ->
                                                                    (match d21 with
                                                                    | false ->
                                                                    (match d22 with
                                                                    | false ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'613
                                                                    | true ->
                                                                    Nis'612)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'611
                                                                    | true ->
                                                                    Nis'610))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'609
                                                                    | true ->
                                                                    Nis'608)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'607
                                                                    | true ->
                                                                    Nis'606)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'605
                                                                    | true ->
                                                                    Nis'604)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'603
                                                                    | true ->
                                                                    Nis'602))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'601
                                                                    | true ->
                                                                    Nis'600)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'599
                                                                    | true ->
                                                                    Nis'598))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'597
                                                                    | true ->
                                                                    Nis'596)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'595
                                                                    | true ->
                                                                    Nis'594))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'593
                                                                    | true ->
                                                                    Nis'592)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'591
                                                                    | true ->
                                                                    Nis'590)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'589
                                                                    | true ->
                                                                    Nis'588)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'587
                                                                    | true ->
                                                                    Nis'586))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'585
                                                                    | true ->
                                                                    Nis'584)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'583
                                                                    | true ->
                                                                    Nis'582)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'581
                                                                    | true ->
                                                                    Nis'580)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'579
                                                                    | true ->
                                                                    Nis'578))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'577
                                                                    | true ->
                                                                    Nis'576)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'575
                                                                    | true ->
                                                                    Nis'574)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'573
                                                                    | true ->
                                                                    Nis'572)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'571
                                                                    | true ->
                                                                    Nis'570))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'569
                                                                    | true ->
                                                                    Nis'568)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'567
                                                                    | true ->
                                                                    Nis'566))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'565
                                                                    | true ->
                                                                    Nis'564)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'563
                                                                    | true ->
                                                                    Nis'562))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'561
                                                                    | true ->
                                                                    Nis'560)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'559
                                                                    | true ->
                                                                    Nis'558)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'557
                                                                    | true ->
                                                                    Nis'556)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'555
                                                                    | true ->
                                                                    Nis'554))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'553
                                                                    | true ->
                                                                    Nis'552)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'551
                                                                    | true ->
                                                                    Nis'550))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'549
                                                                    | true ->
                                                                    Nis'548)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'547
                                                                    | true ->
                                                                    Nis'546))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'545
                                                                    | true ->
                                                                    Nis'544)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'543
                                                                    | true ->
                                                                    Nis'542)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'541
                                                                    | true ->
                                                                    Nis'540)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'539
                                                                    | true ->
                                                                    Nis'538))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'537
                                                                    | true ->
                                                                    Nis'536)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'535
                                                                    | true ->
                                                                    Nis'534))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'533
                                                                    | true ->
                                                                    Nis'532)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'531
                                                                    | true ->
                                                                    Nis'530))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'529
                                                                    | true ->
                                                                    Nis'528)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'527
                                                                    | true ->
                                                                    Nis'526)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'525
                                                                    | true ->
                                                                    Nis'524)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'523
                                                                    | true ->
                                                                    Nis'522))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'521
                                                                    | true ->
                                                                    Nis'520)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'519
                                                                    | true ->
                                                                    Nis'518)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'517
                                                                    | true ->
                                                                    Nis'516)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'515
                                                                    | true ->
                                                                    Nis'514))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'513
                                                                    | true ->
                                                                    Nis'512)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'511
                                                                    | true ->
                                                                    Nis'510)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'509
                                                                    | true ->
                                                                    Nis'508)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'507
                                                                    | true ->
                                                                    Nis'506))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'505
                                                                    | true ->
                                                                    Nis'504)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'503
                                                                    | true ->
                                                                    Nis'502))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'501
                                                                    | true ->
                                                                    Nis'500)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'499
                                                                    | true ->
                                                                    Nis'498))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'497
                                                                    | true ->
                                                                    Nis'496)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'495
                                                                    | true ->
                                                                    Nis'494)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'493
                                                                    | true ->
                                                                    Nis'492)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'491
                                                                    | true ->
                                                                    Nis'490))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'489
                                                                    | true ->
                                                                    Nis'488)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'487
                                                                    | true ->
                                                                    Nis'486)))))))
                                                                    | true ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'485
                                                                    | true ->
                                                                    Nis'484)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'483
                                                                    | true ->
                                                                    Nis'482))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'481
                                                                    | true ->
                                                                    Nis'480)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'479
                                                                    | true ->
                                                                    Nis'478)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'477
                                                                    | true ->
                                                                    Nis'476)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'475
                                                                    | true ->
                                                                    Nis'474))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'473
                                                                    | true ->
                                                                    Nis'472)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'471
                                                                    | true ->
                                                                    Nis'470))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'469
                                                                    | true ->
                                                                    Nis'468)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'467
                                                                    | true ->
                                                                    Nis'466))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'465
                                                                    | true ->
                                                                    Nis'464)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'463
                                                                    | true ->
                                                                    Nis'462)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'461
                                                                    | true ->
                                                                    Nis'460)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'459
                                                                    | true ->
                                                                    Nis'458))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'457
                                                                    | true ->
                                                                    Nis'456)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'455
                                                                    | true ->
                                                                    Nis'454)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'453
                                                                    | true ->
                                                                    Nis'452)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'451
                                                                    | true ->
                                                                    Nis'450))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'449
                                                                    | true ->
                                                                    Nis'448)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'447
                                                                    | true ->
                                                                    Nis'446)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'445
                                                                    | true ->
                                                                    Nis'444)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'443
                                                                    | true ->
                                                                    Nis'442))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'441
                                                                    | true ->
                                                                    Nis'440)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'439
                                                                    | true ->
                                                                    Nis'438))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'437
                                                                    | true ->
                                                                    Nis'436)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'435
                                                                    | true ->
                                                                    Nis'434))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'433
                                                                    | true ->
                                                                    Nis'432)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'431
                                                                    | true ->
                                                                    Nis'430)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'429
                                                                    | true ->
                                                                    Nis'428)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'427
                                                                    | true ->
                                                                    Nis'426))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'425
                                                                    | true ->
                                                                    Nis'424)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'423
                                                                    | true ->
                                                                    Nis'422))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'421
                                                                    | true ->
                                                                    Nis'420)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'419
                                                                    | true ->
                                                                    Nis'418))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'417
                                                                    | true ->
                                                                    Nis'416)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'415
                                                                    | true ->
                                                                    Nis'414)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'413
                                                                    | true ->
                                                                    Nis'412)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'411
                                                                    | true ->
                                                                    Nis'410))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'409
                                                                    | true ->
                                                                    Nis'408)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'407
                                                                    | true ->
                                                                    Nis'406))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'405
                                                                    | true ->
                                                                    Nis'404)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'403
                                                                    | true ->
                                                                    Nis'402))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'401
                                                                    | true ->
                                                                    Nis'400)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'399
                                                                    | true ->
                                                                    Nis'398)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'397
                                                                    | true ->
                                                                    Nis'396)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'395
                                                                    | true ->
                                                                    Nis'394))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'393
                                                                    | true ->
                                                                    Nis'392)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'391
                                                                    | true ->
                                                                    Nis'390)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'389
                                                                    | true ->
                                                                    Nis'388)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'387
                                                                    | true ->
                                                                    Nis'386))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'385
                                                                    | true ->
                                                                    Nis'384)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'383
                                                                    | true ->
                                                                    Nis'382)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'381
                                                                    | true ->
                                                                    Nis'380)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'379
                                                                    | true ->
                                                                    Nis'378))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'377
                                                                    | true ->
                                                                    Nis'376)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'375
                                                                    | true ->
                                                                    Nis'374))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'373
                                                                    | true ->
                                                                    Nis'372)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'371
                                                                    | true ->
                                                                    Nis'370))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'369
                                                                    | true ->
                                                                    Nis'368)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'367
                                                                    | true ->
                                                                    Nis'366)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'365
                                                                    | true ->
                                                                    Nis'364)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'363
                                                                    | true ->
                                                                    Nis'362))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'361
                                                                    | true ->
                                                                    Nis'360)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'358
                                                                    | true ->
                                                                    Nis'357))))))))
                                                                    | true ->
                                                                    (match d22 with
                                                                    | false ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'356
                                                                    | true ->
                                                                    Nis'355)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'354
                                                                    | true ->
                                                                    Nis'353))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'352
                                                                    | true ->
                                                                    Nis'351)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'350
                                                                    | true ->
                                                                    Nis'349)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'348
                                                                    | true ->
                                                                    Nis'347)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'346
                                                                    | true ->
                                                                    Nis'345))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'344
                                                                    | true ->
                                                                    Nis'343)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'342
                                                                    | true ->
                                                                    Nis'341))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'340
                                                                    | true ->
                                                                    Nis'339)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'338
                                                                    | true ->
                                                                    Nis'337))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'336
                                                                    | true ->
                                                                    Nis'335)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'334
                                                                    | true ->
                                                                    Nis'333)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'332
                                                                    | true ->
                                                                    Nis'331)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'330
                                                                    | true ->
                                                                    Nis'329))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'328
                                                                    | true ->
                                                                    Nis'327)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'326
                                                                    | true ->
                                                                    Nis'325)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'324
                                                                    | true ->
                                                                    Nis'323)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'322
                                                                    | true ->
                                                                    Nis'321))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'320
                                                                    | true ->
                                                                    Nis'319)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'318
                                                                    | true ->
                                                                    Nis'317)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'316
                                                                    | true ->
                                                                    Nis'315)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'314
                                                                    | true ->
                                                                    Nis'313))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'312
                                                                    | true ->
                                                                    Nis'311)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'310
                                                                    | true ->
                                                                    Nis'309))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'308
                                                                    | true ->
                                                                    Nis'307)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'306
                                                                    | true ->
                                                                    Nis'305))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'304
                                                                    | true ->
                                                                    Nis'303)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'302
                                                                    | true ->
                                                                    Nis'301)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'300
                                                                    | true ->
                                                                    Nis'299)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'298
                                                                    | true ->
                                                                    Nis'297))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'296
                                                                    | true ->
                                                                    Nis'295)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'294
                                                                    | true ->
                                                                    Nis'293))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'292
                                                                    | true ->
                                                                    Nis'291)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'290
                                                                    | true ->
                                                                    Nis'289))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'288
                                                                    | true ->
                                                                    Nis'287)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'286
                                                                    | true ->
                                                                    Nis'285)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'284
                                                                    | true ->
                                                                    Nis'283)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'282
                                                                    | true ->
                                                                    Nis'281))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'280
                                                                    | true ->
                                                                    Nis'279)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'278
                                                                    | true ->
                                                                    Nis'277))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'276
                                                                    | true ->
                                                                    Nis'275)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'274
                                                                    | true ->
                                                                    Nis'273))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'272
                                                                    | true ->
                                                                    Nis'271)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'270
                                                                    | true ->
                                                                    Nis'269)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'268
                                                                    | true ->
                                                                    Nis'267)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'266
                                                                    | true ->
                                                                    Nis'265))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'264
                                                                    | true ->
                                                                    Nis'263)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'262
                                                                    | true ->
                                                                    Nis'261)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'260
                                                                    | true ->
                                                                    Nis'259)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'258
                                                                    | true ->
                                                                    Nis'257))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'256
                                                                    | true ->
                                                                    Nis'255)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'254
                                                                    | true ->
                                                                    Nis'253)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'252
                                                                    | true ->
                                                                    Nis'251)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'250
                                                                    | true ->
                                                                    Nis'249))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'248
                                                                    | true ->
                                                                    Nis'247)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'246
                                                                    | true ->
                                                                    Nis'245))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'244
                                                                    | true ->
                                                                    Nis'243)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'242
                                                                    | true ->
                                                                    Nis'241))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'240
                                                                    | true ->
                                                                    Nis'239)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'238
                                                                    | true ->
                                                                    Nis'237)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'236
                                                                    | true ->
                                                                    Nis'235)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'234
                                                                    | true ->
                                                                    Nis'233))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'232
                                                                    | true ->
                                                                    Nis'231)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'230
                                                                    | true ->
                                                                    Nis'229)))))))
                                                                    | true ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'228
                                                                    | true ->
                                                                    Nis'227)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'226
                                                                    | true ->
                                                                    Nis'225))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'224
                                                                    | true ->
                                                                    Nis'223)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'222
                                                                    | true ->
                                                                    Nis'221)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'220
                                                                    | true ->
                                                                    Nis'219)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'218
                                                                    | true ->
                                                                    Nis'217))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'216
                                                                    | true ->
                                                                    Nis'215)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'214
                                                                    | true ->
                                                                    Nis'213))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'212
                                                                    | true ->
                                                                    Nis'211)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'210
                                                                    | true ->
                                                                    Nis'209))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'208
                                                                    | true ->
                                                                    Nis'207)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'206
                                                                    | true ->
                                                                    Nis'205)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'204
                                                                    | true ->
                                                                    Nis'203)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'202
                                                                    | true ->
                                                                    Nis'201))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'200
                                                                    | true ->
                                                                    Nis'199)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'198
                                                                    | true ->
                                                                    Nis'197)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'196
                                                                    | true ->
                                                                    Nis'195)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'194
                                                                    | true ->
                                                                    Nis'193))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'192
                                                                    | true ->
                                                                    Nis'191)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'190
                                                                    | true ->
                                                                    Nis'189)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'188
                                                                    | true ->
                                                                    Nis'187)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'186
                                                                    | true ->
                                                                    Nis'185))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'184
                                                                    | true ->
                                                                    Nis'183)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'182
                                                                    | true ->
                                                                    Nis'181))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'180
                                                                    | true ->
                                                                    Nis'179)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'178
                                                                    | true ->
                                                                    Nis'177))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'176
                                                                    | true ->
                                                                    Nis'175)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'174
                                                                    | true ->
                                                                    Nis'173)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'172
                                                                    | true ->
                                                                    Nis'171)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'170
                                                                    | true ->
                                                                    Nis'169))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'168
                                                                    | true ->
                                                                    Nis'167)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'166
                                                                    | true ->
                                                                    Nis'165))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'164
                                                                    | true ->
                                                                    Nis'163)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'162
                                                                    | true ->
                                                                    Nis'161))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'160
                                                                    | true ->
                                                                    Nis'159)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'158
                                                                    | true ->
                                                                    Nis'157)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'156
                                                                    | true ->
                                                                    Nis'155)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'154
                                                                    | true ->
                                                                    Nis'153))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'152
                                                                    | true ->
                                                                    Nis'151)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'150
                                                                    | true ->
                                                                    Nis'149))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'148
                                                                    | true ->
                                                                    Nis'147)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'146
                                                                    | true ->
                                                                    Nis'145))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'144
                                                                    | true ->
                                                                    Nis'143)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'142
                                                                    | true ->
                                                                    Nis'141)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'140
                                                                    | true ->
                                                                    Nis'139)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'138
                                                                    | true ->
                                                                    Nis'137))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'136
                                                                    | true ->
                                                                    Nis'135)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'134
                                                                    | true ->
                                                                    Nis'133)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'132
                                                                    | true ->
                                                                    Nis'131)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'130
                                                                    | true ->
                                                                    Nis'129))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'128
                                                                    | true ->
                                                                    Nis'127)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'126
                                                                    | true ->
                                                                    Nis'125)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'124
                                                                    | true ->
                                                                    Nis'123)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'122
                                                                    | true ->
                                                                    Nis'121))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'120
                                                                    | true ->
                                                                    Nis'119)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'118
                                                                    | true ->
                                                                    Nis'117))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'116
                                                                    | true ->
                                                                    Nis'115)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'114
                                                                    | true ->
                                                                    Nis'113))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'112
                                                                    | true ->
                                                                    Nis'111)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'110
                                                                    | true ->
                                                                    Nis'109)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'108
                                                                    | true ->
                                                                    Nis'107)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'106
                                                                    | true ->
                                                                    Nis'105))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'104
                                                                    | true ->
                                                                    Nis'103)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'102
                                                                    | true ->
                                                                    Nis'101)))))))))
                                                                    | true ->
                                                                    (match d21 with
                                                                    | false ->
                                                                    (match d22 with
                                                                    | false ->
                                                                    (match d23 with
                                                                    | false ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'100
                                                                    | true ->
                                                                    Nis'99)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'98
                                                                    | true ->
                                                                    Nis'97))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'96
                                                                    | true ->
                                                                    Nis'95)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'94
                                                                    | true ->
                                                                    Nis'93)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'92
                                                                    | true ->
                                                                    Nis'91)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'90
                                                                    | true ->
                                                                    Nis'89))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'88
                                                                    | true ->
                                                                    Nis'87)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'86
                                                                    | true ->
                                                                    Nis'85))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'84
                                                                    | true ->
                                                                    Nis'83)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'82
                                                                    | true ->
                                                                    Nis'81))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'80
                                                                    | true ->
                                                                    Nis'79)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'78
                                                                    | true ->
                                                                    Nis'77)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'76
                                                                    | true ->
                                                                    Nis'75)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'74
                                                                    | true ->
                                                                    Nis'73))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'72
                                                                    | true ->
                                                                    Nis'71)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'70
                                                                    | true ->
                                                                    Nis'69)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'68
                                                                    | true ->
                                                                    Nis'67)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'66
                                                                    | true ->
                                                                    Nis'65))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'64
                                                                    | true ->
                                                                    Nis'63)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'62
                                                                    | true ->
                                                                    Nis'61)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'60
                                                                    | true ->
                                                                    Nis'59)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'58
                                                                    | true ->
                                                                    Nis'57))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'56
                                                                    | true ->
                                                                    Nis'55)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'54
                                                                    | true ->
                                                                    Nis'53))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'52
                                                                    | true ->
                                                                    Nis'51)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'50
                                                                    | true ->
                                                                    Nis'49))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'48
                                                                    | true ->
                                                                    Nis'47)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'46
                                                                    | true ->
                                                                    Nis'45)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'44
                                                                    | true ->
                                                                    Nis'43)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'42
                                                                    | true ->
                                                                    Nis'41))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'40
                                                                    | true ->
                                                                    Nis'39)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'38
                                                                    | true ->
                                                                    Nis'37))))))
                                                                    | true ->
                                                                    (match d24 with
                                                                    | false ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'36
                                                                    | true ->
                                                                    Nis'35)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'34
                                                                    | true ->
                                                                    Nis'33))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'32
                                                                    | true ->
                                                                    Nis'31)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'30
                                                                    | true ->
                                                                    Nis'29)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'28
                                                                    | true ->
                                                                    Nis'27)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'26
                                                                    | true ->
                                                                    Nis'25))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'24
                                                                    | true ->
                                                                    Nis'23)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'22
                                                                    | true ->
                                                                    Nis'21))))
                                                                    | true ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'20
                                                                    | true ->
                                                                    Nis'19)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'18
                                                                    | true ->
                                                                    Nis'17))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'16
                                                                    | true ->
                                                                    Nis'15)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'14
                                                                    | true ->
                                                                    Nis'13)))
                                                                    | true ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'12
                                                                    | true ->
                                                                    Nis'11)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'10
                                                                    | true ->
                                                                    Nis'9))
                                                                    | true ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'8
                                                                    | true ->
                                                                    Nis'7)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'6
                                                                    | true ->
                                                                    Nis'5)))))
                                                                    | true ->
                                                                    (match d25 with
                                                                    | false ->
                                                                    (match d26 with
                                                                    | false ->
                                                                    (match d27 with
                                                                    | false ->
                                                                    (match d28 with
                                                                    | false ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'4
                                                                    | true ->
                                                                    Nis'3)
                                                                    | true ->
                                                                    (match d29 with
                                                                    | false ->
                                                                    Nis'2
                                                                    | true ->
                                                                    Nis'1))
                                                                    | true ->
                                                                    Nis'613)
                                                                    | true ->
                                                                    Nis'613)
                                                                    | true ->
                                                                    Nis'613)))
                                                                    | true ->
                                                                    Nis'613)
                                                                    | true ->
                                                                    Nis'613))
                                                                    | true ->
                                                                    Nis'613)
                                                                 | true ->
                                                                   Nis'613)
                                                              | true ->
                                                                Nis'613)
                                                           | true -> Nis'613)
                                                        | true -> Nis'613)
                                                     | true -> Nis'613)
                                                  | true -> Nis'613)
                                               | true -> Nis'613)
                                            | true -> Nis'613)
                                         | true -> Nis'613)
                                      | true -> Nis'613)
                                   | true -> Nis'613)
                                | true -> Nis'613)
                             | true -> Nis'613)
                          | true -> Nis'613)
                       | true -> Nis'613)
                    | true -> Nis'613)
                 | true -> Nis'613)
              | true -> Nis'613)
           | true -> Nis'613)
        | true -> Nis'613)
        n); inj_bound = (Camlcoq.Int31.constr (false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      false, false, false, false, false, false, false, true, false, false,
      true, true, false, false, true, false, false)) }

  (** val coq_NonInitStateAlph : noninitstate coq_Alphabet **)

  let coq_NonInitStateAlph =
    coq_NumberedAlphabet noninitstateNum

  (** val last_symb_of_non_init_state : noninitstate -> Coq__1.symbol **)

  let last_symb_of_non_init_state = function
  | Nis'613 -> Coq__1.NT Coq__1.Coq_external_declaration'nt
  | Nis'612 -> Coq__1.NT Coq__1.Coq_declaration'nt
  | Nis'611 -> Coq__1.NT Coq__1.Coq_compound_statement'nt
  | Nis'610 -> Coq__1.NT Coq__1.Coq_declarator'nt
  | Nis'609 -> Coq__1.NT Coq__1.Coq_attribute_specifier'nt
  | Nis'608 -> Coq__1.NT Coq__1.Coq_declaration'nt
  | Nis'607 -> Coq__1.NT Coq__1.Coq_compound_statement'nt
  | Nis'606 -> Coq__1.NT Coq__1.Coq_declaration'nt
  | Nis'605 -> Coq__1.NT Coq__1.Coq_block_item'nt
  | Nis'604 -> Coq__1.NT Coq__1.Coq_block_item'nt
  | Nis'603 -> Coq__1.T Coq__1.RBRACE't
  | Nis'602 -> Coq__1.NT Coq__1.Coq_block_item_list'nt
  | Nis'601 -> Coq__1.NT Coq__1.Coq_declaration'nt
  | Nis'600 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'599 -> Coq__1.T Coq__1.PRAGMA't
  | Nis'598 -> Coq__1.T Coq__1.RBRACE't
  | Nis'597 -> Coq__1.T Coq__1.ELSE't
  | Nis'596 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'595 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'594 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'593 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'592 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'591 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'590 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'589 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'588 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'587 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'586 -> Coq__1.T Coq__1.ELSE't
  | Nis'585 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'584 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'582 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'581 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'579 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'578 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'577 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'575 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'574 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'572 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'571 -> Coq__1.NT Coq__1.Coq_declaration'nt
  | Nis'570 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'568 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'567 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'565 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'564 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'563 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'561 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'560 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'558 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'557 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'556 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'555 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'553 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'552 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'550 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'549 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'548 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'546 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'545 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'544 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'543 -> Coq__1.NT Coq__1.Coq_asm_statement'nt
  | Nis'542 -> Coq__1.NT Coq__1.Coq_compound_statement'nt
  | Nis'541 -> Coq__1.NT Coq__1.Coq_expression_statement'nt
  | Nis'540 -> Coq__1.NT Coq__1.Coq_iteration_statement_statement_safe_'nt
  | Nis'539 -> Coq__1.NT Coq__1.Coq_jump_statement'nt
  | Nis'538 -> Coq__1.NT Coq__1.Coq_labeled_statement_statement_safe_'nt
  | Nis'537 -> Coq__1.NT Coq__1.Coq_selection_statement_safe'nt
  | Nis'536 -> Coq__1.NT Coq__1.Coq_statement_safe'nt
  | Nis'535 -> Coq__1.T Coq__1.COLON't
  | Nis'534 -> Coq__1.NT Coq__1.Coq_constant_expression'nt
  | Nis'533 -> Coq__1.T Coq__1.CASE't
  | Nis'532 -> Coq__1.T Coq__1.COLON't
  | Nis'531 -> Coq__1.T Coq__1.DEFAULT't
  | Nis'530 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'528 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'527 -> Coq__1.T Coq__1.LPAREN't
  | Nis'526 -> Coq__1.T Coq__1.WHILE't
  | Nis'525 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'524 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'522 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'521 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'519 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'518 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'517 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'515 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'514 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'512 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'511 -> Coq__1.NT Coq__1.Coq_declaration'nt
  | Nis'510 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'508 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'507 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'505 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'504 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'503 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'501 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'500 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'498 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'497 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'496 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'495 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'493 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'492 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'490 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'489 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'488 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'486 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'485 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'484 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'482 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'481 -> Coq__1.T Coq__1.LPAREN't
  | Nis'480 -> Coq__1.T Coq__1.WHILE't
  | Nis'479 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'478 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'477 -> Coq__1.NT Coq__1.Coq_asm_statement'nt
  | Nis'476 -> Coq__1.NT Coq__1.Coq_compound_statement'nt
  | Nis'475 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'474 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'473 -> Coq__1.NT Coq__1.Coq_expression_statement'nt
  | Nis'472 ->
    Coq__1.NT Coq__1.Coq_iteration_statement_statement_dangerous_'nt
  | Nis'471 -> Coq__1.NT Coq__1.Coq_jump_statement'nt
  | Nis'470 -> Coq__1.NT Coq__1.Coq_labeled_statement_statement_dangerous_'nt
  | Nis'469 -> Coq__1.NT Coq__1.Coq_selection_statement_dangerous'nt
  | Nis'468 -> Coq__1.NT Coq__1.Coq_statement_dangerous'nt
  | Nis'467 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'465 -> Coq__1.NT Coq__1.Coq_asm_arguments'nt
  | Nis'464 -> Coq__1.NT Coq__1.Coq_asm_operand'nt
  | Nis'463 -> Coq__1.NT Coq__1.Coq_asm_flags'nt
  | Nis'462 -> Coq__1.NT Coq__1.Coq_asm_flags'nt
  | Nis'461 -> Coq__1.T Coq__1.COMMA't
  | Nis'460 -> Coq__1.T Coq__1.STRING_LITERAL't
  | Nis'459 -> Coq__1.T Coq__1.COLON't
  | Nis'458 -> Coq__1.NT Coq__1.Coq_asm_operands'nt
  | Nis'457 -> Coq__1.T Coq__1.COLON't
  | Nis'456 -> Coq__1.NT Coq__1.Coq_asm_operands'nt
  | Nis'454 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'453 -> Coq__1.T Coq__1.LPAREN't
  | Nis'452 -> Coq__1.T Coq__1.STRING_LITERAL't
  | Nis'451 -> Coq__1.NT Coq__1.Coq_asm_op_name'nt
  | Nis'450 -> Coq__1.NT Coq__1.Coq_asm_operand'nt
  | Nis'449 -> Coq__1.T Coq__1.COMMA't
  | Nis'448 -> Coq__1.NT Coq__1.Coq_asm_operands_ne'nt
  | Nis'447 -> Coq__1.T Coq__1.RBRACK't
  | Nis'446 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'445 -> Coq__1.T Coq__1.LBRACK't
  | Nis'444 -> Coq__1.T Coq__1.COLON't
  | Nis'443 -> Coq__1.T Coq__1.STRING_LITERAL't
  | Nis'442 -> Coq__1.T Coq__1.LPAREN't
  | Nis'441 -> Coq__1.NT Coq__1.Coq_asm_attributes'nt
  | Nis'440 -> Coq__1.NT Coq__1.Coq_asm_attributes'nt
  | Nis'439 -> Coq__1.NT Coq__1.Coq_asm_attributes'nt
  | Nis'438 -> Coq__1.T Coq__1.CONST't
  | Nis'437 -> Coq__1.T Coq__1.VOLATILE't
  | Nis'436 -> Coq__1.T Coq__1.ASM't
  | Nis'435 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'434 -> Coq__1.T Coq__1.BREAK't
  | Nis'433 -> Coq__1.T Coq__1.COLON't
  | Nis'432 -> Coq__1.NT Coq__1.Coq_constant_expression'nt
  | Nis'431 -> Coq__1.T Coq__1.CASE't
  | Nis'430 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'429 -> Coq__1.T Coq__1.CONTINUE't
  | Nis'428 -> Coq__1.T Coq__1.COLON't
  | Nis'427 -> Coq__1.T Coq__1.DEFAULT't
  | Nis'426 -> Coq__1.T Coq__1.DO't
  | Nis'424 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'423 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'422 -> Coq__1.T Coq__1.LPAREN't
  | Nis'421 -> Coq__1.T Coq__1.FOR't
  | Nis'420 -> Coq__1.T Coq__1.DO't
  | Nis'418 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'417 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'416 -> Coq__1.T Coq__1.LPAREN't
  | Nis'415 -> Coq__1.T Coq__1.FOR't
  | Nis'414 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'413 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'412 -> Coq__1.T Coq__1.GOTO't
  | Nis'410 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'409 -> Coq__1.T Coq__1.LPAREN't
  | Nis'408 -> Coq__1.T Coq__1.IF't
  | Nis'407 -> Coq__1.T Coq__1.COLON't
  | Nis'406 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'404 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'403 -> Coq__1.T Coq__1.LPAREN't
  | Nis'402 -> Coq__1.T Coq__1.SWITCH't
  | Nis'400 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'399 -> Coq__1.T Coq__1.LPAREN't
  | Nis'398 -> Coq__1.T Coq__1.WHILE't
  | Nis'396 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'395 -> Coq__1.T Coq__1.LPAREN't
  | Nis'394 -> Coq__1.T Coq__1.IF't
  | Nis'393 -> Coq__1.T Coq__1.COLON't
  | Nis'392 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'391 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'390 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'389 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'388 -> Coq__1.T Coq__1.RETURN't
  | Nis'387 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'385 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'384 -> Coq__1.T Coq__1.LPAREN't
  | Nis'383 -> Coq__1.T Coq__1.SWITCH't
  | Nis'381 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'380 -> Coq__1.T Coq__1.LPAREN't
  | Nis'379 -> Coq__1.T Coq__1.WHILE't
  | Nis'378 -> Coq__1.T Coq__1.LBRACE't
  | Nis'377 -> Coq__1.NT Coq__1.Coq_declaration_list'nt
  | Nis'376 -> Coq__1.NT Coq__1.Coq_declaration_specifiers'nt
  | Nis'375 -> Coq__1.NT Coq__1.Coq_declarator_noattrend'nt
  | Nis'374 -> Coq__1.NT Coq__1.Coq_init_declarator'nt
  | Nis'373 -> Coq__1.NT Coq__1.Coq_c_initializer'nt
  | Nis'372 -> Coq__1.T Coq__1.EQ't
  | Nis'371 -> Coq__1.NT Coq__1.Coq_declarator'nt
  | Nis'370 -> Coq__1.NT Coq__1.Coq_init_declarator'nt
  | Nis'369 -> Coq__1.T Coq__1.COMMA't
  | Nis'368 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'367 -> Coq__1.NT Coq__1.Coq_init_declarator_list'nt
  | Nis'366 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'365 -> Coq__1.NT Coq__1.Coq_declaration_specifiers'nt
  | Nis'364 -> Coq__1.NT Coq__1.Coq_external_declaration'nt
  | Nis'363 -> Coq__1.NT Coq__1.Coq_function_definition'nt
  | Nis'362 -> Coq__1.T Coq__1.EOF't
  | Nis'361 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'360 -> Coq__1.NT Coq__1.Coq_translation_unit'nt
  | Nis'358 -> Coq__1.T Coq__1.EOF't
  | Nis'356 -> Coq__1.NT Coq__1.Coq_argument_expression_list'nt
  | Nis'355 -> Coq__1.NT Coq__1.Coq_unary_expression'nt
  | Nis'353 -> Coq__1.NT Coq__1.Coq_type_name'nt
  | Nis'352 -> Coq__1.NT Coq__1.Coq_cast_expression'nt
  | Nis'350 -> Coq__1.NT Coq__1.Coq_type_name'nt
  | Nis'349 -> Coq__1.NT Coq__1.Coq_unary_expression'nt
  | Nis'347 -> Coq__1.NT Coq__1.Coq_type_name'nt
  | Nis'346 -> Coq__1.T Coq__1.RBRACE't
  | Nis'345 -> Coq__1.T Coq__1.COMMA't
  | Nis'344 -> Coq__1.T Coq__1.RBRACE't
  | Nis'343 -> Coq__1.NT Coq__1.Coq_enumerator_list'nt
  | Nis'342 -> Coq__1.T Coq__1.LBRACE't
  | Nis'341 -> Coq__1.NT Coq__1.Coq_enumerator'nt
  | Nis'340 -> Coq__1.NT Coq__1.Coq_constant_expression'nt
  | Nis'339 -> Coq__1.T Coq__1.EQ't
  | Nis'338 -> Coq__1.NT Coq__1.Coq_enumeration_constant'nt
  | Nis'337 -> Coq__1.NT Coq__1.Coq_enumerator'nt
  | Nis'336 -> Coq__1.T Coq__1.RBRACE't
  | Nis'335 -> Coq__1.T Coq__1.COMMA't
  | Nis'334 -> Coq__1.T Coq__1.RBRACE't
  | Nis'333 -> Coq__1.NT Coq__1.Coq_enumerator_list'nt
  | Nis'332 -> Coq__1.T Coq__1.VAR_NAME't
  | Nis'331 -> Coq__1.T Coq__1.LBRACE't
  | Nis'330 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'329 -> Coq__1.NT Coq__1.Coq_attribute_specifier_list'nt
  | Nis'328 -> Coq__1.NT Coq__1.Coq_gcc_attribute'nt
  | Nis'327 -> Coq__1.NT Coq__1.Coq_gcc_attribute'nt
  | Nis'326 -> Coq__1.T Coq__1.COMMA't
  | Nis'323 -> Coq__1.NT Coq__1.Coq_gcc_attribute_list'nt
  | Nis'321 -> Coq__1.NT Coq__1.Coq_argument_expression_list'nt
  | Nis'320 -> Coq__1.NT Coq__1.Coq_unary_expression'nt
  | Nis'318 -> Coq__1.NT Coq__1.Coq_type_name'nt
  | Nis'317 -> Coq__1.T Coq__1.COMMA't
  | Nis'316 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'314 -> Coq__1.NT Coq__1.Coq_designator_list'nt
  | Nis'312 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'311 -> Coq__1.T Coq__1.COMMA't
  | Nis'310 -> Coq__1.NT Coq__1.Coq_type_name'nt
  | Nis'308 -> Coq__1.NT Coq__1.Coq_argument_expression_list'nt
  | Nis'306 -> Coq__1.NT Coq__1.Coq_type_name'nt
  | Nis'305 -> Coq__1.NT Coq__1.Coq_unary_expression'nt
  | Nis'303 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'302 -> Coq__1.NT Coq__1.Coq_abstract_declarator'nt
  | Nis'301 -> Coq__1.NT Coq__1.Coq_pointer'nt
  | Nis'300 -> Coq__1.T Coq__1.LPAREN't
  | Nis'299 -> Coq__1.NT Coq__1.Coq_specifier_qualifier_list'nt
  | Nis'298 -> Coq__1.T Coq__1.RBRACE't
  | Nis'297 -> Coq__1.T Coq__1.COMMA't
  | Nis'296 -> Coq__1.T Coq__1.RBRACE't
  | Nis'295 -> Coq__1.NT Coq__1.Coq_initializer_list'nt
  | Nis'294 -> Coq__1.NT Coq__1.Coq_c_initializer'nt
  | Nis'293 -> Coq__1.NT Coq__1.Coq_c_initializer'nt
  | Nis'292 -> Coq__1.NT Coq__1.Coq_designation'nt
  | Nis'291 -> Coq__1.NT Coq__1.Coq_c_initializer'nt
  | Nis'290 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'289 -> Coq__1.NT Coq__1.Coq_c_initializer'nt
  | Nis'288 -> Coq__1.NT Coq__1.Coq_designation'nt
  | Nis'287 -> Coq__1.NT Coq__1.Coq_designator'nt
  | Nis'286 -> Coq__1.NT Coq__1.Coq_designator'nt
  | Nis'285 -> Coq__1.T Coq__1.EQ't
  | Nis'284 -> Coq__1.NT Coq__1.Coq_designator_list'nt
  | Nis'283 -> Coq__1.T Coq__1.RBRACE't
  | Nis'282 -> Coq__1.T Coq__1.COMMA't
  | Nis'281 -> Coq__1.T Coq__1.RBRACE't
  | Nis'280 -> Coq__1.NT Coq__1.Coq_initializer_list'nt
  | Nis'279 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'278 -> Coq__1.T Coq__1.DOT't
  | Nis'277 -> Coq__1.T Coq__1.LBRACE't
  | Nis'276 -> Coq__1.T Coq__1.RBRACK't
  | Nis'275 -> Coq__1.NT Coq__1.Coq_constant_expression'nt
  | Nis'274 -> Coq__1.T Coq__1.LBRACK't
  | Nis'273 -> Coq__1.T Coq__1.LBRACE't
  | Nis'271 -> Coq__1.NT Coq__1.Coq_type_name'nt
  | Nis'270 -> Coq__1.NT Coq__1.Coq_specifier_qualifier_list'nt
  | Nis'269 -> Coq__1.NT Coq__1.Coq_specifier_qualifier_list'nt
  | Nis'268 -> Coq__1.T Coq__1.RBRACE't
  | Nis'267 -> Coq__1.NT Coq__1.Coq_struct_declaration_list'nt
  | Nis'266 -> Coq__1.T Coq__1.LBRACE't
  | Nis'265 -> Coq__1.NT Coq__1.Coq_struct_declarator'nt
  | Nis'264 -> Coq__1.NT Coq__1.Coq_constant_expression'nt
  | Nis'263 -> Coq__1.T Coq__1.COLON't
  | Nis'262 -> Coq__1.NT Coq__1.Coq_declarator'nt
  | Nis'261 -> Coq__1.NT Coq__1.Coq_struct_declarator'nt
  | Nis'260 -> Coq__1.T Coq__1.COMMA't
  | Nis'259 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'258 -> Coq__1.NT Coq__1.Coq_struct_declarator_list'nt
  | Nis'257 -> Coq__1.NT Coq__1.Coq_conditional_expression'nt
  | Nis'256 -> Coq__1.NT Coq__1.Coq_constant_expression'nt
  | Nis'255 -> Coq__1.T Coq__1.COLON't
  | Nis'254 -> Coq__1.T Coq__1.VAR_NAME't
  | Nis'253 -> Coq__1.T Coq__1.COMMA't
  | Nis'251 -> Coq__1.NT Coq__1.Coq_identifier_list'nt
  | Nis'250 -> Coq__1.NT Coq__1.Coq_abstract_declarator'nt
  | Nis'249 -> Coq__1.NT Coq__1.Coq_declarator'nt
  | Nis'247 -> Coq__1.NT Coq__1.Coq_abstract_declarator'nt
  | Nis'245 -> Coq__1.NT Coq__1.Coq_declarator'nt
  | Nis'244 -> Coq__1.NT Coq__1.Coq_attribute_specifier_list'nt
  | Nis'243 -> Coq__1.NT Coq__1.Coq_attribute_specifier'nt
  | Nis'242 -> Coq__1.NT Coq__1.Coq_attribute_specifier_list'nt
  | Nis'241 -> Coq__1.NT Coq__1.Coq_declarator_noattrend'nt
  | Nis'240 -> Coq__1.NT Coq__1.Coq_direct_abstract_declarator'nt
  | Nis'239 -> Coq__1.T Coq__1.RBRACK't
  | Nis'238 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'237 -> Coq__1.T Coq__1.RBRACK't
  | Nis'236 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'235 -> Coq__1.T Coq__1.RBRACK't
  | Nis'234 -> Coq__1.NT Coq__1.Coq_type_qualifier_list'nt
  | Nis'233 -> Coq__1.T Coq__1.RBRACK't
  | Nis'232 -> Coq__1.T Coq__1.LBRACK't
  | Nis'231 -> Coq__1.NT Coq__1.Coq_direct_declarator'nt
  | Nis'229 -> Coq__1.NT Coq__1.Coq_parameter_type_list'nt
  | Nis'228 -> Coq__1.T Coq__1.RBRACK't
  | Nis'227 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'226 -> Coq__1.T Coq__1.RBRACK't
  | Nis'225 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'224 -> Coq__1.T Coq__1.RBRACK't
  | Nis'223 -> Coq__1.NT Coq__1.Coq_type_qualifier_list'nt
  | Nis'222 -> Coq__1.T Coq__1.RBRACK't
  | Nis'221 -> Coq__1.T Coq__1.LBRACK't
  | Nis'220 -> Coq__1.NT Coq__1.Coq_parameter_declaration'nt
  | Nis'218 -> Coq__1.NT Coq__1.Coq_parameter_type_list'nt
  | Nis'216 -> Coq__1.T Coq__1.LPAREN't
  | Nis'215 -> Coq__1.NT Coq__1.Coq_direct_abstract_declarator'nt
  | Nis'214 -> Coq__1.NT Coq__1.Coq_pointer'nt
  | Nis'213 -> Coq__1.T Coq__1.RBRACK't
  | Nis'212 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'211 -> Coq__1.T Coq__1.RBRACK't
  | Nis'210 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'209 -> Coq__1.T Coq__1.RBRACK't
  | Nis'208 -> Coq__1.NT Coq__1.Coq_type_qualifier_list'nt
  | Nis'207 -> Coq__1.T Coq__1.RBRACK't
  | Nis'206 -> Coq__1.T Coq__1.LBRACK't
  | Nis'204 -> Coq__1.T Coq__1.LPAREN't
  | Nis'203 -> Coq__1.NT Coq__1.Coq_declaration_specifiers'nt
  | Nis'202 -> Coq__1.NT Coq__1.Coq_parameter_declaration'nt
  | Nis'201 -> Coq__1.T Coq__1.ELLIPSIS't
  | Nis'200 -> Coq__1.T Coq__1.COMMA't
  | Nis'199 -> Coq__1.NT Coq__1.Coq_parameter_list'nt
  | Nis'197 -> Coq__1.NT Coq__1.Coq_parameter_type_list'nt
  | Nis'196 -> Coq__1.NT Coq__1.Coq_declaration_specifiers'nt
  | Nis'195 -> Coq__1.NT Coq__1.Coq_declaration_specifiers'nt
  | Nis'194 -> Coq__1.NT Coq__1.Coq_declaration_specifiers'nt
  | Nis'193 -> Coq__1.NT Coq__1.Coq_attribute_specifier'nt
  | Nis'192 -> Coq__1.NT Coq__1.Coq_declaration_specifiers'nt
  | Nis'191 -> Coq__1.NT Coq__1.Coq_function_specifier'nt
  | Nis'190 -> Coq__1.NT Coq__1.Coq_storage_class_specifier'nt
  | Nis'189 -> Coq__1.NT Coq__1.Coq_type_qualifier_noattr'nt
  | Nis'188 -> Coq__1.NT Coq__1.Coq_declaration_specifiers_typespec_opt'nt
  | Nis'187 -> Coq__1.NT Coq__1.Coq_declaration_specifiers_typespec_opt'nt
  | Nis'186 -> Coq__1.NT Coq__1.Coq_declaration_specifiers_typespec_opt'nt
  | Nis'185 -> Coq__1.NT Coq__1.Coq_declaration_specifiers_typespec_opt'nt
  | Nis'184 -> Coq__1.NT Coq__1.Coq_declaration_specifiers_typespec_opt'nt
  | Nis'183 -> Coq__1.NT Coq__1.Coq_enum_specifier'nt
  | Nis'182 -> Coq__1.NT Coq__1.Coq_function_specifier'nt
  | Nis'181 -> Coq__1.NT Coq__1.Coq_storage_class_specifier'nt
  | Nis'180 -> Coq__1.NT Coq__1.Coq_type_qualifier'nt
  | Nis'179 -> Coq__1.NT Coq__1.Coq_type_specifier'nt
  | Nis'178 -> Coq__1.NT Coq__1.Coq_type_specifier'nt
  | Nis'177 -> Coq__1.T Coq__1.AUTO't
  | Nis'176 -> Coq__1.T Coq__1.EXTERN't
  | Nis'175 -> Coq__1.T Coq__1.INLINE't
  | Nis'174 -> Coq__1.T Coq__1.NORETURN't
  | Nis'172 -> Coq__1.T Coq__1.VAR_NAME't
  | Nis'171 -> Coq__1.T Coq__1.LPAREN't
  | Nis'170 -> Coq__1.NT Coq__1.Coq_direct_declarator'nt
  | Nis'169 -> Coq__1.NT Coq__1.Coq_pointer'nt
  | Nis'168 -> Coq__1.T Coq__1.LPAREN't
  | Nis'167 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'166 -> Coq__1.NT Coq__1.Coq_pointer'nt
  | Nis'165 -> Coq__1.NT Coq__1.Coq_type_qualifier'nt
  | Nis'164 -> Coq__1.NT Coq__1.Coq_attribute_specifier'nt
  | Nis'163 -> Coq__1.NT Coq__1.Coq_pointer'nt
  | Nis'162 -> Coq__1.NT Coq__1.Coq_type_qualifier'nt
  | Nis'161 -> Coq__1.NT Coq__1.Coq_type_qualifier_list'nt
  | Nis'160 -> Coq__1.T Coq__1.STAR't
  | Nis'159 -> Coq__1.T Coq__1.VAR_NAME't
  | Nis'158 -> Coq__1.NT Coq__1.Coq_specifier_qualifier_list'nt
  | Nis'157 -> Coq__1.NT Coq__1.Coq_struct_declaration'nt
  | Nis'156 -> Coq__1.T Coq__1.RBRACE't
  | Nis'155 -> Coq__1.NT Coq__1.Coq_struct_declaration_list'nt
  | Nis'154 -> Coq__1.T Coq__1.LBRACE't
  | Nis'153 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'152 -> Coq__1.NT Coq__1.Coq_attribute_specifier_list'nt
  | Nis'151 -> Coq__1.NT Coq__1.Coq_struct_or_union'nt
  | Nis'150 -> Coq__1.NT Coq__1.Coq_struct_or_union_specifier'nt
  | Nis'149 -> Coq__1.NT Coq__1.Coq_type_qualifier'nt
  | Nis'148 -> Coq__1.NT Coq__1.Coq_type_qualifier_noattr'nt
  | Nis'147 -> Coq__1.NT Coq__1.Coq_type_specifier'nt
  | Nis'146 -> Coq__1.NT Coq__1.Coq_cast_expression'nt
  | Nis'145 -> Coq__1.T Coq__1.DEC't
  | Nis'144 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'143 -> Coq__1.T Coq__1.DOT't
  | Nis'142 -> Coq__1.T Coq__1.INC't
  | Nis'141 -> Coq__1.T Coq__1.RBRACK't
  | Nis'140 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'139 -> Coq__1.T Coq__1.LBRACK't
  | Nis'138 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'137 -> Coq__1.T Coq__1.COMMA't
  | Nis'135 -> Coq__1.NT Coq__1.Coq_argument_expression_list'nt
  | Nis'134 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'133 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'132 -> Coq__1.NT Coq__1.Coq_logical_AND_expression'nt
  | Nis'131 -> Coq__1.T Coq__1.BARBAR't
  | Nis'130 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'129 -> Coq__1.NT Coq__1.Coq_conditional_expression'nt
  | Nis'128 -> Coq__1.T Coq__1.COLON't
  | Nis'127 -> Coq__1.NT Coq__1.Coq_assignment_expression'nt
  | Nis'126 -> Coq__1.NT Coq__1.Coq_conditional_expression'nt
  | Nis'125 -> Coq__1.T Coq__1.COMMA't
  | Nis'124 -> Coq__1.NT Coq__1.Coq_expression'nt
  | Nis'123 -> Coq__1.NT Coq__1.Coq_inclusive_OR_expression'nt
  | Nis'122 -> Coq__1.NT Coq__1.Coq_exclusive_OR_expression'nt
  | Nis'121 -> Coq__1.NT Coq__1.AND_expression'nt
  | Nis'120 -> Coq__1.NT Coq__1.Coq_equality_expression'nt
  | Nis'119 -> Coq__1.T Coq__1.AND't
  | Nis'118 -> Coq__1.NT Coq__1.AND_expression'nt
  | Nis'117 -> Coq__1.NT Coq__1.Coq_relational_expression'nt
  | Nis'116 -> Coq__1.T Coq__1.EQEQ't
  | Nis'115 -> Coq__1.NT Coq__1.Coq_relational_expression'nt
  | Nis'114 -> Coq__1.T Coq__1.NEQ't
  | Nis'113 -> Coq__1.NT Coq__1.Coq_equality_expression'nt
  | Nis'112 -> Coq__1.T Coq__1.HAT't
  | Nis'111 -> Coq__1.NT Coq__1.Coq_exclusive_OR_expression'nt
  | Nis'110 -> Coq__1.T Coq__1.BAR't
  | Nis'109 -> Coq__1.NT Coq__1.Coq_inclusive_OR_expression'nt
  | Nis'108 -> Coq__1.T Coq__1.ANDAND't
  | Nis'107 -> Coq__1.NT Coq__1.Coq_logical_AND_expression'nt
  | Nis'106 -> Coq__1.T Coq__1.QUESTION't
  | Nis'105 -> Coq__1.NT Coq__1.Coq_logical_OR_expression'nt
  | Nis'104 -> Coq__1.NT Coq__1.Coq_shift_expression'nt
  | Nis'103 -> Coq__1.T Coq__1.GEQ't
  | Nis'102 -> Coq__1.NT Coq__1.Coq_shift_expression'nt
  | Nis'101 -> Coq__1.T Coq__1.GT't
  | Nis'100 -> Coq__1.NT Coq__1.Coq_shift_expression'nt
  | Nis'99 -> Coq__1.T Coq__1.LEQ't
  | Nis'98 -> Coq__1.NT Coq__1.Coq_additive_expression'nt
  | Nis'97 -> Coq__1.NT Coq__1.Coq_shift_expression'nt
  | Nis'96 -> Coq__1.T Coq__1.LT't
  | Nis'95 -> Coq__1.NT Coq__1.Coq_relational_expression'nt
  | Nis'94 -> Coq__1.NT Coq__1.Coq_additive_expression'nt
  | Nis'93 -> Coq__1.T Coq__1.LEFT't
  | Nis'92 -> Coq__1.NT Coq__1.Coq_multiplicative_expression'nt
  | Nis'91 -> Coq__1.T Coq__1.MINUS't
  | Nis'90 -> Coq__1.NT Coq__1.Coq_multiplicative_expression'nt
  | Nis'89 -> Coq__1.T Coq__1.PLUS't
  | Nis'88 -> Coq__1.NT Coq__1.Coq_additive_expression'nt
  | Nis'87 -> Coq__1.NT Coq__1.Coq_cast_expression'nt
  | Nis'86 -> Coq__1.NT Coq__1.Coq_cast_expression'nt
  | Nis'85 -> Coq__1.T Coq__1.PERCENT't
  | Nis'84 -> Coq__1.NT Coq__1.Coq_cast_expression'nt
  | Nis'83 -> Coq__1.T Coq__1.SLASH't
  | Nis'82 -> Coq__1.NT Coq__1.Coq_cast_expression'nt
  | Nis'81 -> Coq__1.T Coq__1.STAR't
  | Nis'80 -> Coq__1.NT Coq__1.Coq_multiplicative_expression'nt
  | Nis'79 -> Coq__1.T Coq__1.RIGHT't
  | Nis'78 -> Coq__1.NT Coq__1.Coq_shift_expression'nt
  | Nis'77 -> Coq__1.NT Coq__1.Coq_assignment_operator'nt
  | Nis'76 -> Coq__1.T Coq__1.ADD_ASSIGN't
  | Nis'75 -> Coq__1.T Coq__1.AND_ASSIGN't
  | Nis'74 -> Coq__1.T Coq__1.DIV_ASSIGN't
  | Nis'73 -> Coq__1.T Coq__1.EQ't
  | Nis'72 -> Coq__1.T Coq__1.LEFT_ASSIGN't
  | Nis'71 -> Coq__1.T Coq__1.MOD_ASSIGN't
  | Nis'70 -> Coq__1.T Coq__1.MUL_ASSIGN't
  | Nis'69 -> Coq__1.T Coq__1.OR_ASSIGN't
  | Nis'68 -> Coq__1.T Coq__1.RIGHT_ASSIGN't
  | Nis'67 -> Coq__1.T Coq__1.SUB_ASSIGN't
  | Nis'66 -> Coq__1.T Coq__1.XOR_ASSIGN't
  | Nis'65 -> Coq__1.NT Coq__1.Coq_unary_expression'nt
  | Nis'63 -> Coq__1.T Coq__1.LPAREN't
  | Nis'62 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'61 -> Coq__1.T Coq__1.PTR't
  | Nis'60 -> Coq__1.NT Coq__1.Coq_postfix_expression'nt
  | Nis'59 -> Coq__1.NT Coq__1.Coq_primary_expression'nt
  | Nis'58 -> Coq__1.NT Coq__1.Coq_unary_expression'nt
  | Nis'57 -> Coq__1.NT Coq__1.Coq_unary_operator'nt
  | Nis'56 -> Coq__1.T Coq__1.LPAREN't
  | Nis'55 -> Coq__1.T Coq__1.ALIGNOF't
  | Nis'54 -> Coq__1.T Coq__1.AND't
  | Nis'53 -> Coq__1.T Coq__1.BANG't
  | Nis'52 -> Coq__1.T Coq__1.LPAREN't
  | Nis'51 -> Coq__1.T Coq__1.ALIGNAS't
  | Nis'50 -> Coq__1.T Coq__1.CHAR't
  | Nis'49 -> Coq__1.T Coq__1.CONST't
  | Nis'48 -> Coq__1.T Coq__1.DOUBLE't
  | Nis'47 -> Coq__1.T Coq__1.LPAREN't
  | Nis'46 -> Coq__1.T Coq__1.BUILTIN_OFFSETOF't
  | Nis'45 -> Coq__1.T Coq__1.LPAREN't
  | Nis'44 -> Coq__1.T Coq__1.BUILTIN_VA_ARG't
  | Nis'43 -> Coq__1.T Coq__1.CONSTANT't
  | Nis'42 -> Coq__1.T Coq__1.DEC't
  | Nis'40 -> Coq__1.T Coq__1.LPAREN't
  | Nis'39 -> Coq__1.NT Coq__1.Coq_gcc_attribute_word'nt
  | Nis'38 -> Coq__1.T Coq__1.CONST't
  | Nis'37 -> Coq__1.T Coq__1.OTHER_NAME't
  | Nis'36 -> Coq__1.T Coq__1.PACKED't
  | Nis'35 -> Coq__1.T Coq__1.LPAREN't
  | Nis'34 -> Coq__1.T Coq__1.LPAREN't
  | Nis'33 -> Coq__1.T Coq__1.ATTRIBUTE't
  | Nis'32 -> Coq__1.T Coq__1.ENUM't
  | Nis'31 -> Coq__1.T Coq__1.FLOAT't
  | Nis'30 -> Coq__1.T Coq__1.LPAREN't
  | Nis'29 -> Coq__1.T Coq__1.INC't
  | Nis'28 -> Coq__1.T Coq__1.INT't
  | Nis'27 -> Coq__1.T Coq__1.LONG't
  | Nis'26 -> Coq__1.T Coq__1.LPAREN't
  | Nis'25 -> Coq__1.T Coq__1.LPAREN't
  | Nis'24 -> Coq__1.T Coq__1.MINUS't
  | Nis'23 -> Coq__1.T Coq__1.PLUS't
  | Nis'22 -> Coq__1.T Coq__1.SIZEOF't
  | Nis'21 -> Coq__1.T Coq__1.STAR't
  | Nis'20 -> Coq__1.T Coq__1.STRING_LITERAL't
  | Nis'19 -> Coq__1.T Coq__1.TILDE't
  | Nis'18 -> Coq__1.T Coq__1.VAR_NAME't
  | Nis'17 -> Coq__1.T Coq__1.LPAREN't
  | Nis'16 -> Coq__1.T Coq__1.PACKED't
  | Nis'15 -> Coq__1.T Coq__1.PRAGMA't
  | Nis'14 -> Coq__1.T Coq__1.REGISTER't
  | Nis'13 -> Coq__1.T Coq__1.RESTRICT't
  | Nis'12 -> Coq__1.T Coq__1.SEMICOLON't
  | Nis'11 -> Coq__1.T Coq__1.SHORT't
  | Nis'10 -> Coq__1.T Coq__1.SIGNED't
  | Nis'9 -> Coq__1.T Coq__1.STATIC't
  | Nis'8 -> Coq__1.T Coq__1.STRUCT't
  | Nis'7 -> Coq__1.T Coq__1.TYPEDEF't
  | Nis'6 -> Coq__1.T Coq__1.TYPEDEF_NAME't
  | Nis'5 -> Coq__1.T Coq__1.UNDERSCORE_BOOL't
  | Nis'4 -> Coq__1.T Coq__1.UNION't
  | Nis'3 -> Coq__1.T Coq__1.UNSIGNED't
  | Nis'2 -> Coq__1.T Coq__1.VOID't
  | Nis'1 -> Coq__1.T Coq__1.VOLATILE't
  | _ -> Coq__1.T Coq__1.RPAREN't

  type initstate' =
  | Init'0

  type initstate = initstate'

  (** val initstateNum : initstate coq_Numbered **)

  let initstateNum =
    { inj = (fun _ -> coq_On); surj = (fun n ->
      Camlcoq.Int31.destr
        (fun _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ->
        Init'0)
        n); inj_bound = (Camlcoq.Int31.constr (false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      false, false, false, false, false, false, false, false, false, false,
      false, false, false, false, false, false, true)) }

  (** val coq_InitStateAlph : initstate coq_Alphabet **)

  let coq_InitStateAlph =
    coq_NumberedAlphabet initstateNum

  type state =
  | Init of initstate
  | Ninit of noninitstate

  (** val state_rect :
      (initstate -> 'a1) -> (noninitstate -> 'a1) -> state -> 'a1 **)

  let state_rect f f0 = function
  | Init x -> f x
  | Ninit x -> f0 x

  (** val state_rec :
      (initstate -> 'a1) -> (noninitstate -> 'a1) -> state -> 'a1 **)

  let state_rec f f0 = function
  | Init x -> f x
  | Ninit x -> f0 x

  (** val coq_StateAlph : state coq_Alphabet **)

  let coq_StateAlph =
    { coq_AlphabetComparable = (fun x y ->
      match x with
      | Init x0 ->
        (match y with
         | Init y0 -> compare coq_InitStateAlph.coq_AlphabetComparable x0 y0
         | Ninit _ -> Lt)
      | Ninit x0 ->
        (match y with
         | Init _ -> Gt
         | Ninit y0 ->
           compare coq_NonInitStateAlph.coq_AlphabetComparable x0 y0));
      coq_AlphabetFinite =
      (app
        (map (fun x -> Init x)
          (all_list coq_InitStateAlph.coq_AlphabetFinite))
        (map (fun x -> Ninit x)
          (all_list coq_NonInitStateAlph.coq_AlphabetFinite))) }

  type lookahead_action =
  | Shift_act of noninitstate
  | Reduce_act of Gram.production
  | Fail_act

  (** val lookahead_action_rect :
      Gram.terminal -> (noninitstate -> __ -> 'a1) -> (Gram.production ->
      'a1) -> 'a1 -> lookahead_action -> 'a1 **)

  let lookahead_action_rect _ f f0 f1 = function
  | Shift_act x -> f x __
  | Reduce_act x -> f0 x
  | Fail_act -> f1

  (** val lookahead_action_rec :
      Gram.terminal -> (noninitstate -> __ -> 'a1) -> (Gram.production ->
      'a1) -> 'a1 -> lookahead_action -> 'a1 **)

  let lookahead_action_rec _ f f0 f1 = function
  | Shift_act x -> f x __
  | Reduce_act x -> f0 x
  | Fail_act -> f1

  type action =
  | Default_reduce_act of Gram.production
  | Lookahead_act of (Gram.terminal -> lookahead_action)

  (** val action_rect :
      (Gram.production -> 'a1) -> ((Gram.terminal -> lookahead_action) ->
      'a1) -> action -> 'a1 **)

  let action_rect f f0 = function
  | Default_reduce_act x -> f x
  | Lookahead_act x -> f0 x

  (** val action_rec :
      (Gram.production -> 'a1) -> ((Gram.terminal -> lookahead_action) ->
      'a1) -> action -> 'a1 **)

  let action_rec f f0 = function
  | Default_reduce_act x -> f x
  | Lookahead_act x -> f0 x

  type item = { prod_item : Gram.production; dot_pos_item : nat;
                lookaheads_item : Gram.terminal list }

  (** val prod_item : item -> Gram.production **)

  let prod_item x = x.prod_item

  (** val dot_pos_item : item -> nat **)

  let dot_pos_item x = x.dot_pos_item

  (** val lookaheads_item : item -> Gram.terminal list **)

  let lookaheads_item x = x.lookaheads_item

  (** val start_nt : initstate -> Coq__1.nonterminal **)

  let start_nt _ =
    Coq__1.Coq_translation_unit_file'nt

  (** val action_table : state -> action **)

  let action_table = function
  | Init _ ->
    Lookahead_act (fun terminal0 ->
      match terminal0 with
      | Coq__1.ALIGNAS't -> Shift_act Nis'51
      | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
      | Coq__1.AUTO't -> Shift_act Nis'177
      | Coq__1.CHAR't -> Shift_act Nis'50
      | Coq__1.CONST't -> Shift_act Nis'49
      | Coq__1.DOUBLE't -> Shift_act Nis'48
      | Coq__1.ENUM't -> Shift_act Nis'32
      | Coq__1.EOF't -> Shift_act Nis'358
      | Coq__1.EXTERN't -> Shift_act Nis'176
      | Coq__1.FLOAT't -> Shift_act Nis'31
      | Coq__1.INLINE't -> Shift_act Nis'175
      | Coq__1.INT't -> Shift_act Nis'28
      | Coq__1.LONG't -> Shift_act Nis'27
      | Coq__1.NORETURN't -> Shift_act Nis'174
      | Coq__1.PACKED't -> Shift_act Nis'16
      | Coq__1.PRAGMA't -> Shift_act Nis'15
      | Coq__1.REGISTER't -> Shift_act Nis'14
      | Coq__1.RESTRICT't -> Shift_act Nis'13
      | Coq__1.SEMICOLON't -> Shift_act Nis'12
      | Coq__1.SHORT't -> Shift_act Nis'11
      | Coq__1.SIGNED't -> Shift_act Nis'10
      | Coq__1.STATIC't -> Shift_act Nis'9
      | Coq__1.STRUCT't -> Shift_act Nis'8
      | Coq__1.TYPEDEF't -> Shift_act Nis'7
      | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
      | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
      | Coq__1.UNION't -> Shift_act Nis'4
      | Coq__1.UNSIGNED't -> Shift_act Nis'3
      | Coq__1.VOID't -> Shift_act Nis'2
      | Coq__1.VOLATILE't -> Shift_act Nis'1
      | _ -> Fail_act)
  | Ninit n ->
    (match n with
     | Nis'613 -> Default_reduce_act Coq__1.Prod'translation_unit'0
     | Nis'612 -> Default_reduce_act Coq__1.Prod'external_declaration'1
     | Nis'611 -> Default_reduce_act Coq__1.Prod'function_definition'1
     | Nis'610 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'init_declarator'0
         | Coq__1.EQ't -> Shift_act Nis'372
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'init_declarator'0
         | _ -> Fail_act)
     | Nis'609 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACE't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'608 -> Default_reduce_act Coq__1.Prod'declaration_list'0
     | Nis'607 -> Default_reduce_act Coq__1.Prod'function_definition'0
     | Nis'606 -> Default_reduce_act Coq__1.Prod'declaration_list'1
     | Nis'605 -> Default_reduce_act Coq__1.Prod'block_item_list'0
     | Nis'604 -> Default_reduce_act Coq__1.Prod'block_item_list'1
     | Nis'603 -> Default_reduce_act Coq__1.Prod'compound_statement'0
     | Nis'602 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.PRAGMA't -> Shift_act Nis'599
         | Coq__1.RBRACE't -> Shift_act Nis'603
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'601 -> Default_reduce_act Coq__1.Prod'block_item'0
     | Nis'600 -> Default_reduce_act Coq__1.Prod'block_item'1
     | Nis'599 -> Default_reduce_act Coq__1.Prod'block_item'2
     | Nis'598 -> Default_reduce_act Coq__1.Prod'compound_statement'1
     | Nis'597 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'596 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ELSE't -> Shift_act Nis'597
         | _ -> Fail_act)
     | Nis'595 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'0
     | Nis'594 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'0
     | Nis'593 ->
       Default_reduce_act Coq__1.Prod'selection_statement_dangerous'2
     | Nis'592 -> Default_reduce_act Coq__1.Prod'selection_statement_safe'1
     | Nis'591 ->
       Default_reduce_act Coq__1.Prod'labeled_statement_statement_dangerous_'0
     | Nis'590 ->
       Default_reduce_act Coq__1.Prod'labeled_statement_statement_safe_'0
     | Nis'589 ->
       Default_reduce_act Coq__1.Prod'selection_statement_dangerous'0
     | Nis'588 ->
       Default_reduce_act Coq__1.Prod'selection_statement_dangerous'1
     | Nis'587 -> Default_reduce_act Coq__1.Prod'selection_statement_safe'0
     | Nis'586 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'585 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ELSE't -> Shift_act Nis'586
         | _ -> Fail_act)
     | Nis'584 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'3
     | Nis'583 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'582 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'583
         | _ -> Fail_act)
     | Nis'581 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'9
     | Nis'580 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'579 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'580
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'578 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'579
         | _ -> Fail_act)
     | Nis'577 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'6
     | Nis'576 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'575 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'576
         | _ -> Fail_act)
     | Nis'574 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'12
     | Nis'573 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'572 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'573
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'571 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SEMICOLON't -> Shift_act Nis'572
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'570 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'2
     | Nis'569 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'568 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'569
         | _ -> Fail_act)
     | Nis'567 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'8
     | Nis'566 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'565 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'566
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'564 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'565
         | _ -> Fail_act)
     | Nis'563 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'5
     | Nis'562 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'561 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'562
         | _ -> Fail_act)
     | Nis'560 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'11
     | Nis'559 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'558 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'559
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'557 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SEMICOLON't -> Shift_act Nis'558
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'556 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'557
         | _ -> Fail_act)
     | Nis'555 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'4
     | Nis'554 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'553 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'554
         | _ -> Fail_act)
     | Nis'552 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'10
     | Nis'551 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'550 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'551
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'549 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'550
         | _ -> Fail_act)
     | Nis'548 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'7
     | Nis'547 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'546 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'547
         | _ -> Fail_act)
     | Nis'545 ->
       Default_reduce_act Coq__1.Prod'iteration_statement_statement_safe_'13
     | Nis'544 ->
       Default_reduce_act Coq__1.Prod'labeled_statement_statement_safe_'2
     | Nis'543 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Fail_act
         | Coq__1.ANDAND't -> Fail_act
         | Coq__1.AND_ASSIGN't -> Fail_act
         | Coq__1.BAR't -> Fail_act
         | Coq__1.BARBAR't -> Fail_act
         | Coq__1.COLON't -> Fail_act
         | Coq__1.COMMA't -> Fail_act
         | Coq__1.DIV_ASSIGN't -> Fail_act
         | Coq__1.DOT't -> Fail_act
         | Coq__1.ELLIPSIS't -> Fail_act
         | Coq__1.ELSE't -> Reduce_act Coq__1.Prod'statement_safe'6
         | Coq__1.EOF't -> Fail_act
         | Coq__1.EQ't -> Fail_act
         | Coq__1.EQEQ't -> Fail_act
         | Coq__1.GEQ't -> Fail_act
         | Coq__1.GT't -> Fail_act
         | Coq__1.HAT't -> Fail_act
         | Coq__1.LBRACK't -> Fail_act
         | Coq__1.LEFT't -> Fail_act
         | Coq__1.LEFT_ASSIGN't -> Fail_act
         | Coq__1.LEQ't -> Fail_act
         | Coq__1.LT't -> Fail_act
         | Coq__1.MOD_ASSIGN't -> Fail_act
         | Coq__1.MUL_ASSIGN't -> Fail_act
         | Coq__1.NEQ't -> Fail_act
         | Coq__1.OR_ASSIGN't -> Fail_act
         | Coq__1.PERCENT't -> Fail_act
         | Coq__1.PTR't -> Fail_act
         | Coq__1.QUESTION't -> Fail_act
         | Coq__1.RBRACK't -> Fail_act
         | Coq__1.RIGHT't -> Fail_act
         | Coq__1.RIGHT_ASSIGN't -> Fail_act
         | Coq__1.RPAREN't -> Fail_act
         | Coq__1.SLASH't -> Fail_act
         | Coq__1.SUB_ASSIGN't -> Fail_act
         | Coq__1.XOR_ASSIGN't -> Fail_act
         | _ -> Reduce_act Coq__1.Prod'statement_dangerous'6)
     | Nis'542 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Fail_act
         | Coq__1.ANDAND't -> Fail_act
         | Coq__1.AND_ASSIGN't -> Fail_act
         | Coq__1.BAR't -> Fail_act
         | Coq__1.BARBAR't -> Fail_act
         | Coq__1.COLON't -> Fail_act
         | Coq__1.COMMA't -> Fail_act
         | Coq__1.DIV_ASSIGN't -> Fail_act
         | Coq__1.DOT't -> Fail_act
         | Coq__1.ELLIPSIS't -> Fail_act
         | Coq__1.ELSE't -> Reduce_act Coq__1.Prod'statement_safe'1
         | Coq__1.EOF't -> Fail_act
         | Coq__1.EQ't -> Fail_act
         | Coq__1.EQEQ't -> Fail_act
         | Coq__1.GEQ't -> Fail_act
         | Coq__1.GT't -> Fail_act
         | Coq__1.HAT't -> Fail_act
         | Coq__1.LBRACK't -> Fail_act
         | Coq__1.LEFT't -> Fail_act
         | Coq__1.LEFT_ASSIGN't -> Fail_act
         | Coq__1.LEQ't -> Fail_act
         | Coq__1.LT't -> Fail_act
         | Coq__1.MOD_ASSIGN't -> Fail_act
         | Coq__1.MUL_ASSIGN't -> Fail_act
         | Coq__1.NEQ't -> Fail_act
         | Coq__1.OR_ASSIGN't -> Fail_act
         | Coq__1.PERCENT't -> Fail_act
         | Coq__1.PTR't -> Fail_act
         | Coq__1.QUESTION't -> Fail_act
         | Coq__1.RBRACK't -> Fail_act
         | Coq__1.RIGHT't -> Fail_act
         | Coq__1.RIGHT_ASSIGN't -> Fail_act
         | Coq__1.RPAREN't -> Fail_act
         | Coq__1.SLASH't -> Fail_act
         | Coq__1.SUB_ASSIGN't -> Fail_act
         | Coq__1.XOR_ASSIGN't -> Fail_act
         | _ -> Reduce_act Coq__1.Prod'statement_dangerous'1)
     | Nis'541 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Fail_act
         | Coq__1.ANDAND't -> Fail_act
         | Coq__1.AND_ASSIGN't -> Fail_act
         | Coq__1.BAR't -> Fail_act
         | Coq__1.BARBAR't -> Fail_act
         | Coq__1.COLON't -> Fail_act
         | Coq__1.COMMA't -> Fail_act
         | Coq__1.DIV_ASSIGN't -> Fail_act
         | Coq__1.DOT't -> Fail_act
         | Coq__1.ELLIPSIS't -> Fail_act
         | Coq__1.ELSE't -> Reduce_act Coq__1.Prod'statement_safe'2
         | Coq__1.EOF't -> Fail_act
         | Coq__1.EQ't -> Fail_act
         | Coq__1.EQEQ't -> Fail_act
         | Coq__1.GEQ't -> Fail_act
         | Coq__1.GT't -> Fail_act
         | Coq__1.HAT't -> Fail_act
         | Coq__1.LBRACK't -> Fail_act
         | Coq__1.LEFT't -> Fail_act
         | Coq__1.LEFT_ASSIGN't -> Fail_act
         | Coq__1.LEQ't -> Fail_act
         | Coq__1.LT't -> Fail_act
         | Coq__1.MOD_ASSIGN't -> Fail_act
         | Coq__1.MUL_ASSIGN't -> Fail_act
         | Coq__1.NEQ't -> Fail_act
         | Coq__1.OR_ASSIGN't -> Fail_act
         | Coq__1.PERCENT't -> Fail_act
         | Coq__1.PTR't -> Fail_act
         | Coq__1.QUESTION't -> Fail_act
         | Coq__1.RBRACK't -> Fail_act
         | Coq__1.RIGHT't -> Fail_act
         | Coq__1.RIGHT_ASSIGN't -> Fail_act
         | Coq__1.RPAREN't -> Fail_act
         | Coq__1.SLASH't -> Fail_act
         | Coq__1.SUB_ASSIGN't -> Fail_act
         | Coq__1.XOR_ASSIGN't -> Fail_act
         | _ -> Reduce_act Coq__1.Prod'statement_dangerous'2)
     | Nis'540 -> Default_reduce_act Coq__1.Prod'statement_safe'4
     | Nis'539 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Fail_act
         | Coq__1.ANDAND't -> Fail_act
         | Coq__1.AND_ASSIGN't -> Fail_act
         | Coq__1.BAR't -> Fail_act
         | Coq__1.BARBAR't -> Fail_act
         | Coq__1.COLON't -> Fail_act
         | Coq__1.COMMA't -> Fail_act
         | Coq__1.DIV_ASSIGN't -> Fail_act
         | Coq__1.DOT't -> Fail_act
         | Coq__1.ELLIPSIS't -> Fail_act
         | Coq__1.ELSE't -> Reduce_act Coq__1.Prod'statement_safe'5
         | Coq__1.EOF't -> Fail_act
         | Coq__1.EQ't -> Fail_act
         | Coq__1.EQEQ't -> Fail_act
         | Coq__1.GEQ't -> Fail_act
         | Coq__1.GT't -> Fail_act
         | Coq__1.HAT't -> Fail_act
         | Coq__1.LBRACK't -> Fail_act
         | Coq__1.LEFT't -> Fail_act
         | Coq__1.LEFT_ASSIGN't -> Fail_act
         | Coq__1.LEQ't -> Fail_act
         | Coq__1.LT't -> Fail_act
         | Coq__1.MOD_ASSIGN't -> Fail_act
         | Coq__1.MUL_ASSIGN't -> Fail_act
         | Coq__1.NEQ't -> Fail_act
         | Coq__1.OR_ASSIGN't -> Fail_act
         | Coq__1.PERCENT't -> Fail_act
         | Coq__1.PTR't -> Fail_act
         | Coq__1.QUESTION't -> Fail_act
         | Coq__1.RBRACK't -> Fail_act
         | Coq__1.RIGHT't -> Fail_act
         | Coq__1.RIGHT_ASSIGN't -> Fail_act
         | Coq__1.RPAREN't -> Fail_act
         | Coq__1.SLASH't -> Fail_act
         | Coq__1.SUB_ASSIGN't -> Fail_act
         | Coq__1.XOR_ASSIGN't -> Fail_act
         | _ -> Reduce_act Coq__1.Prod'statement_dangerous'5)
     | Nis'538 -> Default_reduce_act Coq__1.Prod'statement_safe'0
     | Nis'537 -> Default_reduce_act Coq__1.Prod'statement_safe'3
     | Nis'536 ->
       Default_reduce_act Coq__1.Prod'labeled_statement_statement_safe_'1
     | Nis'535 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'534 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'535
         | _ -> Fail_act)
     | Nis'532 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'531 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'532
         | _ -> Fail_act)
     | Nis'530 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Fail_act
         | Coq__1.ANDAND't -> Fail_act
         | Coq__1.AND_ASSIGN't -> Fail_act
         | Coq__1.BAR't -> Fail_act
         | Coq__1.BARBAR't -> Fail_act
         | Coq__1.COLON't -> Fail_act
         | Coq__1.COMMA't -> Fail_act
         | Coq__1.DIV_ASSIGN't -> Fail_act
         | Coq__1.DOT't -> Fail_act
         | Coq__1.ELLIPSIS't -> Fail_act
         | Coq__1.ELSE't ->
           Reduce_act Coq__1.Prod'iteration_statement_statement_safe_'1
         | Coq__1.EOF't -> Fail_act
         | Coq__1.EQ't -> Fail_act
         | Coq__1.EQEQ't -> Fail_act
         | Coq__1.GEQ't -> Fail_act
         | Coq__1.GT't -> Fail_act
         | Coq__1.HAT't -> Fail_act
         | Coq__1.LBRACK't -> Fail_act
         | Coq__1.LEFT't -> Fail_act
         | Coq__1.LEFT_ASSIGN't -> Fail_act
         | Coq__1.LEQ't -> Fail_act
         | Coq__1.LT't -> Fail_act
         | Coq__1.MOD_ASSIGN't -> Fail_act
         | Coq__1.MUL_ASSIGN't -> Fail_act
         | Coq__1.NEQ't -> Fail_act
         | Coq__1.OR_ASSIGN't -> Fail_act
         | Coq__1.PERCENT't -> Fail_act
         | Coq__1.PTR't -> Fail_act
         | Coq__1.QUESTION't -> Fail_act
         | Coq__1.RBRACK't -> Fail_act
         | Coq__1.RIGHT't -> Fail_act
         | Coq__1.RIGHT_ASSIGN't -> Fail_act
         | Coq__1.RPAREN't -> Fail_act
         | Coq__1.SLASH't -> Fail_act
         | Coq__1.SUB_ASSIGN't -> Fail_act
         | Coq__1.XOR_ASSIGN't -> Fail_act
         | _ ->
           Reduce_act Coq__1.Prod'iteration_statement_statement_dangerous_'1)
     | Nis'529 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.SEMICOLON't -> Shift_act Nis'530
         | _ -> Fail_act)
     | Nis'528 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'529
         | _ -> Fail_act)
     | Nis'526 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'527
         | _ -> Fail_act)
     | Nis'525 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.WHILE't -> Shift_act Nis'526
         | _ -> Fail_act)
     | Nis'524 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'3
     | Nis'523 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'522 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'523
         | _ -> Fail_act)
     | Nis'521 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'9
     | Nis'520 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'519 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'520
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'518 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'519
         | _ -> Fail_act)
     | Nis'517 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'6
     | Nis'516 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'515 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'516
         | _ -> Fail_act)
     | Nis'514 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'12
     | Nis'513 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'512 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'513
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'511 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SEMICOLON't -> Shift_act Nis'512
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'510 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'2
     | Nis'509 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'508 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'509
         | _ -> Fail_act)
     | Nis'507 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'8
     | Nis'506 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'505 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'506
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'504 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'505
         | _ -> Fail_act)
     | Nis'503 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'5
     | Nis'502 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'501 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'502
         | _ -> Fail_act)
     | Nis'500 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'11
     | Nis'499 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'498 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'499
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'497 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SEMICOLON't -> Shift_act Nis'498
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'496 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'497
         | _ -> Fail_act)
     | Nis'495 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'4
     | Nis'494 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'493 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'494
         | _ -> Fail_act)
     | Nis'492 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'10
     | Nis'491 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'490 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'491
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'489 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'490
         | _ -> Fail_act)
     | Nis'488 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'7
     | Nis'487 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'486 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'487
         | _ -> Fail_act)
     | Nis'485 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'13
     | Nis'484 ->
       Default_reduce_act
         Coq__1.Prod'iteration_statement_statement_dangerous_'1
     | Nis'483 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.SEMICOLON't -> Shift_act Nis'484
         | _ -> Fail_act)
     | Nis'482 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'483
         | _ -> Fail_act)
     | Nis'480 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'481
         | _ -> Fail_act)
     | Nis'479 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.WHILE't -> Shift_act Nis'480
         | _ -> Fail_act)
     | Nis'478 ->
       Default_reduce_act Coq__1.Prod'labeled_statement_statement_dangerous_'2
     | Nis'477 -> Default_reduce_act Coq__1.Prod'statement_dangerous'6
     | Nis'476 -> Default_reduce_act Coq__1.Prod'statement_dangerous'1
     | Nis'475 -> Default_reduce_act Coq__1.Prod'expression_statement'0
     | Nis'474 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'475
         | _ -> Fail_act)
     | Nis'473 -> Default_reduce_act Coq__1.Prod'statement_dangerous'2
     | Nis'472 -> Default_reduce_act Coq__1.Prod'statement_dangerous'4
     | Nis'471 -> Default_reduce_act Coq__1.Prod'statement_dangerous'5
     | Nis'470 -> Default_reduce_act Coq__1.Prod'statement_dangerous'0
     | Nis'469 -> Default_reduce_act Coq__1.Prod'statement_dangerous'3
     | Nis'468 ->
       Default_reduce_act Coq__1.Prod'labeled_statement_statement_dangerous_'1
     | Nis'467 -> Default_reduce_act Coq__1.Prod'asm_statement'0
     | Nis'466 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.SEMICOLON't -> Shift_act Nis'467
         | _ -> Fail_act)
     | Nis'465 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'466
         | _ -> Fail_act)
     | Nis'464 -> Default_reduce_act Coq__1.Prod'asm_operands_ne'1
     | Nis'463 -> Default_reduce_act Coq__1.Prod'asm_arguments'3
     | Nis'462 -> Default_reduce_act Coq__1.Prod'asm_flags'1
     | Nis'461 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'460
         | _ -> Fail_act)
     | Nis'460 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'461
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'asm_flags'0
         | _ -> Fail_act)
     | Nis'459 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'460
         | _ -> Fail_act)
     | Nis'458 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'459
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'asm_arguments'2
         | _ -> Fail_act)
     | Nis'457 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'asm_operands'0
         | Coq__1.LBRACK't -> Shift_act Nis'445
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'asm_operands'0
         | Coq__1.STRING_LITERAL't -> Reduce_act Coq__1.Prod'asm_op_name'0
         | _ -> Fail_act)
     | Nis'456 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'457
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'asm_arguments'1
         | _ -> Fail_act)
     | Nis'455 -> Default_reduce_act Coq__1.Prod'asm_operand'0
     | Nis'454 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'455
         | _ -> Fail_act)
     | Nis'452 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'453
         | _ -> Fail_act)
     | Nis'451 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'452
         | _ -> Fail_act)
     | Nis'450 -> Default_reduce_act Coq__1.Prod'asm_operands_ne'0
     | Nis'449 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LBRACK't -> Shift_act Nis'445
         | Coq__1.STRING_LITERAL't -> Reduce_act Coq__1.Prod'asm_op_name'0
         | _ -> Fail_act)
     | Nis'448 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'asm_operands'1
         | Coq__1.COMMA't -> Shift_act Nis'449
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'asm_operands'1
         | _ -> Fail_act)
     | Nis'447 -> Default_reduce_act Coq__1.Prod'asm_op_name'1
     | Nis'446 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'447
         | _ -> Fail_act)
     | Nis'445 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.OTHER_NAME't -> Shift_act Nis'446
         | _ -> Fail_act)
     | Nis'444 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'asm_operands'0
         | Coq__1.LBRACK't -> Shift_act Nis'445
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'asm_operands'0
         | Coq__1.STRING_LITERAL't -> Reduce_act Coq__1.Prod'asm_op_name'0
         | _ -> Fail_act)
     | Nis'443 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'444
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'asm_arguments'0
         | _ -> Fail_act)
     | Nis'442 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'443
         | _ -> Fail_act)
     | Nis'441 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'442
         | _ -> Fail_act)
     | Nis'440 -> Default_reduce_act Coq__1.Prod'asm_attributes'2
     | Nis'439 -> Default_reduce_act Coq__1.Prod'asm_attributes'1
     | Nis'438 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.CONST't -> Shift_act Nis'438
         | Coq__1.LPAREN't -> Reduce_act Coq__1.Prod'asm_attributes'0
         | Coq__1.VOLATILE't -> Shift_act Nis'437
         | _ -> Fail_act)
     | Nis'437 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.CONST't -> Shift_act Nis'438
         | Coq__1.LPAREN't -> Reduce_act Coq__1.Prod'asm_attributes'0
         | Coq__1.VOLATILE't -> Shift_act Nis'437
         | _ -> Fail_act)
     | Nis'436 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.CONST't -> Shift_act Nis'438
         | Coq__1.LPAREN't -> Reduce_act Coq__1.Prod'asm_attributes'0
         | Coq__1.VOLATILE't -> Shift_act Nis'437
         | _ -> Fail_act)
     | Nis'435 -> Default_reduce_act Coq__1.Prod'jump_statement'2
     | Nis'434 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.SEMICOLON't -> Shift_act Nis'435
         | _ -> Fail_act)
     | Nis'433 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'432 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'433
         | _ -> Fail_act)
     | Nis'430 -> Default_reduce_act Coq__1.Prod'jump_statement'1
     | Nis'429 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.SEMICOLON't -> Shift_act Nis'430
         | _ -> Fail_act)
     | Nis'428 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'427 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'428
         | _ -> Fail_act)
     | Nis'426 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'425 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'424 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'425
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'423 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SEMICOLON't -> Shift_act Nis'424
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'422 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SEMICOLON't -> Shift_act Nis'423
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'421 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'422
         | _ -> Fail_act)
     | Nis'420 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'419 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'418 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'419
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'417 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SEMICOLON't -> Shift_act Nis'418
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'416 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SEMICOLON't -> Shift_act Nis'417
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'415 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'416
         | _ -> Fail_act)
     | Nis'414 -> Default_reduce_act Coq__1.Prod'jump_statement'0
     | Nis'413 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.SEMICOLON't -> Shift_act Nis'414
         | _ -> Fail_act)
     | Nis'412 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.OTHER_NAME't -> Shift_act Nis'413
         | _ -> Fail_act)
     | Nis'411 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'410 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'411
         | _ -> Fail_act)
     | Nis'408 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'409
         | _ -> Fail_act)
     | Nis'407 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'406 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'407
         | _ -> Fail_act)
     | Nis'405 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'404 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'405
         | _ -> Fail_act)
     | Nis'402 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'403
         | _ -> Fail_act)
     | Nis'401 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'400 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'401
         | _ -> Fail_act)
     | Nis'398 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'399
         | _ -> Fail_act)
     | Nis'397 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'533
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'531
         | Coq__1.DO't -> Shift_act Nis'420
         | Coq__1.FOR't -> Shift_act Nis'415
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'408
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'406
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'402
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'398
         | _ -> Fail_act)
     | Nis'396 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'397
         | _ -> Fail_act)
     | Nis'394 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'395
         | _ -> Fail_act)
     | Nis'393 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'392 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'393
         | _ -> Fail_act)
     | Nis'391 -> Default_reduce_act Coq__1.Prod'jump_statement'3
     | Nis'390 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.SEMICOLON't -> Shift_act Nis'391
         | _ -> Fail_act)
     | Nis'389 -> Default_reduce_act Coq__1.Prod'jump_statement'4
     | Nis'388 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SEMICOLON't -> Shift_act Nis'389
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'387 -> Default_reduce_act Coq__1.Prod'expression_statement'1
     | Nis'386 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'385 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'386
         | _ -> Fail_act)
     | Nis'383 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'384
         | _ -> Fail_act)
     | Nis'382 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'381 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'382
         | _ -> Fail_act)
     | Nis'379 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'380
         | _ -> Fail_act)
     | Nis'378 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ASM't -> Shift_act Nis'436
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BREAK't -> Shift_act Nis'434
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CASE't -> Shift_act Nis'431
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.CONTINUE't -> Shift_act Nis'429
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DEFAULT't -> Shift_act Nis'427
         | Coq__1.DO't -> Shift_act Nis'426
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.FOR't -> Shift_act Nis'421
         | Coq__1.GOTO't -> Shift_act Nis'412
         | Coq__1.IF't -> Shift_act Nis'394
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.OTHER_NAME't -> Shift_act Nis'392
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.PRAGMA't -> Shift_act Nis'599
         | Coq__1.RBRACE't -> Shift_act Nis'598
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RETURN't -> Shift_act Nis'388
         | Coq__1.SEMICOLON't -> Shift_act Nis'387
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.SWITCH't -> Shift_act Nis'383
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | Coq__1.WHILE't -> Shift_act Nis'379
         | _ -> Fail_act)
     | Nis'377 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACE't -> Shift_act Nis'378
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'376 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'168
         | Coq__1.SEMICOLON't -> Shift_act Nis'366
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'375 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACE't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'374 -> Default_reduce_act Coq__1.Prod'init_declarator_list'0
     | Nis'373 -> Default_reduce_act Coq__1.Prod'init_declarator'1
     | Nis'372 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'277
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'371 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'init_declarator'0
         | Coq__1.EQ't -> Shift_act Nis'372
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'init_declarator'0
         | _ -> Fail_act)
     | Nis'370 -> Default_reduce_act Coq__1.Prod'init_declarator_list'1
     | Nis'369 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'168
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'368 -> Default_reduce_act Coq__1.Prod'declaration'0
     | Nis'367 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'369
         | Coq__1.SEMICOLON't -> Shift_act Nis'368
         | _ -> Fail_act)
     | Nis'366 -> Default_reduce_act Coq__1.Prod'declaration'1
     | Nis'365 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'168
         | Coq__1.SEMICOLON't -> Shift_act Nis'366
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'364 -> Default_reduce_act Coq__1.Prod'translation_unit'1
     | Nis'363 -> Default_reduce_act Coq__1.Prod'external_declaration'0
     | Nis'362 -> Default_reduce_act Coq__1.Prod'translation_unit_file'0
     | Nis'361 -> Default_reduce_act Coq__1.Prod'translation_unit'2
     | Nis'360 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EOF't -> Shift_act Nis'362
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PRAGMA't -> Shift_act Nis'15
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SEMICOLON't -> Shift_act Nis'361
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'358 -> Default_reduce_act Coq__1.Prod'translation_unit_file'1
     | Nis'357 -> Default_reduce_act Coq__1.Prod'attribute_specifier'1
     | Nis'356 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'137
         | Coq__1.RPAREN't -> Shift_act Nis'357
         | _ -> Fail_act)
     | Nis'355 -> Default_reduce_act Coq__1.Prod'unary_expression'4
     | Nis'354 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.AND_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.DIV_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.LBRACE't -> Shift_act Nis'273
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.LEFT_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.MINUS't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.MOD_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.MUL_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.OR_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.PERCENT't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.PLUS't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.RIGHT_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.SLASH't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.STAR't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.SUB_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | Coq__1.XOR_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'5
         | _ -> Fail_act)
     | Nis'353 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'354
         | _ -> Fail_act)
     | Nis'352 -> Default_reduce_act Coq__1.Prod'cast_expression'1
     | Nis'351 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'273
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'350 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'351
         | _ -> Fail_act)
     | Nis'349 -> Default_reduce_act Coq__1.Prod'unary_expression'1
     | Nis'348 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LBRACE't -> Shift_act Nis'273
         | _ -> Fail_act)
     | Nis'347 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'348
         | _ -> Fail_act)
     | Nis'346 -> Default_reduce_act Coq__1.Prod'enum_specifier'3
     | Nis'345 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACE't -> Shift_act Nis'346
         | Coq__1.VAR_NAME't -> Shift_act Nis'332
         | _ -> Fail_act)
     | Nis'344 -> Default_reduce_act Coq__1.Prod'enum_specifier'1
     | Nis'343 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'345
         | Coq__1.RBRACE't -> Shift_act Nis'344
         | _ -> Fail_act)
     | Nis'342 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.VAR_NAME't -> Shift_act Nis'332
         | _ -> Fail_act)
     | Nis'341 -> Default_reduce_act Coq__1.Prod'enumerator_list'0
     | Nis'340 -> Default_reduce_act Coq__1.Prod'enumerator'1
     | Nis'338 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'enumerator'0
         | Coq__1.EQ't -> Shift_act Nis'339
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'enumerator'0
         | _ -> Fail_act)
     | Nis'337 -> Default_reduce_act Coq__1.Prod'enumerator_list'1
     | Nis'336 -> Default_reduce_act Coq__1.Prod'enum_specifier'2
     | Nis'335 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACE't -> Shift_act Nis'336
         | Coq__1.VAR_NAME't -> Shift_act Nis'332
         | _ -> Fail_act)
     | Nis'334 -> Default_reduce_act Coq__1.Prod'enum_specifier'0
     | Nis'333 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'335
         | Coq__1.RBRACE't -> Shift_act Nis'334
         | _ -> Fail_act)
     | Nis'332 -> Default_reduce_act Coq__1.Prod'enumeration_constant'0
     | Nis'331 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.VAR_NAME't -> Shift_act Nis'332
         | _ -> Fail_act)
     | Nis'330 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.ATTRIBUTE't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.AUTO't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.CHAR't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.CONST't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.DOUBLE't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.ENUM't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.EXTERN't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.FLOAT't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.INLINE't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.INT't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.LBRACE't -> Shift_act Nis'331
         | Coq__1.LBRACK't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.LONG't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.LPAREN't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.NORETURN't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.PACKED't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.REGISTER't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.RESTRICT't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.SHORT't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.SIGNED't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.STAR't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.STATIC't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.STRUCT't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.TYPEDEF't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.TYPEDEF_NAME't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.UNDERSCORE_BOOL't ->
           Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.UNION't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.UNSIGNED't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.VAR_NAME't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.VOID't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | Coq__1.VOLATILE't -> Reduce_act Coq__1.Prod'enum_specifier'4
         | _ -> Fail_act)
     | Nis'329 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LBRACE't -> Shift_act Nis'342
         | Coq__1.OTHER_NAME't -> Shift_act Nis'330
         | _ -> Fail_act)
     | Nis'328 -> Default_reduce_act Coq__1.Prod'gcc_attribute_list'0
     | Nis'327 -> Default_reduce_act Coq__1.Prod'gcc_attribute_list'1
     | Nis'326 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'gcc_attribute'0
         | Coq__1.CONST't -> Shift_act Nis'38
         | Coq__1.OTHER_NAME't -> Shift_act Nis'37
         | Coq__1.PACKED't -> Shift_act Nis'36
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'gcc_attribute'0
         | _ -> Fail_act)
     | Nis'325 -> Default_reduce_act Coq__1.Prod'attribute_specifier'0
     | Nis'324 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'325
         | _ -> Fail_act)
     | Nis'323 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'326
         | Coq__1.RPAREN't -> Shift_act Nis'324
         | _ -> Fail_act)
     | Nis'322 -> Default_reduce_act Coq__1.Prod'gcc_attribute'3
     | Nis'321 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'137
         | Coq__1.RPAREN't -> Shift_act Nis'322
         | _ -> Fail_act)
     | Nis'320 -> Default_reduce_act Coq__1.Prod'unary_expression'2
     | Nis'319 -> Default_reduce_act Coq__1.Prod'postfix_expression'4
     | Nis'318 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'319
         | _ -> Fail_act)
     | Nis'317 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'316 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'317
         | _ -> Fail_act)
     | Nis'315 -> Default_reduce_act Coq__1.Prod'postfix_expression'11
     | Nis'314 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.DOT't -> Shift_act Nis'278
         | Coq__1.LBRACK't -> Shift_act Nis'274
         | Coq__1.RPAREN't -> Shift_act Nis'315
         | _ -> Fail_act)
     | Nis'313 -> Default_reduce_act Coq__1.Prod'postfix_expression'12
     | Nis'312 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.DOT't -> Shift_act Nis'278
         | Coq__1.LBRACK't -> Shift_act Nis'274
         | Coq__1.RPAREN't -> Shift_act Nis'313
         | _ -> Fail_act)
     | Nis'311 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.OTHER_NAME't -> Shift_act Nis'312
         | _ -> Fail_act)
     | Nis'310 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'311
         | _ -> Fail_act)
     | Nis'309 -> Default_reduce_act Coq__1.Prod'attribute_specifier'2
     | Nis'308 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'137
         | Coq__1.RPAREN't -> Shift_act Nis'309
         | _ -> Fail_act)
     | Nis'307 -> Default_reduce_act Coq__1.Prod'attribute_specifier'3
     | Nis'306 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'307
         | _ -> Fail_act)
     | Nis'305 -> Default_reduce_act Coq__1.Prod'unary_expression'6
     | Nis'304 -> Default_reduce_act Coq__1.Prod'primary_expression'3
     | Nis'303 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RPAREN't -> Shift_act Nis'304
         | _ -> Fail_act)
     | Nis'302 -> Default_reduce_act Coq__1.Prod'type_name'1
     | Nis'301 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'abstract_declarator'0
         | Coq__1.LBRACK't -> Shift_act Nis'206
         | Coq__1.LPAREN't -> Shift_act Nis'300
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'abstract_declarator'0
         | _ -> Fail_act)
     | Nis'300 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't -> Shift_act Nis'206
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'300
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't -> Shift_act Nis'205
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'299 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'type_name'0
         | Coq__1.LBRACK't -> Shift_act Nis'206
         | Coq__1.LPAREN't -> Shift_act Nis'300
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'type_name'0
         | Coq__1.STAR't -> Shift_act Nis'160
         | _ -> Fail_act)
     | Nis'298 -> Default_reduce_act Coq__1.Prod'postfix_expression'10
     | Nis'297 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOT't -> Shift_act Nis'278
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'277
         | Coq__1.LBRACK't -> Shift_act Nis'274
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACE't -> Shift_act Nis'298
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'296 -> Default_reduce_act Coq__1.Prod'postfix_expression'9
     | Nis'295 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'297
         | Coq__1.RBRACE't -> Shift_act Nis'296
         | _ -> Fail_act)
     | Nis'294 -> Default_reduce_act Coq__1.Prod'initializer_list'1
     | Nis'293 -> Default_reduce_act Coq__1.Prod'initializer_list'0
     | Nis'292 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'277
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'291 -> Default_reduce_act Coq__1.Prod'initializer_list'3
     | Nis'290 -> Default_reduce_act Coq__1.Prod'c_initializer'0
     | Nis'289 -> Default_reduce_act Coq__1.Prod'initializer_list'2
     | Nis'288 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'277
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'287 -> Default_reduce_act Coq__1.Prod'designator_list'0
     | Nis'286 -> Default_reduce_act Coq__1.Prod'designator_list'1
     | Nis'285 -> Default_reduce_act Coq__1.Prod'designation'0
     | Nis'284 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.DOT't -> Shift_act Nis'278
         | Coq__1.EQ't -> Shift_act Nis'285
         | Coq__1.LBRACK't -> Shift_act Nis'274
         | _ -> Fail_act)
     | Nis'283 -> Default_reduce_act Coq__1.Prod'c_initializer'2
     | Nis'282 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOT't -> Shift_act Nis'278
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'277
         | Coq__1.LBRACK't -> Shift_act Nis'274
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACE't -> Shift_act Nis'283
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'281 -> Default_reduce_act Coq__1.Prod'c_initializer'1
     | Nis'280 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'282
         | Coq__1.RBRACE't -> Shift_act Nis'281
         | _ -> Fail_act)
     | Nis'279 -> Default_reduce_act Coq__1.Prod'designator'1
     | Nis'278 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.OTHER_NAME't -> Shift_act Nis'279
         | _ -> Fail_act)
     | Nis'277 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOT't -> Shift_act Nis'278
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'277
         | Coq__1.LBRACK't -> Shift_act Nis'274
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'276 -> Default_reduce_act Coq__1.Prod'designator'0
     | Nis'275 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'276
         | _ -> Fail_act)
     | Nis'273 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOT't -> Shift_act Nis'278
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LBRACE't -> Shift_act Nis'277
         | Coq__1.LBRACK't -> Shift_act Nis'274
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'272 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.AND_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.DIV_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.LBRACE't -> Shift_act Nis'273
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.LEFT_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.MINUS't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.MOD_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.MUL_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.OR_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.PERCENT't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.PLUS't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.RIGHT_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.SLASH't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.STAR't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.SUB_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | Coq__1.XOR_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'7
         | _ -> Fail_act)
     | Nis'271 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'272
         | _ -> Fail_act)
     | Nis'270 -> Default_reduce_act Coq__1.Prod'specifier_qualifier_list'0
     | Nis'269 -> Default_reduce_act Coq__1.Prod'specifier_qualifier_list'2
     | Nis'268 -> Default_reduce_act Coq__1.Prod'struct_or_union_specifier'1
     | Nis'267 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RBRACE't -> Shift_act Nis'268
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'266 -> Default_reduce_act Coq__1.Prod'struct_declaration_list'0
     | Nis'265 -> Default_reduce_act Coq__1.Prod'struct_declarator_list'0
     | Nis'264 -> Default_reduce_act Coq__1.Prod'struct_declarator'1
     | Nis'262 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'263
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'struct_declarator'0
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'struct_declarator'0
         | _ -> Fail_act)
     | Nis'261 -> Default_reduce_act Coq__1.Prod'struct_declarator_list'1
     | Nis'260 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'255
         | Coq__1.LPAREN't -> Shift_act Nis'168
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'259 -> Default_reduce_act Coq__1.Prod'struct_declaration'0
     | Nis'258 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'260
         | Coq__1.SEMICOLON't -> Shift_act Nis'259
         | _ -> Fail_act)
     | Nis'257 -> Default_reduce_act Coq__1.Prod'constant_expression'0
     | Nis'256 -> Default_reduce_act Coq__1.Prod'struct_declarator'2
     | Nis'254 -> Default_reduce_act Coq__1.Prod'identifier_list'1
     | Nis'253 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.VAR_NAME't -> Shift_act Nis'254
         | _ -> Fail_act)
     | Nis'252 -> Default_reduce_act Coq__1.Prod'direct_declarator'8
     | Nis'251 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'253
         | Coq__1.RPAREN't -> Shift_act Nis'252
         | _ -> Fail_act)
     | Nis'250 -> Default_reduce_act Coq__1.Prod'parameter_declaration'1
     | Nis'249 -> Default_reduce_act Coq__1.Prod'parameter_declaration'0
     | Nis'248 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'0
     | Nis'247 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'248
         | _ -> Fail_act)
     | Nis'246 -> Default_reduce_act Coq__1.Prod'direct_declarator'1
     | Nis'245 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'246
         | _ -> Fail_act)
     | Nis'244 -> Default_reduce_act Coq__1.Prod'attribute_specifier_list'1
     | Nis'243 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.COLON't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.LBRACE't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.OTHER_NAME't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | _ -> Fail_act)
     | Nis'242 -> Default_reduce_act Coq__1.Prod'declarator'0
     | Nis'241 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.COLON't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | _ -> Fail_act)
     | Nis'240 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'abstract_declarator'2
         | Coq__1.LBRACK't -> Shift_act Nis'221
         | Coq__1.LPAREN't -> Shift_act Nis'216
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'abstract_declarator'2
         | _ -> Fail_act)
     | Nis'239 -> Default_reduce_act Coq__1.Prod'direct_declarator'3
     | Nis'238 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'239
         | _ -> Fail_act)
     | Nis'237 -> Default_reduce_act Coq__1.Prod'direct_declarator'2
     | Nis'236 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'237
         | _ -> Fail_act)
     | Nis'235 -> Default_reduce_act Coq__1.Prod'direct_declarator'4
     | Nis'234 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACK't -> Shift_act Nis'235
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'233 -> Default_reduce_act Coq__1.Prod'direct_declarator'5
     | Nis'232 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACK't -> Shift_act Nis'233
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'231 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.ATTRIBUTE't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.AUTO't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.CHAR't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.CONST't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.DOUBLE't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.ENUM't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.EXTERN't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.FLOAT't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.INLINE't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.INT't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.LBRACE't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.LBRACK't -> Shift_act Nis'232
         | Coq__1.LONG't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.LPAREN't -> Shift_act Nis'171
         | Coq__1.NORETURN't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.PACKED't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.REGISTER't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.RESTRICT't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.SHORT't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.SIGNED't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.STATIC't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.STRUCT't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.TYPEDEF't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.TYPEDEF_NAME't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.UNDERSCORE_BOOL't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.UNION't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.UNSIGNED't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.VOID't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | Coq__1.VOLATILE't -> Reduce_act Coq__1.Prod'declarator_noattrend'0
         | _ -> Fail_act)
     | Nis'230 ->
       Default_reduce_act Coq__1.Prod'direct_abstract_declarator'10
     | Nis'229 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'230
         | _ -> Fail_act)
     | Nis'228 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'3
     | Nis'227 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'228
         | _ -> Fail_act)
     | Nis'226 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'1
     | Nis'225 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'226
         | _ -> Fail_act)
     | Nis'224 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'5
     | Nis'223 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACK't -> Shift_act Nis'224
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'222 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'7
     | Nis'221 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACK't -> Shift_act Nis'222
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'220 -> Default_reduce_act Coq__1.Prod'parameter_list'0
     | Nis'219 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'9
     | Nis'218 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'219
         | _ -> Fail_act)
     | Nis'217 ->
       Default_reduce_act Coq__1.Prod'direct_abstract_declarator'11
     | Nis'216 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't -> Shift_act Nis'217
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'215 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'abstract_declarator'1
         | Coq__1.LBRACK't -> Shift_act Nis'221
         | Coq__1.LPAREN't -> Shift_act Nis'216
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'abstract_declarator'1
         | _ -> Fail_act)
     | Nis'214 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'abstract_declarator'0
         | Coq__1.LBRACK't -> Shift_act Nis'206
         | Coq__1.LPAREN't -> Shift_act Nis'204
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'abstract_declarator'0
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'213 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'4
     | Nis'212 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'213
         | _ -> Fail_act)
     | Nis'211 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'2
     | Nis'210 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RBRACK't -> Shift_act Nis'211
         | _ -> Fail_act)
     | Nis'209 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'6
     | Nis'208 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACK't -> Shift_act Nis'209
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'207 -> Default_reduce_act Coq__1.Prod'direct_abstract_declarator'8
     | Nis'206 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RBRACK't -> Shift_act Nis'207
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'205 ->
       Default_reduce_act Coq__1.Prod'direct_abstract_declarator'12
     | Nis'204 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't -> Shift_act Nis'206
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'204
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't -> Shift_act Nis'205
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'203 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'parameter_declaration'2
         | Coq__1.LBRACK't -> Shift_act Nis'206
         | Coq__1.LPAREN't -> Shift_act Nis'204
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'parameter_declaration'2
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'202 -> Default_reduce_act Coq__1.Prod'parameter_list'1
     | Nis'201 -> Default_reduce_act Coq__1.Prod'parameter_type_list'1
     | Nis'200 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ELLIPSIS't -> Shift_act Nis'201
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'199 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'200
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'parameter_type_list'0
         | _ -> Fail_act)
     | Nis'198 -> Default_reduce_act Coq__1.Prod'direct_declarator'6
     | Nis'197 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.RPAREN't -> Shift_act Nis'198
         | _ -> Fail_act)
     | Nis'196 -> Default_reduce_act Coq__1.Prod'declaration_specifiers'2
     | Nis'195 -> Default_reduce_act Coq__1.Prod'declaration_specifiers'0
     | Nis'194 -> Default_reduce_act Coq__1.Prod'declaration_specifiers'3
     | Nis'193 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'192 -> Default_reduce_act Coq__1.Prod'declaration_specifiers'4
     | Nis'191 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'190 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'189 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'188 -> Default_reduce_act Coq__1.Prod'declaration_specifiers'1
     | Nis'187 ->
       Default_reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'1
     | Nis'186 ->
       Default_reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'2
     | Nis'185 ->
       Default_reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'0
     | Nis'184 ->
       Default_reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'3
     | Nis'183 -> Default_reduce_act Coq__1.Prod'type_specifier'11
     | Nis'182 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'181 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'180 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'179 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'178 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'declaration_specifiers_typespec_opt'4
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'177 -> Default_reduce_act Coq__1.Prod'storage_class_specifier'3
     | Nis'176 -> Default_reduce_act Coq__1.Prod'storage_class_specifier'1
     | Nis'175 -> Default_reduce_act Coq__1.Prod'function_specifier'0
     | Nis'174 -> Default_reduce_act Coq__1.Prod'function_specifier'1
     | Nis'173 -> Default_reduce_act Coq__1.Prod'direct_declarator'7
     | Nis'172 -> Default_reduce_act Coq__1.Prod'identifier_list'0
     | Nis'171 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.AUTO't -> Shift_act Nis'177
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.EXTERN't -> Shift_act Nis'176
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INLINE't -> Shift_act Nis'175
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.NORETURN't -> Shift_act Nis'174
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.REGISTER't -> Shift_act Nis'14
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't -> Shift_act Nis'173
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STATIC't -> Shift_act Nis'9
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF't -> Shift_act Nis'7
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'172
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'170 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.ATTRIBUTE't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.AUTO't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.CHAR't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.CONST't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.DOUBLE't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.ENUM't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.EXTERN't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.FLOAT't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.INLINE't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.INT't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.LBRACE't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.LBRACK't -> Shift_act Nis'232
         | Coq__1.LONG't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.LPAREN't -> Shift_act Nis'171
         | Coq__1.NORETURN't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.PACKED't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.REGISTER't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.RESTRICT't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.SHORT't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.SIGNED't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.STATIC't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.STRUCT't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.TYPEDEF't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.TYPEDEF_NAME't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.UNDERSCORE_BOOL't ->
           Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.UNION't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.UNSIGNED't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.VOID't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | Coq__1.VOLATILE't -> Reduce_act Coq__1.Prod'declarator_noattrend'1
         | _ -> Fail_act)
     | Nis'169 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'168
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'168 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'168
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'167 -> Default_reduce_act Coq__1.Prod'struct_declaration'1
     | Nis'166 -> Default_reduce_act Coq__1.Prod'pointer'2
     | Nis'165 -> Default_reduce_act Coq__1.Prod'type_qualifier_list'0
     | Nis'164 -> Default_reduce_act Coq__1.Prod'type_qualifier'1
     | Nis'163 -> Default_reduce_act Coq__1.Prod'pointer'3
     | Nis'162 -> Default_reduce_act Coq__1.Prod'type_qualifier_list'1
     | Nis'161 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'pointer'1
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.LBRACK't -> Reduce_act Coq__1.Prod'pointer'1
         | Coq__1.LPAREN't -> Reduce_act Coq__1.Prod'pointer'1
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'pointer'1
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Reduce_act Coq__1.Prod'pointer'1
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'160 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'pointer'0
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.LBRACK't -> Reduce_act Coq__1.Prod'pointer'0
         | Coq__1.LPAREN't -> Reduce_act Coq__1.Prod'pointer'0
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'pointer'0
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Reduce_act Coq__1.Prod'pointer'0
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'159 -> Default_reduce_act Coq__1.Prod'direct_declarator'0
     | Nis'158 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'255
         | Coq__1.LPAREN't -> Shift_act Nis'168
         | Coq__1.SEMICOLON't -> Shift_act Nis'167
         | Coq__1.STAR't -> Shift_act Nis'160
         | Coq__1.VAR_NAME't -> Shift_act Nis'159
         | _ -> Fail_act)
     | Nis'157 -> Default_reduce_act Coq__1.Prod'struct_declaration_list'1
     | Nis'156 -> Default_reduce_act Coq__1.Prod'struct_or_union_specifier'0
     | Nis'155 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RBRACE't -> Shift_act Nis'156
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'154 -> Default_reduce_act Coq__1.Prod'struct_declaration_list'0
     | Nis'153 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.ATTRIBUTE't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.AUTO't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.CHAR't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.COLON't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.CONST't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.DOUBLE't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.ENUM't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.EXTERN't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.FLOAT't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.INLINE't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.INT't -> Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.LBRACE't -> Shift_act Nis'154
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.LONG't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.NORETURN't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.PACKED't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.REGISTER't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.RESTRICT't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.SHORT't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.SIGNED't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.STAR't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.STATIC't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.STRUCT't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.TYPEDEF't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.TYPEDEF_NAME't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.UNDERSCORE_BOOL't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.UNION't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.UNSIGNED't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.VOID't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | Coq__1.VOLATILE't ->
           Reduce_act Coq__1.Prod'struct_or_union_specifier'2
         | _ -> Fail_act)
     | Nis'152 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LBRACE't -> Shift_act Nis'266
         | Coq__1.OTHER_NAME't -> Shift_act Nis'153
         | _ -> Fail_act)
     | Nis'151 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.LBRACE't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.OTHER_NAME't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.PACKED't -> Shift_act Nis'16
         | _ -> Fail_act)
     | Nis'150 -> Default_reduce_act Coq__1.Prod'type_specifier'10
     | Nis'149 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COLON't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't -> Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'148 -> Default_reduce_act Coq__1.Prod'type_qualifier'0
     | Nis'147 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.COLON't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.COMMA't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LBRACK't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STAR't -> Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't ->
           Reduce_act Coq__1.Prod'specifier_qualifier_list'1
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'146 -> Default_reduce_act Coq__1.Prod'unary_expression'3
     | Nis'145 -> Default_reduce_act Coq__1.Prod'postfix_expression'8
     | Nis'144 -> Default_reduce_act Coq__1.Prod'postfix_expression'5
     | Nis'143 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.OTHER_NAME't -> Shift_act Nis'144
         | _ -> Fail_act)
     | Nis'142 -> Default_reduce_act Coq__1.Prod'postfix_expression'7
     | Nis'141 -> Default_reduce_act Coq__1.Prod'postfix_expression'1
     | Nis'140 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'125
         | Coq__1.RBRACK't -> Shift_act Nis'141
         | _ -> Fail_act)
     | Nis'138 -> Default_reduce_act Coq__1.Prod'argument_expression_list'1
     | Nis'136 -> Default_reduce_act Coq__1.Prod'postfix_expression'2
     | Nis'135 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Shift_act Nis'137
         | Coq__1.RPAREN't -> Shift_act Nis'136
         | _ -> Fail_act)
     | Nis'134 -> Default_reduce_act Coq__1.Prod'argument_expression_list'0
     | Nis'133 -> Default_reduce_act Coq__1.Prod'assignment_expression'1
     | Nis'132 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ANDAND't -> Shift_act Nis'108
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'logical_OR_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'logical_OR_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'logical_OR_expression'1
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'logical_OR_expression'1
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'logical_OR_expression'1
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'logical_OR_expression'1
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'logical_OR_expression'1
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'logical_OR_expression'1
         | _ -> Fail_act)
     | Nis'130 -> Default_reduce_act Coq__1.Prod'expression'0
     | Nis'129 -> Default_reduce_act Coq__1.Prod'conditional_expression'1
     | Nis'127 -> Default_reduce_act Coq__1.Prod'expression'1
     | Nis'126 -> Default_reduce_act Coq__1.Prod'assignment_expression'0
     | Nis'124 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COLON't -> Shift_act Nis'128
         | Coq__1.COMMA't -> Shift_act Nis'125
         | _ -> Fail_act)
     | Nis'123 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.BAR't -> Shift_act Nis'110
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'logical_AND_expression'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'logical_AND_expression'0
         | _ -> Fail_act)
     | Nis'122 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ANDAND't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.BARBAR't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.HAT't -> Shift_act Nis'112
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.RBRACE't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.RBRACK't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'0
         | _ -> Fail_act)
     | Nis'121 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Shift_act Nis'119
         | Coq__1.ANDAND't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.BARBAR't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.RBRACE't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.RBRACK't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'0
         | _ -> Fail_act)
     | Nis'120 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.EQEQ't -> Shift_act Nis'116
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.NEQ't -> Shift_act Nis'114
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'AND_expression'1
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'AND_expression'1
         | _ -> Fail_act)
     | Nis'118 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Shift_act Nis'119
         | Coq__1.ANDAND't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.BARBAR't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.RBRACE't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.RBRACK't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'exclusive_OR_expression'1
         | _ -> Fail_act)
     | Nis'117 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.GEQ't -> Shift_act Nis'103
         | Coq__1.GT't -> Shift_act Nis'101
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.LEQ't -> Shift_act Nis'99
         | Coq__1.LT't -> Shift_act Nis'96
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'equality_expression'1
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'equality_expression'1
         | _ -> Fail_act)
     | Nis'115 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.GEQ't -> Shift_act Nis'103
         | Coq__1.GT't -> Shift_act Nis'101
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.LEQ't -> Shift_act Nis'99
         | Coq__1.LT't -> Shift_act Nis'96
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'equality_expression'2
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'equality_expression'2
         | _ -> Fail_act)
     | Nis'113 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.EQEQ't -> Shift_act Nis'116
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.NEQ't -> Shift_act Nis'114
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'AND_expression'0
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'AND_expression'0
         | _ -> Fail_act)
     | Nis'111 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ANDAND't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.BARBAR't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.HAT't -> Shift_act Nis'112
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.RBRACE't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.RBRACK't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.RPAREN't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'inclusive_OR_expression'1
         | _ -> Fail_act)
     | Nis'109 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.BAR't -> Shift_act Nis'110
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'logical_AND_expression'1
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'logical_AND_expression'1
         | _ -> Fail_act)
     | Nis'107 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ANDAND't -> Shift_act Nis'108
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'logical_OR_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'logical_OR_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'logical_OR_expression'0
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'logical_OR_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'logical_OR_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'logical_OR_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'logical_OR_expression'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'logical_OR_expression'0
         | _ -> Fail_act)
     | Nis'105 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.BARBAR't -> Shift_act Nis'131
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'conditional_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'conditional_expression'0
         | Coq__1.QUESTION't -> Shift_act Nis'106
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'conditional_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'conditional_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'conditional_expression'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'conditional_expression'0
         | _ -> Fail_act)
     | Nis'104 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.LEFT't -> Shift_act Nis'93
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.RIGHT't -> Shift_act Nis'79
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'relational_expression'4
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'relational_expression'4
         | _ -> Fail_act)
     | Nis'102 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.LEFT't -> Shift_act Nis'93
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.RIGHT't -> Shift_act Nis'79
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'relational_expression'2
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'relational_expression'2
         | _ -> Fail_act)
     | Nis'100 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.LEFT't -> Shift_act Nis'93
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.RIGHT't -> Shift_act Nis'79
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'relational_expression'3
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'relational_expression'3
         | _ -> Fail_act)
     | Nis'98 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.MINUS't -> Shift_act Nis'91
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.PLUS't -> Shift_act Nis'89
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'shift_expression'0
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'shift_expression'0
         | _ -> Fail_act)
     | Nis'97 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.LEFT't -> Shift_act Nis'93
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.RIGHT't -> Shift_act Nis'79
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'relational_expression'1
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'relational_expression'1
         | _ -> Fail_act)
     | Nis'95 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.GEQ't -> Shift_act Nis'103
         | Coq__1.GT't -> Shift_act Nis'101
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.LEQ't -> Shift_act Nis'99
         | Coq__1.LT't -> Shift_act Nis'96
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'equality_expression'0
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'equality_expression'0
         | _ -> Fail_act)
     | Nis'94 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.MINUS't -> Shift_act Nis'91
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.PLUS't -> Shift_act Nis'89
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'shift_expression'1
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'shift_expression'1
         | _ -> Fail_act)
     | Nis'92 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.MINUS't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.PERCENT't -> Shift_act Nis'85
         | Coq__1.PLUS't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'additive_expression'2
         | Coq__1.SLASH't -> Shift_act Nis'83
         | Coq__1.STAR't -> Shift_act Nis'81
         | _ -> Fail_act)
     | Nis'90 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.MINUS't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.PERCENT't -> Shift_act Nis'85
         | Coq__1.PLUS't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'additive_expression'1
         | Coq__1.SLASH't -> Shift_act Nis'83
         | Coq__1.STAR't -> Shift_act Nis'81
         | _ -> Fail_act)
     | Nis'88 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.MINUS't -> Shift_act Nis'91
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.PLUS't -> Shift_act Nis'89
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'shift_expression'2
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'shift_expression'2
         | _ -> Fail_act)
     | Nis'87 -> Default_reduce_act Coq__1.Prod'multiplicative_expression'0
     | Nis'86 -> Default_reduce_act Coq__1.Prod'multiplicative_expression'3
     | Nis'84 -> Default_reduce_act Coq__1.Prod'multiplicative_expression'2
     | Nis'82 -> Default_reduce_act Coq__1.Prod'multiplicative_expression'1
     | Nis'80 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.MINUS't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.PERCENT't -> Shift_act Nis'85
         | Coq__1.PLUS't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'additive_expression'0
         | Coq__1.SLASH't -> Shift_act Nis'83
         | Coq__1.STAR't -> Shift_act Nis'81
         | _ -> Fail_act)
     | Nis'78 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.LEFT't -> Shift_act Nis'93
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.QUESTION't ->
           Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.RIGHT't -> Shift_act Nis'79
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'relational_expression'0
         | Coq__1.SEMICOLON't ->
           Reduce_act Coq__1.Prod'relational_expression'0
         | _ -> Fail_act)
     | Nis'76 -> Default_reduce_act Coq__1.Prod'assignment_operator'4
     | Nis'75 -> Default_reduce_act Coq__1.Prod'assignment_operator'10
     | Nis'74 -> Default_reduce_act Coq__1.Prod'assignment_operator'2
     | Nis'73 -> Default_reduce_act Coq__1.Prod'assignment_operator'0
     | Nis'72 -> Default_reduce_act Coq__1.Prod'assignment_operator'6
     | Nis'71 -> Default_reduce_act Coq__1.Prod'assignment_operator'3
     | Nis'70 -> Default_reduce_act Coq__1.Prod'assignment_operator'1
     | Nis'69 -> Default_reduce_act Coq__1.Prod'assignment_operator'9
     | Nis'68 -> Default_reduce_act Coq__1.Prod'assignment_operator'7
     | Nis'67 -> Default_reduce_act Coq__1.Prod'assignment_operator'5
     | Nis'66 -> Default_reduce_act Coq__1.Prod'assignment_operator'8
     | Nis'65 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Shift_act Nis'76
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.AND_ASSIGN't -> Shift_act Nis'75
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.DIV_ASSIGN't -> Shift_act Nis'74
         | Coq__1.EQ't -> Shift_act Nis'73
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.LEFT_ASSIGN't -> Shift_act Nis'72
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.MINUS't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.MOD_ASSIGN't -> Shift_act Nis'71
         | Coq__1.MUL_ASSIGN't -> Shift_act Nis'70
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.OR_ASSIGN't -> Shift_act Nis'69
         | Coq__1.PERCENT't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.PLUS't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.RIGHT_ASSIGN't -> Shift_act Nis'68
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.SLASH't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.STAR't -> Reduce_act Coq__1.Prod'cast_expression'0
         | Coq__1.SUB_ASSIGN't -> Shift_act Nis'67
         | Coq__1.XOR_ASSIGN't -> Shift_act Nis'66
         | _ -> Fail_act)
     | Nis'64 -> Default_reduce_act Coq__1.Prod'postfix_expression'3
     | Nis'63 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'64
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'62 -> Default_reduce_act Coq__1.Prod'postfix_expression'6
     | Nis'61 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.OTHER_NAME't -> Shift_act Nis'62
         | _ -> Fail_act)
     | Nis'60 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ADD_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.AND't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.ANDAND't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.AND_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.BAR't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.BARBAR't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.COLON't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.DEC't -> Shift_act Nis'145
         | Coq__1.DIV_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.DOT't -> Shift_act Nis'143
         | Coq__1.EQ't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.EQEQ't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.GEQ't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.GT't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.HAT't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.INC't -> Shift_act Nis'142
         | Coq__1.LBRACK't -> Shift_act Nis'139
         | Coq__1.LEFT't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.LEFT_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.LEQ't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.LPAREN't -> Shift_act Nis'63
         | Coq__1.LT't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.MINUS't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.MOD_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.MUL_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.NEQ't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.OR_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.PERCENT't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.PLUS't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.PTR't -> Shift_act Nis'61
         | Coq__1.QUESTION't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.RBRACE't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.RBRACK't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.RIGHT't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.RIGHT_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.SEMICOLON't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.SLASH't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.STAR't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.SUB_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | Coq__1.XOR_ASSIGN't -> Reduce_act Coq__1.Prod'unary_expression'0
         | _ -> Fail_act)
     | Nis'59 -> Default_reduce_act Coq__1.Prod'postfix_expression'0
     | Nis'58 -> Default_reduce_act Coq__1.Prod'cast_expression'0
     | Nis'56 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'55 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'56
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'54 -> Default_reduce_act Coq__1.Prod'unary_operator'0
     | Nis'53 -> Default_reduce_act Coq__1.Prod'unary_operator'5
     | Nis'52 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'51 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'52
         | _ -> Fail_act)
     | Nis'50 -> Default_reduce_act Coq__1.Prod'type_specifier'1
     | Nis'49 -> Default_reduce_act Coq__1.Prod'type_qualifier_noattr'0
     | Nis'48 -> Default_reduce_act Coq__1.Prod'type_specifier'6
     | Nis'47 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'46 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'47
         | _ -> Fail_act)
     | Nis'44 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'45
         | _ -> Fail_act)
     | Nis'43 -> Default_reduce_act Coq__1.Prod'primary_expression'1
     | Nis'42 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'30
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'41 -> Default_reduce_act Coq__1.Prod'gcc_attribute'2
     | Nis'40 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RPAREN't -> Shift_act Nis'41
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'39 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'gcc_attribute'1
         | Coq__1.LPAREN't -> Shift_act Nis'40
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'gcc_attribute'1
         | _ -> Fail_act)
     | Nis'38 -> Default_reduce_act Coq__1.Prod'gcc_attribute_word'1
     | Nis'37 -> Default_reduce_act Coq__1.Prod'gcc_attribute_word'0
     | Nis'36 -> Default_reduce_act Coq__1.Prod'gcc_attribute_word'2
     | Nis'35 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.COMMA't -> Reduce_act Coq__1.Prod'gcc_attribute'0
         | Coq__1.CONST't -> Shift_act Nis'38
         | Coq__1.OTHER_NAME't -> Shift_act Nis'37
         | Coq__1.PACKED't -> Shift_act Nis'36
         | Coq__1.RPAREN't -> Reduce_act Coq__1.Prod'gcc_attribute'0
         | _ -> Fail_act)
     | Nis'34 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'35
         | _ -> Fail_act)
     | Nis'33 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'34
         | _ -> Fail_act)
     | Nis'32 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.LBRACE't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.OTHER_NAME't ->
           Reduce_act Coq__1.Prod'attribute_specifier_list'0
         | Coq__1.PACKED't -> Shift_act Nis'16
         | _ -> Fail_act)
     | Nis'31 -> Default_reduce_act Coq__1.Prod'type_specifier'5
     | Nis'30 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'29 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'30
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'28 -> Default_reduce_act Coq__1.Prod'type_specifier'3
     | Nis'27 -> Default_reduce_act Coq__1.Prod'type_specifier'4
     | Nis'26 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'25 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNAS't -> Shift_act Nis'51
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.ATTRIBUTE't -> Shift_act Nis'33
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CHAR't -> Shift_act Nis'50
         | Coq__1.CONST't -> Shift_act Nis'49
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.DOUBLE't -> Shift_act Nis'48
         | Coq__1.ENUM't -> Shift_act Nis'32
         | Coq__1.FLOAT't -> Shift_act Nis'31
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.INT't -> Shift_act Nis'28
         | Coq__1.LONG't -> Shift_act Nis'27
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PACKED't -> Shift_act Nis'16
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.RESTRICT't -> Shift_act Nis'13
         | Coq__1.SHORT't -> Shift_act Nis'11
         | Coq__1.SIGNED't -> Shift_act Nis'10
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.STRUCT't -> Shift_act Nis'8
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.TYPEDEF_NAME't -> Shift_act Nis'6
         | Coq__1.UNDERSCORE_BOOL't -> Shift_act Nis'5
         | Coq__1.UNION't -> Shift_act Nis'4
         | Coq__1.UNSIGNED't -> Shift_act Nis'3
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | Coq__1.VOID't -> Shift_act Nis'2
         | Coq__1.VOLATILE't -> Shift_act Nis'1
         | _ -> Fail_act)
     | Nis'24 -> Default_reduce_act Coq__1.Prod'unary_operator'3
     | Nis'23 -> Default_reduce_act Coq__1.Prod'unary_operator'2
     | Nis'22 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'25
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act)
     | Nis'21 -> Default_reduce_act Coq__1.Prod'unary_operator'1
     | Nis'20 -> Default_reduce_act Coq__1.Prod'primary_expression'2
     | Nis'19 -> Default_reduce_act Coq__1.Prod'unary_operator'4
     | Nis'18 -> Default_reduce_act Coq__1.Prod'primary_expression'0
     | Nis'16 ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.LPAREN't -> Shift_act Nis'17
         | _ -> Fail_act)
     | Nis'15 -> Default_reduce_act Coq__1.Prod'external_declaration'2
     | Nis'14 -> Default_reduce_act Coq__1.Prod'storage_class_specifier'4
     | Nis'13 -> Default_reduce_act Coq__1.Prod'type_qualifier_noattr'1
     | Nis'12 -> Default_reduce_act Coq__1.Prod'translation_unit'3
     | Nis'11 -> Default_reduce_act Coq__1.Prod'type_specifier'2
     | Nis'10 -> Default_reduce_act Coq__1.Prod'type_specifier'7
     | Nis'9 -> Default_reduce_act Coq__1.Prod'storage_class_specifier'2
     | Nis'8 -> Default_reduce_act Coq__1.Prod'struct_or_union'0
     | Nis'7 -> Default_reduce_act Coq__1.Prod'storage_class_specifier'0
     | Nis'6 -> Default_reduce_act Coq__1.Prod'type_specifier'12
     | Nis'5 -> Default_reduce_act Coq__1.Prod'type_specifier'9
     | Nis'4 -> Default_reduce_act Coq__1.Prod'struct_or_union'1
     | Nis'3 -> Default_reduce_act Coq__1.Prod'type_specifier'8
     | Nis'2 -> Default_reduce_act Coq__1.Prod'type_specifier'0
     | Nis'1 -> Default_reduce_act Coq__1.Prod'type_qualifier_noattr'2
     | _ ->
       Lookahead_act (fun terminal0 ->
         match terminal0 with
         | Coq__1.ALIGNOF't -> Shift_act Nis'55
         | Coq__1.AND't -> Shift_act Nis'54
         | Coq__1.BANG't -> Shift_act Nis'53
         | Coq__1.BUILTIN_OFFSETOF't -> Shift_act Nis'46
         | Coq__1.BUILTIN_VA_ARG't -> Shift_act Nis'44
         | Coq__1.CONSTANT't -> Shift_act Nis'43
         | Coq__1.DEC't -> Shift_act Nis'42
         | Coq__1.INC't -> Shift_act Nis'29
         | Coq__1.LPAREN't -> Shift_act Nis'26
         | Coq__1.MINUS't -> Shift_act Nis'24
         | Coq__1.PLUS't -> Shift_act Nis'23
         | Coq__1.SIZEOF't -> Shift_act Nis'22
         | Coq__1.STAR't -> Shift_act Nis'21
         | Coq__1.STRING_LITERAL't -> Shift_act Nis'20
         | Coq__1.TILDE't -> Shift_act Nis'19
         | Coq__1.VAR_NAME't -> Shift_act Nis'18
         | _ -> Fail_act))

  (** val goto_table : state -> Coq__1.nonterminal -> noninitstate option **)

  let goto_table state0 nt =
    match state0 with
    | Init _ ->
      (match nt with
       | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
       | Coq__1.Coq_declaration'nt -> Some Nis'612
       | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'365
       | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
       | Coq__1.Coq_external_declaration'nt -> Some Nis'613
       | Coq__1.Coq_function_definition'nt -> Some Nis'363
       | Coq__1.Coq_function_specifier'nt -> Some Nis'191
       | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
       | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
       | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
       | Coq__1.Coq_translation_unit'nt -> Some Nis'360
       | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
       | Coq__1.Coq_type_specifier'nt -> Some Nis'178
       | _ -> None)
    | Ninit n ->
      (match n with
       | Nis'610 ->
         (match nt with
          | Coq__1.Coq_compound_statement'nt -> Some Nis'611
          | _ -> None)
       | Nis'609 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'609
          | Coq__1.Coq_attribute_specifier_list'nt -> Some Nis'244
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'194
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'602 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_block_item'nt -> Some Nis'604
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_declaration'nt -> Some Nis'601
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'376
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'600
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'597 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'588
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'586 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'588
          | Coq__1.Coq_statement_safe'nt -> Some Nis'587
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'583 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'524
          | Coq__1.Coq_statement_safe'nt -> Some Nis'584
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'580 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'521
          | Coq__1.Coq_statement_safe'nt -> Some Nis'581
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'579 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'582
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'576 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'517
          | Coq__1.Coq_statement_safe'nt -> Some Nis'577
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'573 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'514
          | Coq__1.Coq_statement_safe'nt -> Some Nis'574
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'572 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'575
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'571 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'578
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'569 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'510
          | Coq__1.Coq_statement_safe'nt -> Some Nis'570
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'566 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'507
          | Coq__1.Coq_statement_safe'nt -> Some Nis'567
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'565 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'568
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'562 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'503
          | Coq__1.Coq_statement_safe'nt -> Some Nis'563
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'559 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'500
          | Coq__1.Coq_statement_safe'nt -> Some Nis'560
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'558 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'561
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'557 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'564
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'554 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'495
          | Coq__1.Coq_statement_safe'nt -> Some Nis'555
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'551 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'492
          | Coq__1.Coq_statement_safe'nt -> Some Nis'552
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'550 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'553
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'547 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'488
          | Coq__1.Coq_statement_safe'nt -> Some Nis'548
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'535 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'468
          | Coq__1.Coq_statement_safe'nt -> Some Nis'536
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'533 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'257
          | Coq__1.Coq_constant_expression'nt -> Some Nis'534
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'532 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'478
          | Coq__1.Coq_statement_safe'nt -> Some Nis'544
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'527 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'528
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'523 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'524
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'520 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'521
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'519 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'522
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'516 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'517
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'513 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'514
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'512 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'515
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'511 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'518
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'509 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'510
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'506 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'507
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'505 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'508
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'502 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'503
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'499 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'500
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'498 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'501
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'497 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'504
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'494 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'495
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'491 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'492
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'490 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'493
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'487 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'488
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'481 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'482
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'461 ->
         (match nt with
          | Coq__1.Coq_asm_flags'nt -> Some Nis'462
          | _ -> None)
       | Nis'459 ->
         (match nt with
          | Coq__1.Coq_asm_flags'nt -> Some Nis'463
          | _ -> None)
       | Nis'457 ->
         (match nt with
          | Coq__1.Coq_asm_op_name'nt -> Some Nis'451
          | Coq__1.Coq_asm_operand'nt -> Some Nis'464
          | Coq__1.Coq_asm_operands'nt -> Some Nis'458
          | Coq__1.Coq_asm_operands_ne'nt -> Some Nis'448
          | _ -> None)
       | Nis'453 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'454
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'449 ->
         (match nt with
          | Coq__1.Coq_asm_op_name'nt -> Some Nis'451
          | Coq__1.Coq_asm_operand'nt -> Some Nis'450
          | _ -> None)
       | Nis'444 ->
         (match nt with
          | Coq__1.Coq_asm_op_name'nt -> Some Nis'451
          | Coq__1.Coq_asm_operand'nt -> Some Nis'464
          | Coq__1.Coq_asm_operands'nt -> Some Nis'456
          | Coq__1.Coq_asm_operands_ne'nt -> Some Nis'448
          | _ -> None)
       | Nis'443 ->
         (match nt with
          | Coq__1.Coq_asm_arguments'nt -> Some Nis'465
          | _ -> None)
       | Nis'438 ->
         (match nt with
          | Coq__1.Coq_asm_attributes'nt -> Some Nis'439
          | _ -> None)
       | Nis'437 ->
         (match nt with
          | Coq__1.Coq_asm_attributes'nt -> Some Nis'440
          | _ -> None)
       | Nis'436 ->
         (match nt with
          | Coq__1.Coq_asm_attributes'nt -> Some Nis'441
          | _ -> None)
       | Nis'433 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'468
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'431 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'257
          | Coq__1.Coq_constant_expression'nt -> Some Nis'432
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'428 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'478
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'426 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'479
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'425 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'485
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'424 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'486
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'423 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'489
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'422 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_declaration'nt -> Some Nis'511
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'376
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'496
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'420 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'525
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'419 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'485
          | Coq__1.Coq_statement_safe'nt -> Some Nis'545
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'418 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'546
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'417 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'549
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'416 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_declaration'nt -> Some Nis'571
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'376
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'556
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'411 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'589
          | Coq__1.Coq_statement_safe'nt -> Some Nis'585
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'409 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'410
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'407 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'591
          | Coq__1.Coq_statement_safe'nt -> Some Nis'590
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'405 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'593
          | Coq__1.Coq_statement_safe'nt -> Some Nis'592
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'403 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'404
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'401 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'595
          | Coq__1.Coq_statement_safe'nt -> Some Nis'594
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'399 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'400
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'397 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'543
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'542
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'541
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_iteration_statement_statement_safe_'nt -> Some Nis'540
          | Coq__1.Coq_jump_statement'nt -> Some Nis'539
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_labeled_statement_statement_safe_'nt -> Some Nis'538
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_selection_statement_safe'nt -> Some Nis'537
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'589
          | Coq__1.Coq_statement_safe'nt -> Some Nis'596
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'395 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'396
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'393 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'591
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'388 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'390
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'386 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'593
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'384 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'385
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'382 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'595
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'380 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'381
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'378 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_asm_statement'nt -> Some Nis'477
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_block_item'nt -> Some Nis'605
          | Coq__1.Coq_block_item_list'nt -> Some Nis'602
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_compound_statement'nt -> Some Nis'476
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_declaration'nt -> Some Nis'601
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'376
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'474
          | Coq__1.Coq_expression_statement'nt -> Some Nis'473
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_iteration_statement_statement_dangerous_'nt ->
            Some Nis'472
          | Coq__1.Coq_jump_statement'nt -> Some Nis'471
          | Coq__1.Coq_labeled_statement_statement_dangerous_'nt ->
            Some Nis'470
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_selection_statement_dangerous'nt -> Some Nis'469
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_statement_dangerous'nt -> Some Nis'600
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'377 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_compound_statement'nt -> Some Nis'607
          | Coq__1.Coq_declaration'nt -> Some Nis'606
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'376
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'376 ->
         (match nt with
          | Coq__1.Coq_declarator'nt -> Some Nis'371
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'241
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_init_declarator'nt -> Some Nis'374
          | Coq__1.Coq_init_declarator_list'nt -> Some Nis'367
          | Coq__1.Coq_pointer'nt -> Some Nis'169
          | _ -> None)
       | Nis'375 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'609
          | Coq__1.Coq_attribute_specifier_list'nt -> Some Nis'242
          | Coq__1.Coq_declaration'nt -> Some Nis'608
          | Coq__1.Coq_declaration_list'nt -> Some Nis'377
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'376
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'372 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'290
          | Coq__1.Coq_c_initializer'nt -> Some Nis'373
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'369 ->
         (match nt with
          | Coq__1.Coq_declarator'nt -> Some Nis'371
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'241
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_init_declarator'nt -> Some Nis'370
          | Coq__1.Coq_pointer'nt -> Some Nis'169
          | _ -> None)
       | Nis'365 ->
         (match nt with
          | Coq__1.Coq_declarator'nt -> Some Nis'610
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'375
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_init_declarator'nt -> Some Nis'374
          | Coq__1.Coq_init_declarator_list'nt -> Some Nis'367
          | Coq__1.Coq_pointer'nt -> Some Nis'169
          | _ -> None)
       | Nis'360 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration'nt -> Some Nis'612
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'365
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_external_declaration'nt -> Some Nis'364
          | Coq__1.Coq_function_definition'nt -> Some Nis'363
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'351 ->
         (match nt with
          | Coq__1.Coq_cast_expression'nt -> Some Nis'352
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'345 ->
         (match nt with
          | Coq__1.Coq_enumeration_constant'nt -> Some Nis'338
          | Coq__1.Coq_enumerator'nt -> Some Nis'337
          | _ -> None)
       | Nis'342 ->
         (match nt with
          | Coq__1.Coq_enumeration_constant'nt -> Some Nis'338
          | Coq__1.Coq_enumerator'nt -> Some Nis'341
          | Coq__1.Coq_enumerator_list'nt -> Some Nis'343
          | _ -> None)
       | Nis'339 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'257
          | Coq__1.Coq_constant_expression'nt -> Some Nis'340
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'335 ->
         (match nt with
          | Coq__1.Coq_enumeration_constant'nt -> Some Nis'338
          | Coq__1.Coq_enumerator'nt -> Some Nis'337
          | _ -> None)
       | Nis'331 ->
         (match nt with
          | Coq__1.Coq_enumeration_constant'nt -> Some Nis'338
          | Coq__1.Coq_enumerator'nt -> Some Nis'341
          | Coq__1.Coq_enumerator_list'nt -> Some Nis'333
          | _ -> None)
       | Nis'326 ->
         (match nt with
          | Coq__1.Coq_gcc_attribute'nt -> Some Nis'327
          | Coq__1.Coq_gcc_attribute_word'nt -> Some Nis'39
          | _ -> None)
       | Nis'317 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'299
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_name'nt -> Some Nis'318
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | _ -> None)
       | Nis'314 ->
         (match nt with
          | Coq__1.Coq_designator'nt -> Some Nis'286
          | _ -> None)
       | Nis'312 ->
         (match nt with
          | Coq__1.Coq_designator'nt -> Some Nis'287
          | Coq__1.Coq_designator_list'nt -> Some Nis'314
          | _ -> None)
       | Nis'301 ->
         (match nt with
          | Coq__1.Coq_direct_abstract_declarator'nt -> Some Nis'215
          | _ -> None)
       | Nis'300 ->
         (match nt with
          | Coq__1.Coq_abstract_declarator'nt -> Some Nis'247
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'203
          | Coq__1.Coq_direct_abstract_declarator'nt -> Some Nis'240
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_parameter_declaration'nt -> Some Nis'220
          | Coq__1.Coq_parameter_list'nt -> Some Nis'199
          | Coq__1.Coq_parameter_type_list'nt -> Some Nis'229
          | Coq__1.Coq_pointer'nt -> Some Nis'301
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'299 ->
         (match nt with
          | Coq__1.Coq_abstract_declarator'nt -> Some Nis'302
          | Coq__1.Coq_direct_abstract_declarator'nt -> Some Nis'240
          | Coq__1.Coq_pointer'nt -> Some Nis'301
          | _ -> None)
       | Nis'297 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'290
          | Coq__1.Coq_c_initializer'nt -> Some Nis'291
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_designation'nt -> Some Nis'288
          | Coq__1.Coq_designator'nt -> Some Nis'287
          | Coq__1.Coq_designator_list'nt -> Some Nis'284
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'292 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'290
          | Coq__1.Coq_c_initializer'nt -> Some Nis'293
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'288 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'290
          | Coq__1.Coq_c_initializer'nt -> Some Nis'289
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'284 ->
         (match nt with
          | Coq__1.Coq_designator'nt -> Some Nis'286
          | _ -> None)
       | Nis'282 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'290
          | Coq__1.Coq_c_initializer'nt -> Some Nis'291
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_designation'nt -> Some Nis'288
          | Coq__1.Coq_designator'nt -> Some Nis'287
          | Coq__1.Coq_designator_list'nt -> Some Nis'284
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'277 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'290
          | Coq__1.Coq_c_initializer'nt -> Some Nis'294
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_designation'nt -> Some Nis'292
          | Coq__1.Coq_designator'nt -> Some Nis'287
          | Coq__1.Coq_designator_list'nt -> Some Nis'284
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_initializer_list'nt -> Some Nis'280
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'274 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'257
          | Coq__1.Coq_constant_expression'nt -> Some Nis'275
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'273 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'290
          | Coq__1.Coq_c_initializer'nt -> Some Nis'294
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_designation'nt -> Some Nis'292
          | Coq__1.Coq_designator'nt -> Some Nis'287
          | Coq__1.Coq_designator_list'nt -> Some Nis'284
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_initializer_list'nt -> Some Nis'295
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'267 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'158
          | Coq__1.Coq_struct_declaration'nt -> Some Nis'157
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | _ -> None)
       | Nis'266 ->
         (match nt with
          | Coq__1.Coq_struct_declaration_list'nt -> Some Nis'267
          | _ -> None)
       | Nis'263 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'257
          | Coq__1.Coq_constant_expression'nt -> Some Nis'264
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'260 ->
         (match nt with
          | Coq__1.Coq_declarator'nt -> Some Nis'262
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'241
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_pointer'nt -> Some Nis'169
          | Coq__1.Coq_struct_declarator'nt -> Some Nis'261
          | _ -> None)
       | Nis'255 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'257
          | Coq__1.Coq_constant_expression'nt -> Some Nis'256
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'243 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'243
          | Coq__1.Coq_attribute_specifier_list'nt -> Some Nis'244
          | _ -> None)
       | Nis'241 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'243
          | Coq__1.Coq_attribute_specifier_list'nt -> Some Nis'242
          | _ -> None)
       | Nis'234 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'236
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'162
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'232 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'238
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'165
          | Coq__1.Coq_type_qualifier_list'nt -> Some Nis'234
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'223 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'225
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'162
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'221 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'227
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'165
          | Coq__1.Coq_type_qualifier_list'nt -> Some Nis'223
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'216 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'203
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_parameter_declaration'nt -> Some Nis'220
          | Coq__1.Coq_parameter_list'nt -> Some Nis'199
          | Coq__1.Coq_parameter_type_list'nt -> Some Nis'218
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'214 ->
         (match nt with
          | Coq__1.Coq_direct_abstract_declarator'nt -> Some Nis'215
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'170
          | _ -> None)
       | Nis'208 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'210
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'162
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'206 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'212
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'165
          | Coq__1.Coq_type_qualifier_list'nt -> Some Nis'208
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'204 ->
         (match nt with
          | Coq__1.Coq_abstract_declarator'nt -> Some Nis'247
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'203
          | Coq__1.Coq_declarator'nt -> Some Nis'245
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'241
          | Coq__1.Coq_direct_abstract_declarator'nt -> Some Nis'240
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_parameter_declaration'nt -> Some Nis'220
          | Coq__1.Coq_parameter_list'nt -> Some Nis'199
          | Coq__1.Coq_parameter_type_list'nt -> Some Nis'229
          | Coq__1.Coq_pointer'nt -> Some Nis'214
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'203 ->
         (match nt with
          | Coq__1.Coq_abstract_declarator'nt -> Some Nis'250
          | Coq__1.Coq_declarator'nt -> Some Nis'249
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'241
          | Coq__1.Coq_direct_abstract_declarator'nt -> Some Nis'240
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_pointer'nt -> Some Nis'214
          | _ -> None)
       | Nis'200 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'203
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_parameter_declaration'nt -> Some Nis'202
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'193 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'194
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'191 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'192
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'190 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'195
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'189 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'196
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'182 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_declaration_specifiers_typespec_opt'nt -> Some Nis'184
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'182
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'181
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'180
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'179
          | _ -> None)
       | Nis'181 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_declaration_specifiers_typespec_opt'nt -> Some Nis'185
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'182
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'181
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'180
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'179
          | _ -> None)
       | Nis'180 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_declaration_specifiers_typespec_opt'nt -> Some Nis'186
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'182
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'181
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'180
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'179
          | _ -> None)
       | Nis'179 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_declaration_specifiers_typespec_opt'nt -> Some Nis'187
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'182
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'181
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'180
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'179
          | _ -> None)
       | Nis'178 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_declaration_specifiers_typespec_opt'nt -> Some Nis'188
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'182
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'181
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'180
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'179
          | _ -> None)
       | Nis'171 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'193
          | Coq__1.Coq_declaration_specifiers'nt -> Some Nis'203
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_function_specifier'nt -> Some Nis'191
          | Coq__1.Coq_identifier_list'nt -> Some Nis'251
          | Coq__1.Coq_parameter_declaration'nt -> Some Nis'220
          | Coq__1.Coq_parameter_list'nt -> Some Nis'199
          | Coq__1.Coq_parameter_type_list'nt -> Some Nis'197
          | Coq__1.Coq_storage_class_specifier'nt -> Some Nis'190
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'189
          | Coq__1.Coq_type_specifier'nt -> Some Nis'178
          | _ -> None)
       | Nis'169 ->
         (match nt with
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'170
          | _ -> None)
       | Nis'168 ->
         (match nt with
          | Coq__1.Coq_declarator'nt -> Some Nis'245
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'241
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_pointer'nt -> Some Nis'169
          | _ -> None)
       | Nis'161 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_pointer'nt -> Some Nis'163
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'162
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | _ -> None)
       | Nis'160 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_pointer'nt -> Some Nis'166
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'165
          | Coq__1.Coq_type_qualifier_list'nt -> Some Nis'161
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | _ -> None)
       | Nis'158 ->
         (match nt with
          | Coq__1.Coq_declarator'nt -> Some Nis'262
          | Coq__1.Coq_declarator_noattrend'nt -> Some Nis'241
          | Coq__1.Coq_direct_declarator'nt -> Some Nis'231
          | Coq__1.Coq_pointer'nt -> Some Nis'169
          | Coq__1.Coq_struct_declarator'nt -> Some Nis'265
          | Coq__1.Coq_struct_declarator_list'nt -> Some Nis'258
          | _ -> None)
       | Nis'155 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'158
          | Coq__1.Coq_struct_declaration'nt -> Some Nis'157
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | _ -> None)
       | Nis'154 ->
         (match nt with
          | Coq__1.Coq_struct_declaration_list'nt -> Some Nis'155
          | _ -> None)
       | Nis'151 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'243
          | Coq__1.Coq_attribute_specifier_list'nt -> Some Nis'152
          | _ -> None)
       | Nis'149 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'269
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | _ -> None)
       | Nis'147 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'270
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | _ -> None)
       | Nis'139 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'140
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'137 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'138
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'131 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'132
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'128 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'129
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'125 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'127
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'119 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_equality_expression'nt -> Some Nis'120
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'116 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'117
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'114 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'115
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'112 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'118
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'110 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'111
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'108 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'109
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'106 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'124
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'103 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_shift_expression'nt -> Some Nis'104
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'101 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_shift_expression'nt -> Some Nis'102
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'99 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_shift_expression'nt -> Some Nis'100
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'96 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_shift_expression'nt -> Some Nis'97
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'93 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'94
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'91 ->
         (match nt with
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'92
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'89 ->
         (match nt with
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'90
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'85 ->
         (match nt with
          | Coq__1.Coq_cast_expression'nt -> Some Nis'86
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'83 ->
         (match nt with
          | Coq__1.Coq_cast_expression'nt -> Some Nis'84
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'81 ->
         (match nt with
          | Coq__1.Coq_cast_expression'nt -> Some Nis'82
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'79 ->
         (match nt with
          | Coq__1.Coq_additive_expression'nt -> Some Nis'88
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'77 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'133
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'65 ->
         (match nt with
          | Coq__1.Coq_assignment_operator'nt -> Some Nis'77
          | _ -> None)
       | Nis'63 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_argument_expression_list'nt -> Some Nis'135
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'134
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'57 ->
         (match nt with
          | Coq__1.Coq_cast_expression'nt -> Some Nis'146
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'58
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'56 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'303
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'299
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_name'nt -> Some Nis'271
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'55 ->
         (match nt with
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'305
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'52 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_argument_expression_list'nt -> Some Nis'308
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'134
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'299
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_name'nt -> Some Nis'306
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'47 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'299
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_name'nt -> Some Nis'310
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | _ -> None)
       | Nis'45 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'316
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'42 ->
         (match nt with
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'320
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'40 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_argument_expression_list'nt -> Some Nis'321
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'134
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'35 ->
         (match nt with
          | Coq__1.Coq_gcc_attribute'nt -> Some Nis'328
          | Coq__1.Coq_gcc_attribute_list'nt -> Some Nis'323
          | Coq__1.Coq_gcc_attribute_word'nt -> Some Nis'39
          | _ -> None)
       | Nis'32 ->
         (match nt with
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'243
          | Coq__1.Coq_attribute_specifier_list'nt -> Some Nis'329
          | _ -> None)
       | Nis'30 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'303
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'299
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_name'nt -> Some Nis'347
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'29 ->
         (match nt with
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'349
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'26 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'303
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'299
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_name'nt -> Some Nis'350
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'25 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'130
          | Coq__1.Coq_attribute_specifier'nt -> Some Nis'164
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_enum_specifier'nt -> Some Nis'183
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_expression'nt -> Some Nis'303
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_specifier_qualifier_list'nt -> Some Nis'299
          | Coq__1.Coq_struct_or_union'nt -> Some Nis'151
          | Coq__1.Coq_struct_or_union_specifier'nt -> Some Nis'150
          | Coq__1.Coq_type_name'nt -> Some Nis'353
          | Coq__1.Coq_type_qualifier'nt -> Some Nis'149
          | Coq__1.Coq_type_qualifier_noattr'nt -> Some Nis'148
          | Coq__1.Coq_type_specifier'nt -> Some Nis'147
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'22 ->
         (match nt with
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_unary_expression'nt -> Some Nis'355
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | Nis'17 ->
         (match nt with
          | Coq__1.AND_expression'nt -> Some Nis'121
          | Coq__1.Coq_additive_expression'nt -> Some Nis'98
          | Coq__1.Coq_argument_expression_list'nt -> Some Nis'356
          | Coq__1.Coq_assignment_expression'nt -> Some Nis'134
          | Coq__1.Coq_cast_expression'nt -> Some Nis'87
          | Coq__1.Coq_conditional_expression'nt -> Some Nis'126
          | Coq__1.Coq_equality_expression'nt -> Some Nis'113
          | Coq__1.Coq_exclusive_OR_expression'nt -> Some Nis'122
          | Coq__1.Coq_inclusive_OR_expression'nt -> Some Nis'123
          | Coq__1.Coq_logical_AND_expression'nt -> Some Nis'107
          | Coq__1.Coq_logical_OR_expression'nt -> Some Nis'105
          | Coq__1.Coq_multiplicative_expression'nt -> Some Nis'80
          | Coq__1.Coq_postfix_expression'nt -> Some Nis'60
          | Coq__1.Coq_primary_expression'nt -> Some Nis'59
          | Coq__1.Coq_relational_expression'nt -> Some Nis'95
          | Coq__1.Coq_shift_expression'nt -> Some Nis'78
          | Coq__1.Coq_unary_expression'nt -> Some Nis'65
          | Coq__1.Coq_unary_operator'nt -> Some Nis'57
          | _ -> None)
       | _ -> None)

  (** val past_symb_of_non_init_state : noninitstate -> Coq__1.symbol list **)

  let past_symb_of_non_init_state = fun _ -> assert false

  (** val past_state_of_non_init_state :
      noninitstate -> (state -> bool) list **)

  let past_state_of_non_init_state = fun _ -> assert false

  (** val items_of_state : state -> item list **)

  let items_of_state = fun _ -> assert false
 end

module Parser = Make(Aut)

(** val translation_unit_file :
    nat -> Aut.GramDefs.token coq_Stream -> Parser.Inter.parse_result **)

let translation_unit_file =
  Parser.parse Aut.Init'0
