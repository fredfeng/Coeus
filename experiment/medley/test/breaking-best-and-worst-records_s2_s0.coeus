

procedure RIGHT_func17(int .param_1, int[int] .param_2, int[int] .param_3)
 returns ()
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  assume(((1 <= .param_1) && (.param_1 <= 1000)));
  .local_4 = 0;
  .local_5 = 0;
  .local_6 = .param_2[0];
  .local_7 = .param_2[0];
  for (.local_8 = 1 to .param_1)
  {
    if ((.param_2[.local_8] > .local_6))
    {
      .local_6 = .param_2[.local_8];
      .local_4 = (.local_4 + 1);
    }
    if ((.param_2[.local_8] < .local_7))
    {
      .local_7 = .param_2[.local_8];
      .local_5 = (.local_5 + 1);
    }
  }
  .param_3[0] = .local_4;
  .param_3[1] = .local_5;
}

procedure LEFT_func11(int .param_1.0, int[int] .param_2.1,
                      int[int] .param_3.2)
 returns ()
{
  int .local_4.3;
  int .local_5.4;
  int .local_6.5;
  int .local_7.6;
  int .local_8.7;
  assume(((1 <= .param_1.0) && (.param_1.0 <= 1000)));
  .local_4.3 = 0;
  .local_5.4 = 0;
  .local_7.6 = .param_2.1[0];
  .local_8.7 = .param_2.1[0];
  for (.local_6.5 = 0 to (.param_1.0 - 1))
  {
    if ((.param_2.1[(.local_6.5 + 1)] > .local_7.6))
    {
      .local_7.6 = .param_2.1[(.local_6.5 + 1)];
      .local_4.3 = (.local_4.3 + 1);
    }
  }
  for (.local_6.5 = 0 to (.param_1.0 - 1))
  {
    if ((.param_2.1[(.local_6.5 + 1)] < .local_8.7))
    {
      .local_8.7 = .param_2.1[(.local_6.5 + 1)];
      .local_5.4 = (.local_5.4 + 1);
    }
  }
  .param_3.2[0] = .local_4.3;
  .param_3.2[1] = .local_5.4;
}

$lentry LEFT_func11;
$rentry RIGHT_func17;
requires (.param_1.0 == .param_1);
requires (.param_2.1 == .param_2);
requires (.param_3.2 == .param_3);
ensures (.param_2.1 == .param_2);
ensures (.param_3.2 == .param_3);

