

procedure RIGHT_func5(int .param_1, int .param_2) returns (int .ret_0)
{
  int .tmpret_4;
  int .local_3;
  if ((.param_2 != 0))
  {
    .local_3 = (.param_1 / 2);
    call .tmpret_4 = RIGHT_func5((.local_3 + (.local_3 + .local_3)),
     (.param_2 - 1));
    .ret_0 = (.local_3 + .tmpret_4);
  }
  else
  {
    .ret_0 = 0;
  }
}

procedure RIGHT_func14(int .param_1.0) returns (int .ret_0.1)
{
  int .tmpret_2;
  assume(((1 <= .param_1.0) && (.param_1.0 <= 50)));
  call .tmpret_2 = RIGHT_func5(5, .param_1.0);
  .ret_0.1 = .tmpret_2;
}

procedure LEFT_func9(int .param_1.2, int .param_2.3, int .param_3) returns
 (int .ret_0.4)
{
  int .tmpret_7;
  int .local_4;
  int .local_5;
  int .local_6;
  if ((.param_2.3 == 0))
  {
    .ret_0.4 = .param_3;
  }
  else
  {
    .local_4 = (.param_3 + (.param_1.2 / 2));
    .local_5 = (.param_1.2 / 2);
    .local_6 = (.local_5 + (.local_5 + .local_5));
    call .tmpret_7 = LEFT_func9(.local_6, (.param_2.3 - 1), .local_4);
    .ret_0.4 = .tmpret_7;
  }
}

procedure LEFT_func10(int .param_1.5) returns (int .ret_0.6)
{
  int .tmpret_2.7;
  assume(((1 <= .param_1.5) && (.param_1.5 <= 50)));
  call .tmpret_2.7 = LEFT_func9(5, .param_1.5, 0);
  .ret_0.6 = .tmpret_2.7;
}

$lentry LEFT_func10;
$rentry RIGHT_func14;
requires (.param_1.5 == .param_1.0);
ensures (.ret_0.6 == .ret_0.1);

