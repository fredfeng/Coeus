

procedure RIGHT_func10(int[int] .param_1, int .param_2) returns (int .ret_0)
{
  int inlined_.param_1.3;
  int inlined_.param_2.4;
  int inlined_.ret_0.5;
  int inlined_.param_1.0;
  int inlined_.param_2.1;
  int inlined_.ret_0.2;
  int .tmpret_6;
  int .tmpret_7;
  int .local_3;
  int .local_4;
  int .local_5;
  assume((.param_2 >= 0));
  if ((.param_2 <= 1))
  {
    .ret_0 = 0;
  }
  else
  {
    .local_3 = .param_1[0];
    .local_4 = (.param_1[1] - .param_1[0]);
    for (.local_5 = 2 to .param_2)
    {
      inlined_.param_1.0 = .param_1[(.local_5 - 1)];
      inlined_.param_2.1 = .local_3;
      inlined_.ret_0.2 = (if (inlined_.param_1.0 < inlined_.param_2.1) then inlined_.param_1.0 else inlined_.param_2.1);
      .tmpret_6 = inlined_.ret_0.2;
      .local_3 = .tmpret_6;
      inlined_.param_1.3 = .local_4;
      inlined_.param_2.4 = (.param_1[.local_5] - .local_3);
      inlined_.ret_0.5 = (if (inlined_.param_1.3 > inlined_.param_2.4) then inlined_.param_1.3 else inlined_.param_2.4);
      .tmpret_7 = inlined_.ret_0.5;
      .local_4 = .tmpret_7;
    }
    if ((.local_4 < 0))
    {
      .ret_0 = 0;
    }
    else
    {
      .ret_0 = .local_4;
    }
  }
}

procedure LEFT_func10(int[int] .param_1.0, int .param_2.1) returns
 (int .ret_0.2)
{
  int .local_3.3;
  int .local_4.4;
  int .local_5.5;
  int .local_6;
  int .local_7;
  assume((.param_2.1 >= 0));
  if (((.param_2.1 == 0) || (.param_2.1 == 1)))
  {
    .ret_0.2 = 0;
  }
  else
  {
    .local_6 = 0;
    .local_3.3 = 0;
    .local_4.4 = 0;
    for (.local_7 = 1 to .param_2.1)
    {
      if ((.param_1.0[.local_3.3] < .param_1.0[.local_7]))
      {
        .local_3.3 = .local_7;
      }
      if ((.param_1.0[.local_7] < .param_1.0[.local_4.4]))
      {
        if ((.local_6 < (.param_1.0[.local_3.3] - .param_1.0[.local_4.4])))
        {
          .local_6 = (.param_1.0[.local_3.3] - .param_1.0[.local_4.4]);
        }
        .local_3.3 = .local_7;
        .local_4.4 = .local_7;
      }
    }
    .local_5.5 = (.param_1.0[.local_3.3] - .param_1.0[.local_4.4]);
    .ret_0.2 = (if (.local_6 < .local_5.5) then .local_5.5 else .local_6);
  }
}

$lentry LEFT_func10;
$rentry RIGHT_func10;
requires (.param_1.0 == .param_1);
requires (.param_2.1 == .param_2);
ensures (.param_1.0 == .param_1);
ensures (.ret_0.2 == .ret_0);

