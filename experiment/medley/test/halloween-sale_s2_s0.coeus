

procedure RIGHT_func13(int .param_1, int .param_2, int .param_3,
                       int .param_4)
 returns (int .ret_0)
{
  int .local_5;
  assume((((((((1 <= .param_3) && (.param_3 <= .param_1)) && (.param_1 <= 100)) && (1 <= .param_2)) && (.param_2 <= 100)) && (1 <= .param_4)) && (.param_4 <= 10000)));
  .local_5 = 0;
  while ((.param_4 >= .param_1))
  {
    .local_5 = (.local_5 + 1);
    .param_4 = (.param_4 - .param_1);
    if (((.param_1 - .param_2) <= .param_3))
    {
      .param_1 = .param_3;
    }
    else
    {
      .param_1 = (.param_1 - .param_2);
    }
  }
  .ret_0 = .local_5;
}

procedure LEFT_func11(int .param_1.0, int .param_2.1, int .param_3.2,
                      int .param_4.3)
 returns (int .ret_0.4)
{
  int .local_5.5;
  int .local_6;
  int .local_7;
  int .local_8;
  assume((((((((1 <= .param_3.2) && (.param_3.2 <= .param_1.0)) && (.param_1.0 <= 100)) && (1 <= .param_2.1)) && (.param_2.1 <= 100)) && (1 <= .param_4.3)) && (.param_4.3 <= 10000)));
  .local_5.5 = 0;
  .local_6 = -1;
  .local_7 = .param_1.0;
  .local_8 = 0;
  while ((.local_5.5 <= .param_4.3))
  {
    if ((.local_7 > .param_3.2))
    {
      .local_5.5 = (.local_5.5 + .local_7);
      .local_6 = (.local_6 + 1);
      .local_7 = (.local_7 - .param_2.1);
    }
    else
    {
      .local_5.5 = (.local_5.5 + .param_3.2);
      .local_6 = (.local_6 + 1);
    }
  }
  .ret_0.4 = .local_6;
}

$lentry LEFT_func11;
$rentry RIGHT_func13;
requires (.param_1.0 == .param_1);
requires (.param_2.1 == .param_2);
requires (.param_3.2 == .param_3);
requires (.param_4.3 == .param_4);
ensures (.ret_0.4 == .ret_0);

