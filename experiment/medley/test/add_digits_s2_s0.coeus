

procedure RIGHT_func10(int .param_1) returns (int .ret_0)
{
  int inlined_.param_1.0;
  int inlined_.ret_0.1;
  int inlined_.local_2.2;
  int .tmpret_2;
  assume((.param_1 >= 0));
  while ((.param_1 >= 10))
  {
    inlined_.param_1.0 = .param_1;
    inlined_.local_2.2 = 0;
    while ((inlined_.param_1.0 != 0))
    {
      inlined_.local_2.2 = (inlined_.local_2.2 + (inlined_.param_1.0 % 10));
      inlined_.param_1.0 = (inlined_.param_1.0 / 10);
    }
    inlined_.ret_0.1 = inlined_.local_2.2;
    .tmpret_2 = inlined_.ret_0.1;
    .param_1 = .tmpret_2;
  }
  .ret_0 = .param_1;
}

procedure LEFT_func6(int .param_1.0) returns (int .ret_0.1)
{
  int .local_2;
  int .local_3;
  assume((.param_1.0 >= 0));
  .local_2 = .param_1.0;
  while ((.local_2 >= 10))
  {
    .local_3 = .local_2;
    .local_2 = 0;
    while (((.local_3 / 10) >= 1))
    {
      .local_2 = (.local_2 + (.local_3 % 10));
      .local_3 = (.local_3 / 10);
    }
    .local_2 = (.local_2 + .local_3);
  }
  .ret_0.1 = .local_2;
}

$lentry LEFT_func6;
$rentry RIGHT_func10;
requires (.param_1.0 == .param_1);
ensures (.ret_0.1 == .ret_0);

