

procedure RIGHT_func11(int .param_1) returns (int .ret_0)
{
  int .tmpret_2;
  assume(((.param_1 >= 0) && (.param_1 <= 60)));
  call .tmpret_2 = RIGHT_func10(1, 0, .param_1);
  .ret_0 = .tmpret_2;
}

procedure RIGHT_func10(int .param_1.0, int .param_2, int .param_3) returns
 (int .ret_0.1)
{
  int .tmpret_4;
  if ((.param_2 == .param_3))
  {
    .ret_0.1 = .param_1.0;
  }
  else
  {
    if (((.param_2 % 2) == 0))
    {
      .param_1.0 = (.param_1.0 + .param_1.0);
    }
    else
    {
      .param_1.0 = (.param_1.0 + 1);
    }
    call .tmpret_4 = RIGHT_func10(.param_1.0, (.param_2 + 1), .param_3);
    .ret_0.1 = .tmpret_4;
  }
}

procedure LEFT_func6(int .param_1.2) returns (int .ret_0.3)
{
  int .local_2;
  int .local_3;
  assume(((.param_1.2 >= 0) && (.param_1.2 <= 60)));
  .local_2 = 1;
  .local_3 = 1;
  while ((.param_1.2 != 0))
  {
    if (((.local_3 % 2) != 0))
    {
      .local_2 = (.local_2 + .local_2);
    }
    else
    {
      .local_2 = (.local_2 + 1);
    }
    .local_3 = (.local_3 + 1);
    .param_1.2 = (.param_1.2 - 1);
  }
  .ret_0.3 = .local_2;
}

$lentry LEFT_func6;
$rentry RIGHT_func11;
requires (.param_1.2 == .param_1);
ensures (.ret_0.3 == .ret_0);

