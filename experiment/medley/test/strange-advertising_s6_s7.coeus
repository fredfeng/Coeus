

procedure RIGHT_func15(int .param_1, int .param_2, int .param_3) returns
 (int .ret_0)
{
  int .tmpret_5;
  int .local_4;
  .local_4 = (.param_2 / 2);
  .param_3 = (.param_3 + .local_4);
  if ((.param_1 == 1))
  {
    .ret_0 = .param_3;
  }
  else
  {
    call .tmpret_5 = RIGHT_func15((.param_1 - 1),
     (.local_4 + (.local_4 + .local_4)), .param_3);
    .ret_0 = .tmpret_5;
  }
}

procedure RIGHT_func10(int .param_1.0) returns (int .ret_0.1)
{
  int .tmpret_2;
  assume(((1 <= .param_1.0) && (.param_1.0 <= 50)));
  call .tmpret_2 = RIGHT_func15(.param_1.0, 5, 0);
  .ret_0.1 = .tmpret_2;
}

procedure LEFT_func9(int .param_1.2, int .param_2.3, int .param_3.4) returns
 (int .ret_0.5)
{
  int .tmpret_7;
  int .local_4.6;
  int .local_5;
  int .local_6;
  if ((.param_2.3 == 0))
  {
    .ret_0.5 = .param_3.4;
  }
  else
  {
    .local_4.6 = (.param_3.4 + (.param_1.2 / 2));
    .local_5 = (.param_1.2 / 2);
    .local_6 = (.local_5 + (.local_5 + .local_5));
    call .tmpret_7 = LEFT_func9(.local_6, (.param_2.3 - 1), .local_4.6);
    .ret_0.5 = .tmpret_7;
  }
}

procedure LEFT_func10(int .param_1.7) returns (int .ret_0.8)
{
  int .tmpret_2.9;
  assume(((1 <= .param_1.7) && (.param_1.7 <= 50)));
  call .tmpret_2.9 = LEFT_func9(5, .param_1.7, 0);
  .ret_0.8 = .tmpret_2.9;
}

$lentry LEFT_func10;
$rentry RIGHT_func10;
requires (.param_1.7 == .param_1.0);
ensures (.ret_0.8 == .ret_0.1);

