

procedure RIGHT_func12(int[int] .param_1, int .param_2) returns (int .ret_0)
{
  int .tmpret_3;
  assume((.param_2 >= 1));
  call .tmpret_3 = RIGHT_func11(.param_1, .param_2);
  .ret_0 = .tmpret_3;
}

procedure RIGHT_func11(int[int] .param_1.0, int .param_2.1) returns
 (int .ret_0.2)
{
  int .tmpret_3.3;
  if (((.param_2.1 - 1) <= 0))
  {
    .ret_0.2 = 0;
  }
  else
  {
    call .tmpret_3.3 = RIGHT_func11(.param_1.0, (.param_2.1 - 1));
    .ret_0.2 = (.tmpret_3.3 + (if (.param_1.0[(.param_2.1 - 1)] == .param_1.0[(.param_2.1 - 2)]) then 1 else 0));
  }
}

procedure LEFT_func7(int[int] .param_1.4, int .param_2.5) returns
 (int .ret_0.6)
{
  int .local_3;
  int .local_4;
  assume((.param_2.5 >= 1));
  .local_4 = 0;
  for (.local_3 = (.param_2.5 - 1) downto 0)
  {
    if ((.param_1.4[.local_3] == .param_1.4[(.local_3 - 1)]))
    {
      .local_4 = (.local_4 + 1);
    }
  }
  .ret_0.6 = .local_4;
}

$lentry LEFT_func7;
$rentry RIGHT_func12;
requires (.param_1.4 == .param_1);
requires (.param_2.5 == .param_2);
ensures (.param_1.4 == .param_1);
ensures (.ret_0.6 == .ret_0);

