

procedure RIGHT_func13(int[int] .param_1, int .param_2) returns (int .ret_0)
{
  int[int] .local_3;
  int .local_4;
  assume((.param_2 >= 0));
  .local_3[0] = 0;
  .local_3[1] = 0;
  for (.local_4 = 0 to .param_2)
  {
    if ((.param_1[.local_4] != 0))
    {
      .local_3[1] = (.local_3[1] + 1);
      if ((.local_3[0] < .local_3[1]))
      {
        .local_3[0] = .local_3[1];
      }
    }
    else
    {
      .local_3[1] = 0;
    }
  }
  .ret_0 = .local_3[0];
}

procedure LEFT_func8(int[int] .param_1.0, int .param_2.1) returns
 (int .ret_0.2)
{
  int .local_3.3;
  int .local_4.4;
  int .local_5;
  assume((.param_2.1 >= 0));
  .local_3.3 = 0;
  .local_4.4 = 0;
  for (.local_5 = 0 to .param_2.1)
  {
    if ((.param_1.0[.local_5] != 0))
    {
      .local_3.3 = (.local_3.3 + 1);
    }
    else
    {
      if (((.param_1.0[.local_5] == 0) || (.local_3.3 >= 1)))
      {
        if ((.local_4.4 < .local_3.3))
        {
          .local_4.4 = .local_3.3;
        }
        .local_3.3 = 0;
      }
    }
  }
  if ((.local_4.4 < .local_3.3))
  {
    .local_4.4 = .local_3.3;
  }
  .ret_0.2 = .local_4.4;
}

$lentry LEFT_func8;
$rentry RIGHT_func13;
requires (.param_1.0 == .param_1);
requires (.param_2.1 == .param_2);
ensures (.param_1.0 == .param_1);
ensures (.ret_0.2 == .ret_0);

