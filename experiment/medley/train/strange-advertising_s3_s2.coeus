

procedure RIGHT_func17(int .param_1) returns (int .ret_0)
{
  int .tmpret_2;
  assume(((1 <= .param_1) && (.param_1 <= 50)));
  call .tmpret_2 = RIGHT_func16(5, .param_1, 1);
  .ret_0 = .tmpret_2;
}

procedure RIGHT_func16(int .param_1.0, int .param_2, int .param_3) returns
 (int .ret_0.1)
{
  int .tmpret_4;
  if ((.param_3 == .param_2))
  {
    .ret_0.1 = (.param_1.0 / 2);
  }
  else
  {
    call .tmpret_4 = RIGHT_func16(((.param_1.0 / 2) + ((.param_1.0 / 2) + (.param_1.0 / 2))),
     .param_2, .param_3);
    .param_1.0 = ((.param_1.0 / 2) + .tmpret_4);
    .ret_0.1 = .param_1.0;
  }
}

procedure LEFT_func12(int .param_1.2) returns (int .ret_0.3)
{
  int .tmpret_2.4;
  assume(((1 <= .param_1.2) && (.param_1.2 <= 50)));
  call .tmpret_2.4 = LEFT_func10(1, .param_1.2, 2, 2);
  .ret_0.3 = .tmpret_2.4;
}

procedure LEFT_func10(int .param_1.5, int .param_2.6, int .param_3.7,
                      int .param_4)
 returns (int .ret_0.8)
{
  int .tmpret_8;
  int .local_5;
  int .local_6;
  if ((.param_1.5 == .param_2.6))
  {
    .ret_0.8 = .param_4;
  }
  else
  {
    .local_5 = (.param_3.7 + (.param_3.7 + .param_3.7));
    .local_6 = (.local_5 - (.local_5 / 2));
    call .tmpret_8 = LEFT_func10((.param_1.5 + 1), .param_2.6,
     (.local_5 / 2), ((.param_4 + .local_5) - .local_6));
    .ret_0.8 = .tmpret_8;
  }
}

$lentry LEFT_func12;
$rentry RIGHT_func17;
requires (.param_1.2 == .param_1);
ensures (.ret_0.3 == .ret_0);

