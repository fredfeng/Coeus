

procedure RIGHT_func6(int[int] .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  int .local_4;
  int .local_5;
  assume((.param_2 >= 0));
  .local_3 = 1;
  .local_4 = 0;
  .local_5 = 0;
  while (((.local_5 < .param_2) && (.local_3 != 0)))
  {
    if ((.local_5 == (.param_2 - 1)))
    {
      .local_4 = 1;
      .local_3 = 0;
    }
    else
    {
      if ((.param_1[.local_5] != 0))
      {
        .local_5 = (.local_5 + 1);
      }
    }
    .local_5 = (.local_5 + 1);
  }
  .ret_0 = .local_4;
}

procedure LEFT_func6(int[int] .param_1.0, int .param_2.1) returns
 (int .ret_0.2)
{
  int .local_3.3;
  assume((.param_2.1 >= 0));
  .local_3.3 = 0;
  while ((.local_3.3 < (.param_2.1 - 1)))
  {
    if ((.param_1.0[.local_3.3] == 0))
    {
      .local_3.3 = (.local_3.3 + 1);
    }
    else
    {
      .local_3.3 = (.local_3.3 + 2);
    }
  }
  .ret_0.2 = (if (.local_3.3 == (.param_2.1 - 1)) then 1 else 0);
}

$lentry LEFT_func6;
$rentry RIGHT_func6;
requires (.param_1.0 == .param_1);
requires (.param_2.1 == .param_2);
ensures (.param_1.0 == .param_1);
ensures (.ret_0.2 == .ret_0);

