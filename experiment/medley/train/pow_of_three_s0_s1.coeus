

procedure RIGHT_func3(int .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  .local_2 = 1;
  .local_3 = 0;
  while (((.param_1 > 0) && (.local_2 != 0)))
  {
    if ((.param_1 == 1))
    {
      .local_3 = 1;
      .local_2 = 0;
    }
    else
    {
      if (((.param_1 % 3) == 0))
      {
        .param_1 = (.param_1 / 3);
      }
      else
      {
        .local_2 = 0;
      }
    }
  }
  .ret_0 = .local_3;
}

procedure LEFT_func4(int .param_1.0) returns (int .ret_0.1)
{
  int .tmpret_2;
  call .tmpret_2 = LEFT_func3(.param_1.0);
  .ret_0.1 = .tmpret_2;
}

procedure LEFT_func3(int .param_1.2) returns (int .ret_0.3)
{
  int .tmpret_2.4;
  if ((.param_1.2 == 0))
  {
    .ret_0.3 = 0;
  }
  else
  {
    if ((.param_1.2 == 1))
    {
      .ret_0.3 = 1;
    }
    else
    {
      if (((.param_1.2 % 3) == 0))
      {
        call .tmpret_2.4 = LEFT_func3((.param_1.2 / 3));
        .ret_0.3 = .tmpret_2.4;
      }
      else
      {
        .ret_0.3 = 0;
      }
    }
  }
}

$lentry LEFT_func4;
$rentry RIGHT_func3;
requires (.param_1.0 == .param_1);
ensures (.ret_0.1 == .ret_0);

