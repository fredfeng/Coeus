

procedure RIGHT_func7(int[int] .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  assume(((.param_2 >= 1) && (.param_1[(.param_2 - 1)] == 0)));
  .local_3 = 0;
  while ((.local_3 < (.param_2 - 1)))
  {
    if ((.param_1[.local_3] == 0))
    {
      .local_3 = (.local_3 + 1);
    }
    else
    {
      .local_3 = (.local_3 + 2);
    }
  }
  .ret_0 = (if (.local_3 == (.param_2 - 1)) then 1 else 0);
}

procedure LEFT_func7(int[int] .param_1.0, int .param_2.1) returns
 (int .ret_0.2)
{
  int .local_3.3;
  int .local_4;
  assume(((.param_2.1 >= 1) && (.param_1.0[(.param_2.1 - 1)] == 0)));
  .local_3.3 = (if ((.param_2.1 == 1) || (! (.param_1.0[(.param_2.1 - 2)] != 0))) then 1 else 0);
  if ((.local_3.3 != 0))
  {
    .ret_0.2 = 1;
  }
  else
  {
    .local_4 = 0;
    while ((.local_4 < .param_2.1))
    {
      .local_4 = (.local_4 + (if (.param_1.0[.local_4] != 0) then 1 else 0));
      .local_3.3 = (if ((.local_3.3 != 0) || (.local_4 == (.param_2.1 - 2))) then 1 else 0);
      .local_4 = (.local_4 + 1);
    }
    .ret_0.2 = .local_3.3;
  }
}

$lentry LEFT_func7;
$rentry RIGHT_func7;
requires (.param_1.0 == .param_1);
requires (.param_2.1 == .param_2);
ensures (.param_1.0 == .param_1);
ensures (.ret_0.2 == .ret_0);

