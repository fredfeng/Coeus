procedure f0(int n, int[int] a, int[int] b) returns (int[int] c){
   int i1;
   int m1;

   m1 = n - 1;
   i1 = 1;
   while(i1 <= m1) {
      b[i1] = a[i1];
      c[i1] = b[i1-1];
      i1 = i1 + 1;
   }
}

procedure f1(int n, int[int] a, int[int] b) returns (int[int] c){
   int i2;
   int m2;

   m2 = n - 1;
   c[1] = b[0];
   i2 = 1;
   while(i2 <= m2-1) {
      b[i2] = a[i2];
      c[i2+1] = b[i2];
      i2 = i2 + 1;
   }
   b[m2] = a[m2];
}

requires $L(n) == $R(n);
requires $L(a) == $R(a);
requires $L(b) == $R(b);
requires $L(c) == $R(c);
requires $L(n) >= 5;

ensures $L(c) == $R(c);

