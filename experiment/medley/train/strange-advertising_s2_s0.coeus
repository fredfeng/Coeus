

procedure RIGHT_func12(int .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  int .local_4;
  assume(((1 <= .param_1) && (.param_1 <= 50)));
  .local_3 = 5;
  .local_4 = 0;
  for (.local_2 = 1 to (.param_1 + 1))
  {
    .local_4 = (.local_4 + (.local_3 / 2));
    .local_3 = ((.local_3 / 2) + ((.local_3 / 2) + (.local_3 / 2)));
  }
  .ret_0 = .local_4;
}

procedure LEFT_func7(int .param_1.0) returns (int .ret_0.1)
{
  int .tmpret_2;
  assume(((1 <= .param_1.0) && (.param_1.0 <= 50)));
  call .tmpret_2 = LEFT_func6(5, .param_1.0, 1);
  .ret_0.1 = .tmpret_2;
}

procedure LEFT_func6(int .param_1.2, int .param_2, int .param_3) returns
 (int .ret_0.3)
{
  int .tmpret_4;
  if ((.param_3 == .param_2))
  {
    .ret_0.3 = (.param_1.2 / 2);
  }
  else
  {
    call .tmpret_4 = LEFT_func6(((.param_1.2 / 2) + ((.param_1.2 / 2) + (.param_1.2 / 2))),
     .param_2, .param_3);
    .param_1.2 = ((.param_1.2 / 2) + .tmpret_4);
    .ret_0.3 = .param_1.2;
  }
}

$lentry LEFT_func7;
$rentry RIGHT_func12;
requires (.param_1.0 == .param_1);
ensures (.ret_0.1 == .ret_0);

