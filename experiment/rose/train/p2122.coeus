declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  int .local_6;
  int .local_7;
  .local_5 = .param_2;
  for (.param_4 = 0 to .local_5)
  {
    .local_6 = 16;
    .local_7 = 1;
    while ((bvand(.local_6, .local_6) == (- .local_5)))
    {
      if ((0 == .param_2))
      {
        .param_2 = (3 - .param_4);
        .param_2 = (bvxor(1, .local_6) % (bvor(4, .local_6) + bvxor(6,
         .param_2)));
      }
      else
      {
        .param_2 = (.local_7 + .param_2);
        .local_6 = (.param_2 - bvor(3, .param_2));
      }
      .local_5 = (- bvxor(bvand(.param_2, .param_4), 1));
    }
  }
  while ((! .param_3))
  {
    .param_4 = bvand(1, bvor(.param_2, .param_2));
    while (.param_3)
    {
      .param_4 = bvxor(bvor(.param_4, .param_4), (16 * .local_5));
      .param_4 = (.param_4 % 2);
    }
    if (.param_3)
    {
      
    }
    else
    {
      .local_5 = .param_4;
    }
  }
  for (.local_5 = 0 to 6)
  {
    .param_4 = (2 + (.param_2 % .param_2));
    .local_6 = (.local_5 - .param_2);
    .param_2 = 33;
    .param_2 = bvxor((8 - .param_2), bvxor((- .param_2), (.param_4 * 32)));
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, bool .param_10, int .param_11) returns
 (int .ret_8)
{
  int .local_12;
  int .local_13;
  int .local_14;
  .local_12 = .param_9;
  for (.param_11 = 0 to .local_12)
  {
    .local_13 = 16;
    .local_14 = 1;
    while ((bvand(.local_13, .local_13) == (- .local_12)))
    {
      if ((0 == .param_9))
      {
        .param_9 = (3 - .param_11);
        .param_9 = (bvxor(1, .local_13) % (bvor(4, .local_13) + bvxor(6,
         .param_9)));
      }
      else
      {
        .param_9 = (.local_14 + .param_9);
        .local_13 = (.param_9 - bvor(3, .param_9));
      }
      .local_12 = (- bvxor(bvand(.param_9, .param_11), 1));
    }
  }
  while ((! .param_10))
  {
    .param_11 = bvand(1, bvor(.param_9, .param_9));
    while (.param_10)
    {
      .param_11 = bvxor(bvor(.param_11, .param_11), (16 * .local_12));
      .param_11 = (.param_11 % 2);
    }
    if (.param_10)
    {
      
    }
    else
    {
      .local_12 = .param_11;
    }
  }
  for (.local_12 = 0 to 6 step 2)
  {
    .param_11 = (2 + (.param_9 % .param_9));
    .local_13 = (.local_12 - .param_9);
    .param_9 = 33;
    .param_9 = bvxor((8 - .param_9), bvxor((- .param_9), (.param_11 * 32)));
    if (((1 + .local_12) <= 5))
    {
      .param_11 = (2 + (.param_9 % .param_9));
      .local_13 = ((1 + .local_12) - .param_9);
      .param_9 = 33;
      .param_9 = bvxor((8 - .param_9), bvxor((- .param_9),
       (.param_11 * 32)));
    }
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

