

procedure f0(bool .param_2, int .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  bool .local_6;
  int .local_7;
  .local_5 = 0;
  .local_7 = 4;
  for (.local_7 = 0 to 2)
  {
    .local_6 = .param_2;
    .local_5 = .param_4;
    .param_4 = .local_7;
    if (.local_6)
    {
      
    }
    else
    {
      .local_5 = ((.param_4 * .local_5) + .param_3);
    }
  }
  .param_4 = (.param_3 % .local_5);
  .local_5 = (.param_4 / -13);
  .ret_1 = .local_5;
}

procedure f1(bool .param_9, int .param_10, int .param_11) returns
 (int .ret_8)
{
  int .local_12;
  bool .local_13;
  int .local_14;
  .local_12 = 0;
  .local_14 = 4;
  for (.local_14 = 0 to 2 step 2)
  {
    .local_13 = .param_9;
    .local_12 = .param_11;
    .param_11 = .local_14;
    if (.local_13)
    {
      
    }
    else
    {
      .local_12 = ((.param_11 * .local_12) + .param_10);
    }
    if (((1 + .local_14) <= 1))
    {
      .local_13 = .param_9;
      .local_12 = .param_11;
      .param_11 = (1 + .local_14);
      if (.local_13)
      {
        
      }
      else
      {
        .local_12 = ((.param_11 * .local_12) + .param_10);
      }
    }
  }
  .param_11 = (.param_10 % .local_12);
  .local_12 = (.param_11 / -13);
  .ret_8 = .local_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

