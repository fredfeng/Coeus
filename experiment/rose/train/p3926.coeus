declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2) returns (int .ret_1)
{
  bool .local_3;
  int .local_4;
  bool .local_5;
  bool .local_6;
  int .local_7;
  .local_3 = true;
  .local_5 = (! (.local_3 || (.local_3 == .local_3)));
  for (.local_4 = 0 to 2)
  {
    .local_5 = (.local_5 == (.local_5 || .local_5));
  }
  while ((16 > .param_2))
  {
    .local_4 = .param_2;
    .param_2 = bvor(0, (.local_4 + .local_4));
    .local_5 = false;
  }
  while (.local_5)
  {
    .local_4 = .param_2;
    for (.local_7 = 0 to 32)
    {
      .local_6 = .local_5;
      .local_5 = (.local_5 != .local_6);
    }
    .param_2 = 10;
    if ((.param_2 >= .param_2))
    {
      .param_2 = bvand(-128, bvand(bvxor(.param_2, .local_4), 0));
    }
    else
    {
      .local_7 = bvxor(bvand(.param_2, .param_2),
       (.param_2 + (.param_2 + .param_2)));
      if ((64 < .param_2))
      {
        .local_5 = (0 >= .local_7);
      }
      else
      {
        .local_5 = (! (.local_3 || .local_3));
      }
      .local_5 = (.local_5 != (! .local_3));
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9) returns (int .ret_8)
{
  bool .local_10;
  int .local_11;
  bool .local_12;
  bool .local_13;
  int .local_14;
  .local_10 = true;
  .local_12 = (! (.local_10 || (.local_10 == .local_10)));
  for (.local_11 = 0 to 2 step 2)
  {
    .local_12 = (.local_12 == (.local_12 || .local_12));
    if (((1 + .local_11) <= 1))
    {
      .local_12 = (.local_12 == (.local_12 || .local_12));
    }
  }
  while ((16 > .param_9))
  {
    .local_11 = .param_9;
    .param_9 = bvor(0, (.local_11 + .local_11));
    .local_12 = false;
  }
  while (.local_12)
  {
    .local_11 = .param_9;
    for (.local_14 = 0 to 32 step 2)
    {
      .local_13 = .local_12;
      .local_12 = (.local_12 != .local_13);
      if (((1 + .local_14) <= 31))
      {
        .local_13 = .local_12;
        .local_12 = (.local_12 != .local_13);
      }
    }
    .param_9 = 10;
    if ((.param_9 >= .param_9))
    {
      .param_9 = bvand(-128, bvand(bvxor(.param_9, .local_11), 0));
    }
    else
    {
      .local_14 = bvxor(bvand(.param_9, .param_9),
       (.param_9 + (.param_9 + .param_9)));
      if ((64 < .param_9))
      {
        .local_12 = (0 >= .local_14);
      }
      else
      {
        .local_12 = (! (.local_10 || .local_10));
      }
      .local_12 = (.local_12 != (! .local_10));
    }
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
ensures (.ret_1 == .ret_8);

