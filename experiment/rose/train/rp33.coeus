declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  bool .local_6;
  int .local_7;
  int .local_8;
  .local_5 = 1;
  .local_4 = true;
  .local_8 = 4;
  .local_6 = .local_4;
  while ((.param_3 <= 16))
  {
    if ((.param_2 >= .param_2))
    {
      if ((.local_6 || .local_4))
      {
        .param_2 = (bvor(.param_3, 2) + (bvor(.param_3, 2) + (bvor(.param_3,
         2) + (bvor(.param_3, 2) + (bvor(.param_3, 2) + (bvor(.param_3,
         2) + (bvor(.param_3, 2) + bvor(.param_3, 2))))))));
      }
      else
      {
        .param_2 = ((1 + .param_3) * (.param_2 * .param_3));
      }
    }
    else
    {
      .param_2 = .param_2;
    }
  }
  for (.param_2 = 0 to (.param_3 * .local_5))
  {
    .local_7 = bvor((.local_5 + .local_5), .param_3);
    .local_5 = 4;
    while ((0 > .local_5))
    {
      .local_8 = 0;
      while ((.local_8 < (- .local_7)))
      {
        .param_3 = (((.param_2 * .param_3) % (- .local_8)) / 32);
        .local_5 = 5;
        .local_8 = (.local_8 + 1);
      }
    }
  }
  while ((.param_3 >= 7))
  {
    for (.param_2 = 0 to bvxor(.local_5, 3))
    {
      .param_3 = (1 + .param_2);
    }
    .param_3 = (- .param_3);
  }
  .ret_1 = .local_5;
}

procedure f1(int .param_10, int .param_11) returns (int .ret_9)
{
  bool .local_12;
  int .local_13;
  bool .local_14;
  int .local_15;
  int .local_16;
  .local_13 = 1;
  .local_12 = true;
  .local_16 = 4;
  .local_14 = .local_12;
  while ((.param_11 <= 16))
  {
    if ((.param_10 >= .param_10))
    {
      if ((.local_14 || .local_12))
      {
        .param_10 = (bvor(.param_11, 2) + (bvor(.param_11,
         2) + (bvor(.param_11, 2) + (bvor(.param_11, 2) + (bvor(.param_11,
         2) + (bvor(.param_11, 2) + (bvor(.param_11, 2) + bvor(.param_11,
         2))))))));
      }
      else
      {
        .param_10 = ((1 + .param_11) * (.param_10 * .param_11));
      }
    }
    else
    {
      .param_10 = .param_10;
    }
  }
  for (.param_10 = 0 to (.param_11 * .local_13))
  {
    .local_15 = bvor((.local_13 + .local_13), .param_11);
    .local_13 = 4;
    while ((0 > .local_13))
    {
      .local_16 = 0;
      while ((.local_16 <= (-1 - .local_15)))
      {
        .param_11 = (((.param_10 * .param_11) % (- .local_16)) / 32);
        .local_16 = (.local_16 + 1);
      }
      .local_16 = 0;
      while ((.local_16 <= (-1 - .local_15)))
      {
        .local_13 = 5;
        .local_16 = (.local_16 + 1);
      }
    }
  }
  while ((.param_11 >= 7))
  {
    for (.param_10 = 0 to ((-1 + bvxor(.local_13, 3)) + 1))
    {
      .param_11 = (1 + .param_10);
    }
    .param_11 = (- .param_11);
  }
  .ret_9 = .local_13;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
ensures (.ret_1 == .ret_9);

