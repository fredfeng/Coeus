declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  .local_5 = bvor((- .param_2), 64);
  .local_4 = 7;
  .local_6 = (.local_5 + .param_2);
  for (.local_6 = 9 to 16)
  {
    .local_4 = bvand(6, .local_6);
  }
  .local_5 = (- .local_4);
  .param_2 = (.local_4 * .local_5);
  .ret_1 = .param_2;
}

procedure f1(int .param_8, bool .param_9) returns (int .ret_7)
{
  int .local_10;
  int .local_11;
  int .local_12;
  .local_11 = bvor((- .param_8), 64);
  .local_10 = 7;
  .local_12 = (.local_11 + .param_8);
  for (.local_12 = 9 to 16 step 2)
  {
    .local_10 = bvand(6, .local_12);
    if (((1 + .local_12) <= 15))
    {
      .local_10 = bvand(6, (1 + .local_12));
    }
  }
  .local_11 = (- .local_10);
  .param_8 = (.local_10 * .local_11);
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
requires (.param_3 == .param_9);
ensures (.ret_1 == .ret_7);

