declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_7 = 1;
  .local_9 = 0;
  .local_6 = .param_2;
  .local_5 = .param_2;
  while (.param_3)
  {
    .local_7 = 0;
    while ((.local_7 < .param_4))
    {
      .local_8 = (.local_5 + .local_5);
      .local_9 = 0;
      while ((.local_9 < 16))
      {
        .param_4 = bvor(.param_2, .local_8);
        .local_5 = .local_9;
        .local_7 = bvor(.local_6, 4);
        .local_9 = (.local_9 + 1);
      }
      while (.param_3)
      {
        .local_5 = (2 / bvxor(.local_7, .local_7));
      }
      .param_2 = (.local_7 + (.local_7 - 4));
      .local_7 = (.local_7 + 1);
    }
  }
  for (.local_6 = 0 to 64)
  {
    .local_7 = ((- .param_2) % (.param_2 * (- .param_4)));
    .param_2 = bvor(bvxor(.param_2, .local_5), .local_7);
    .param_4 = .param_2;
  }
  .param_2 = .param_4;
  .ret_1 = .param_2;
}

procedure f1(int .param_11, bool .param_12, int .param_13) returns
 (int .ret_10)
{
  int .local_14;
  int .local_15;
  int .local_16;
  int .local_17;
  int .local_18;
  .local_16 = 1;
  .local_18 = 0;
  .local_15 = .param_11;
  .local_14 = .param_11;
  while (.param_12)
  {
    .local_16 = 0;
    while ((.local_16 <= (.param_13 - 1)))
    {
      .local_17 = (.local_14 + .local_14);
      .local_18 = 0;
      while ((.local_18 <= 15))
      {
        .param_13 = bvor(.param_11, .local_17);
        .local_18 = (.local_18 + 1);
      }
      .local_18 = 0;
      while ((.local_18 <= 15))
      {
        .local_14 = .local_18;
        .local_18 = (.local_18 + 1);
      }
      .local_18 = 0;
      while ((.local_18 <= 15))
      {
        .local_16 = bvor(.local_15, 4);
        .local_18 = (.local_18 + 1);
      }
      while (.param_12)
      {
        .local_14 = (2 / bvxor(.local_16, .local_16));
      }
      .param_11 = (.local_16 + (.local_16 - 4));
      .local_16 = (.local_16 + 1);
    }
  }
  for (.local_15 = 0 to 64)
  {
    .local_16 = ((- .param_11) % (.param_11 * (- .param_13)));
    .param_11 = bvor(bvxor(.param_11, .local_14), .local_16);
    .param_13 = .param_11;
  }
  .param_11 = .param_13;
  .ret_10 = .param_11;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_11);
requires (.param_3 == .param_12);
requires (.param_4 == .param_13);
ensures (.ret_1 == .ret_10);

