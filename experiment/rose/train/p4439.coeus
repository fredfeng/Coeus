declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  int .local_4;
  bool .local_5;
  .local_4 = 64;
  .local_5 = true;
  .local_4 = bvxor(bvor(2, .param_2), (- .local_4));
  for (.param_2 = 0 to 4)
  {
    .local_5 = ((! .local_5) == .local_5);
    .local_4 = 0;
    if (.local_5)
    {
      .local_4 = (- .param_3);
    }
    else
    {
      .local_4 = (bvor(7, (0 / .local_4)) % (1 + .local_4));
    }
  }
  .ret_1 = .local_4;
}

procedure f1(int .param_7, int .param_8) returns (int .ret_6)
{
  int .local_9;
  bool .local_10;
  .local_9 = 64;
  .local_10 = true;
  .local_9 = bvxor(bvor(2, .param_7), (- .local_9));
  for (.param_7 = 0 to 4 step 2)
  {
    .local_10 = ((! .local_10) == .local_10);
    .local_9 = 0;
    if (.local_10)
    {
      .local_9 = (- .param_8);
    }
    else
    {
      .local_9 = (bvor(7, (0 / .local_9)) % (1 + .local_9));
    }
    if (((1 + .param_7) <= 3))
    {
      .local_10 = ((! .local_10) == .local_10);
      .local_9 = 0;
      if (.local_10)
      {
        .local_9 = (- .param_8);
      }
      else
      {
        .local_9 = (bvor(7, (0 / .local_9)) % (1 + .local_9));
      }
    }
  }
  .ret_6 = .local_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_7);
requires (.param_3 == .param_8);
ensures (.ret_1 == .ret_6);

