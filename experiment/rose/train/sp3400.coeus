declare int bvor(int, int);
declare int bvand(int, int);

procedure f0() returns (int .ret_1)
{
  bool .local_2;
  int .local_3;
  int .local_4;
  bool .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  int .local_10;
  .local_3 = 5;
  .local_2 = false;
  .local_10 = .local_3;
  .local_4 = .local_3;
  .local_6 = 4;
  .local_7 = (- .local_3);
  for (.local_8 = 0 to 8)
  {
    .local_5 = .local_2;
    if (((! .local_5) || (.local_2 == .local_5)))
    {
      .local_9 = (.local_3 + (.local_3 + .local_3));
      .local_4 = (- (.local_7 * .local_10));
      .local_3 = .local_9;
      for (.local_10 = 0 to 0)
      {
        .local_6 = (- (bvor(0, .local_10) / (1 % .local_9)));
      }
    }
    else
    {
      if (.local_2)
      {
        .local_6 = -3;
      }
      else
      {
        .local_6 = 6;
        .local_4 = bvand((- .local_7), .local_3);
      }
    }
    .local_7 = (bvor(.local_3, .local_6) + bvand(.local_3, .local_4));
  }
  .local_3 = .local_7;
  .ret_1 = .local_3;
}

procedure f1() returns (int .ret_11)
{
  bool .local_12;
  int .local_13;
  int .local_14;
  bool .local_15;
  int .local_16;
  int .local_17;
  int .local_18;
  int .local_19;
  int .local_20;
  .local_13 = 5;
  .local_12 = false;
  .local_20 = .local_13;
  .local_14 = .local_13;
  .local_16 = 4;
  .local_17 = (- .local_13);
  for (.local_18 = 0 to 8)
  {
    .local_15 = .local_12;
    if (((! .local_15) || (.local_12 == .local_15)))
    {
      .local_19 = (.local_13 + (.local_13 + .local_13));
      .local_14 = (- (.local_17 * .local_20));
      .local_13 = .local_19;
      for (.local_20 = 0 to 0 step 2)
      {
        .local_16 = (- (bvor(0, .local_20) / (1 % .local_19)));
        if (((1 + .local_20) <= -1))
        {
          .local_16 = (- (bvor(0, (1 + .local_20)) / (1 % .local_19)));
        }
      }
    }
    else
    {
      if (.local_12)
      {
        .local_16 = -3;
      }
      else
      {
        .local_16 = 6;
        .local_14 = bvand((- .local_17), .local_13);
      }
    }
    .local_17 = (bvor(.local_13, .local_16) + bvand(.local_13, .local_14));
  }
  .local_13 = .local_17;
  .ret_11 = .local_13;
}

$lentry f0;
$rentry f1;

ensures (.ret_1 == .ret_11);

