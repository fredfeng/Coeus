declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0(bool .param_2) returns (int .ret_1)
{
  int .local_3;
  int .local_4;
  bool .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_3 = 64;
  .local_8 = bvor(.local_3, .local_3);
  .local_7 = ((- .local_3) - (1 + .local_3));
  .local_4 = -9;
  while (.param_2)
  {
    .local_6 = bvxor((.local_4 % .local_4), bvxor(.local_4, .local_3));
    .local_5 = (((.local_4 / 7) * .local_4) < -25);
    .local_8 = 0;
    while ((.local_8 < .local_7))
    {
      .local_9 = .local_3;
      while (.local_5)
      {
        .local_8 = 64;
        .local_4 = ((16 + .local_8) % (.local_9 - 1));
        .local_4 = ((.local_7 - .local_4) + .local_9);
      }
      .local_6 = (.local_9 + .local_8);
      .local_8 = (.local_8 + 1);
    }
    .local_7 = 0;
    while ((.local_7 < (- .local_4)))
    {
      .local_4 = (- (.local_6 * .local_6));
      .param_2 = (.param_2 != .param_2);
      .local_7 = (.local_7 + 1);
    }
    .local_3 = .local_4;
  }
  .ret_1 = .local_3;
}

procedure f1(bool .param_11) returns (int .ret_10)
{
  int .local_12;
  int .local_13;
  bool .local_14;
  int .local_15;
  int .local_16;
  int .local_17;
  int .local_18;
  .local_12 = 64;
  .local_17 = bvor(.local_12, .local_12);
  .local_16 = ((- .local_12) - (1 + .local_12));
  .local_13 = -9;
  while (.param_11)
  {
    .local_15 = bvxor((.local_13 % .local_13), bvxor(.local_13, .local_12));
    .local_14 = (((.local_13 / 7) * .local_13) < -25);
    .local_17 = 0;
    while ((.local_17 <= (.local_16 - 1)))
    {
      .local_18 = .local_12;
      while (.local_14)
      {
        .local_17 = 64;
        .local_13 = ((16 + .local_17) % (.local_18 - 1));
        .local_13 = ((.local_16 - .local_13) + .local_18);
      }
      .local_15 = (.local_18 + .local_17);
      .local_17 = (.local_17 + 1);
    }
    .local_16 = 0;
    while ((.local_16 <= (-1 - .local_13)))
    {
      .local_13 = (- (.local_15 * .local_15));
      .local_16 = (.local_16 + 1);
    }
    .local_16 = 0;
    while ((.local_16 <= (-1 - .local_13)))
    {
      .param_11 = (.param_11 != .param_11);
      .local_16 = (.local_16 + 1);
    }
    .local_12 = .local_13;
  }
  .ret_10 = .local_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_11);
ensures (.ret_1 == .ret_10);

