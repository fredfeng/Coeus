

procedure f0(bool .param_2, int .param_3, int .param_4, bool .param_5)
 returns (int .ret_1)
{
  int .local_6;
  bool .local_7;
  int .local_8;
  .local_6 = 3;
  .local_6 = (.param_3 * 32);
  for (.local_8 = 3 to 16)
  {
    .param_4 = .local_6;
  }
  while (.param_5)
  {
    if (((.local_6 + .param_4) == .local_6))
    {
      if ((.param_5 && .param_2))
      {
        .param_4 = 2;
      }
    }
    else
    {
      .local_7 = .param_2;
      while ((.param_4 < .local_6))
      {
        .param_5 = .local_7;
        .param_4 = 7;
      }
    }
    if (((64 / .param_3) != 3))
    {
      .local_6 = .param_3;
    }
    else
    {
      .local_6 = (((64 + .local_6) % .local_6) % ((.param_3 + .param_3) * .param_4));
    }
  }
  .ret_1 = .local_6;
}

procedure f1(bool .param_10, int .param_11, int .param_12, bool .param_13)
 returns (int .ret_9)
{
  int .local_14;
  bool .local_15;
  int .local_16;
  .local_14 = 3;
  .local_14 = (.param_11 * 32);
  for (.local_16 = 3 to 16 step 2)
  {
    .param_12 = .local_14;
    if (((1 + .local_16) <= 15))
    {
      .param_12 = .local_14;
    }
  }
  while (.param_13)
  {
    if (((.local_14 + .param_12) == .local_14))
    {
      if ((.param_13 && .param_10))
      {
        .param_12 = 2;
      }
    }
    else
    {
      .local_15 = .param_10;
      while ((.param_12 < .local_14))
      {
        .param_13 = .local_15;
        .param_12 = 7;
      }
    }
    if (((64 / .param_11) != 3))
    {
      .local_14 = .param_11;
    }
    else
    {
      .local_14 = (((64 + .local_14) % .local_14) % ((.param_11 + .param_11) * .param_12));
    }
  }
  .ret_9 = .local_14;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
requires (.param_4 == .param_12);
requires (.param_5 == .param_13);
ensures (.ret_1 == .ret_9);

