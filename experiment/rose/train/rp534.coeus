declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4, int .param_5) returns
 (int .ret_1)
{
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_9 = ((.param_2 * .param_2) - (.param_2 + .param_2));
  .local_7 = .param_2;
  .local_6 = .param_2;
  .param_4 = 0;
  while ((.param_4 < 0))
  {
    .local_8 = (.local_6 + .param_4);
    while ((.param_3 && .param_3))
    {
      
    }
    .local_9 = 64;
    while ((.local_9 > bvand(.param_5, .param_5)))
    {
      if ((.param_3 != .param_3))
      {
        .local_6 = (.local_9 + .param_5);
      }
      else
      {
        .param_4 = 8;
        .local_6 = 5;
      }
      .local_9 = (.local_9 - 1);
    }
    while (.param_3)
    {
      if (.param_3)
      {
        .local_6 = bvand(.local_8, .param_5);
      }
      else
      {
        .param_2 = 1;
        .local_6 = bvand((bvor(10, .local_7) - (3 - .param_5)),
         (.local_7 - (16 % .param_4)));
      }
    }
    .param_4 = (.param_4 + 1);
  }
  for (.local_7 = 0 to .param_2)
  {
    .param_2 = .local_6;
    .param_5 = 64;
  }
  .local_6 = .param_2;
  for (.param_5 = 0 to .param_2)
  {
    .param_2 = bvxor(.local_6, .param_5);
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_11, bool .param_12, int .param_13, int .param_14)
 returns (int .ret_10)
{
  int .local_15;
  int .local_16;
  int .local_17;
  int .local_18;
  .local_18 = ((.param_11 * .param_11) - (.param_11 + .param_11));
  .local_16 = .param_11;
  .local_15 = .param_11;
  .param_13 = 0;
  while ((.param_13 <= -1))
  {
    .local_17 = (.local_15 + .param_13);
    while ((.param_12 && .param_12))
    {
      
    }
    .local_18 = 64;
    while ((.local_18 >= (bvand(.param_14, .param_14) + 1)))
    {
      if ((.param_12 != .param_12))
      {
        .local_15 = (.local_18 + .param_14);
      }
      else
      {
        .param_13 = 8;
        .local_15 = 5;
      }
      .local_18 = (.local_18 - 1);
    }
    while (.param_12)
    {
      if (.param_12)
      {
        .local_15 = bvand(.local_17, .param_14);
      }
      else
      {
        .param_11 = 1;
        .local_15 = bvand((bvor(10, .local_16) - (3 - .param_14)),
         (.local_16 - (16 % .param_13)));
      }
    }
    .param_13 = (.param_13 + 1);
  }
  for (.local_16 = 0 to ((-1 + .param_11) + 1))
  {
    .param_11 = .local_15;
  }
  for (.local_16 = 0 to ((-1 + .param_11) + 1))
  {
    .param_14 = 64;
  }
  .local_15 = .param_11;
  for (.param_14 = 0 to ((-1 + .param_11) + 1))
  {
    .param_11 = bvxor(.local_15, .param_14);
  }
  .ret_10 = .param_11;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_11);
requires (.param_3 == .param_12);
requires (.param_4 == .param_13);
requires (.param_5 == .param_14);
ensures (.ret_1 == .ret_10);

