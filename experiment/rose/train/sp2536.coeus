declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  .local_5 = ((.param_2 * .param_4) % bvxor(0, .param_4));
  for (.param_4 = 2 to 64)
  {
    .local_5 = (bvor(.param_4, .param_2) / (.param_2 + 9));
    .param_2 = 0;
    .param_2 = ((.local_5 * .param_2) * (.param_4 * .local_5));
  }
  for (.local_5 = 0 to .param_2)
  {
    .param_4 = bvand(16, (- .local_5));
    if ((9 != .param_4))
    {
      .param_2 = .local_5;
    }
    else
    {
      while (.param_3)
      {
        .param_3 = (.param_3 != .param_3);
        .param_2 = .param_4;
      }
      .param_2 = bvor(.param_2, bvand(.param_4, (- .local_5)));
      .param_2 = ((- .param_2) / (bvor(4, .param_4) - (32 - .param_4)));
    }
  }
  .param_2 = (-69 + bvor(.param_2, .param_2));
  .ret_1 = .param_2;
}

procedure f1(int .param_7, bool .param_8, int .param_9) returns (int .ret_6)
{
  int .local_10;
  .local_10 = ((.param_7 * .param_9) % bvxor(0, .param_9));
  for (.param_9 = 2 to 64 step 2)
  {
    .local_10 = (bvor(.param_9, .param_7) / (.param_7 + 9));
    .param_7 = 0;
    .param_7 = ((.local_10 * .param_7) * (.param_9 * .local_10));
    if (((1 + .param_9) <= 63))
    {
      .local_10 = (bvor((1 + .param_9), .param_7) / (.param_7 + 9));
      .param_7 = 0;
      .param_7 = ((.local_10 * .param_7) * ((1 + .param_9) * .local_10));
    }
  }
  for (.local_10 = 0 to .param_7)
  {
    .param_9 = bvand(16, (- .local_10));
    if ((9 != .param_9))
    {
      .param_7 = .local_10;
    }
    else
    {
      while (.param_8)
      {
        .param_8 = (.param_8 != .param_8);
        .param_7 = .param_9;
      }
      .param_7 = bvor(.param_7, bvand(.param_9, (- .local_10)));
      .param_7 = ((- .param_7) / (bvor(4, .param_9) - (32 - .param_9)));
    }
  }
  .param_7 = (-69 + bvor(.param_7, .param_7));
  .ret_6 = .param_7;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_7);
requires (.param_3 == .param_8);
requires (.param_4 == .param_9);
ensures (.ret_1 == .ret_6);

