declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  int .local_6;
  int .local_7;
  for (.local_7 = 0 to 21)
  {
    .param_4 = .param_2;
  }
  for (.local_6 = 4 to 32)
  {
    .local_5 = bvor(-8, bvor(.param_2, .param_4));
    while (.param_3)
    {
      .param_2 = bvor((- .param_2), bvand(6, .local_5));
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, bool .param_10, int .param_11) returns
 (int .ret_8)
{
  int .local_12;
  int .local_13;
  int .local_14;
  for (.local_14 = 0 to 21 step 2)
  {
    .param_11 = .param_9;
    if (((1 + .local_14) <= 20))
    {
      .param_11 = .param_9;
    }
  }
  for (.local_13 = 4 to 32)
  {
    .local_12 = bvor(-8, bvor(.param_9, .param_11));
    while (.param_10)
    {
      .param_9 = bvor((- .param_9), bvand(6, .local_12));
    }
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

