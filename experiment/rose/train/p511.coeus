declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0() returns (int .ret_1)
{
  bool .local_2;
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_3 = 9;
  .local_2 = true;
  .local_4 = 2;
  .local_5 = .local_3;
  for (.local_6 = 4 to 8)
  {
    .local_7 = .local_3;
    for (.local_8 = 0 to (5 - .local_7))
    {
      .local_5 = (- bvxor(.local_5, 35));
    }
  }
  while (.local_2)
  {
    .local_6 = (bvor((.local_5 + .local_3), (32 + .local_5)) + 10);
    for (.local_8 = 1 to 4)
    {
      .local_3 = bvxor((.local_6 - 2), .local_4);
      if (.local_2)
      {
        .local_2 = (! .local_2);
      }
      else
      {
        .local_3 = (- .local_3);
      }
    }
  }
  .ret_1 = .local_3;
}

procedure f1() returns (int .ret_9)
{
  bool .local_10;
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_11 = 9;
  .local_10 = true;
  .local_12 = 2;
  .local_13 = .local_11;
  for (.local_14 = 4 to 8)
  {
    .local_15 = .local_11;
    for (.local_16 = 0 to ((4 - .local_15) + 1) step 2)
    {
      .local_13 = (- bvxor(.local_13, 35));
      if (((1 + .local_16) <= (4 - .local_15)))
      {
        .local_13 = (- bvxor(.local_13, 35));
      }
    }
    if ((.local_16 <= (4 - .local_15)))
    {
      .local_13 = (- bvxor(.local_13, 35));
      if (((1 + .local_16) <= (4 - .local_15)))
      {
        .local_13 = (- bvxor(.local_13, 35));
      }
    }
  }
  while (.local_10)
  {
    .local_14 = (bvor((.local_13 + .local_11), (32 + .local_13)) + 10);
    for (.local_16 = 1 to 4 step 2)
    {
      .local_11 = bvxor((.local_14 - 2), .local_12);
      if (.local_10)
      {
        .local_10 = (! .local_10);
      }
      else
      {
        .local_11 = (- .local_11);
      }
      if (((1 + .local_16) <= 3))
      {
        .local_11 = bvxor((.local_14 - 2), .local_12);
        if (.local_10)
        {
          .local_10 = (! .local_10);
        }
        else
        {
          .local_11 = (- .local_11);
        }
      }
    }
  }
  .ret_9 = .local_11;
}

$lentry f0;
$rentry f1;

ensures (.ret_1 == .ret_9);

