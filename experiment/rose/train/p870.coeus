declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(bool .param_2, int .param_3, int .param_4, int .param_5) returns
 (int .ret_1)
{
  int .local_6;
  int .local_7;
  .local_6 = 8;
  for (.local_7 = 0 to 4)
  {
    .local_6 = -5;
    if (.param_2)
    {
      if (.param_2)
      {
        .param_4 = bvand(.param_4, 7);
      }
      else
      {
        .local_6 = .param_3;
      }
    }
    else
    {
      .param_5 = (.param_4 / 4);
    }
  }
  .local_6 = bvor(((6 % .local_6) + (.param_5 % 8)), bvor(bvand(0, .param_4),
   .param_4));
  .ret_1 = .local_6;
}

procedure f1(bool .param_9, int .param_10, int .param_11, int .param_12)
 returns (int .ret_8)
{
  int .local_13;
  int .local_14;
  .local_13 = 8;
  for (.local_14 = 0 to 4 step 2)
  {
    .local_13 = -5;
    if (.param_9)
    {
      if (.param_9)
      {
        .param_11 = bvand(.param_11, 7);
      }
      else
      {
        .local_13 = .param_10;
      }
    }
    else
    {
      .param_12 = (.param_11 / 4);
    }
    if (((1 + .local_14) <= 3))
    {
      .local_13 = -5;
      if (.param_9)
      {
        if (.param_9)
        {
          .param_11 = bvand(.param_11, 7);
        }
        else
        {
          .local_13 = .param_10;
        }
      }
      else
      {
        .param_12 = (.param_11 / 4);
      }
    }
  }
  .local_13 = bvor(((6 % .local_13) + (.param_12 % 8)), bvor(bvand(0,
   .param_11), .param_11));
  .ret_8 = .local_13;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
requires (.param_5 == .param_12);
ensures (.ret_1 == .ret_8);

