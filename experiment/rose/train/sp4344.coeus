declare int bvor(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_4 = false;
  .local_9 = 7;
  .local_5 = 1;
  for (.local_7 = 0 to 5)
  {
    for (.local_9 = 0 to .local_5)
    {
      .param_2 = bvor(0, (.local_9 / 7));
      for (.param_3 = 2 to 2)
      {
        .local_5 = 0;
      }
    }
  }
  for (.local_6 = 0 to -10)
  {
    .local_8 = (.param_2 % bvor((- .local_5), .local_5));
    .param_2 = .local_8;
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_11, int .param_12) returns (int .ret_10)
{
  bool .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  int .local_17;
  int .local_18;
  .local_13 = false;
  .local_18 = 7;
  .local_14 = 1;
  for (.local_16 = 0 to 5)
  {
    for (.local_18 = 0 to .local_14)
    {
      .param_11 = bvor(0, (.local_18 / 7));
      for (.param_12 = 2 to 2 step 2)
      {
        .local_14 = 0;
        if (((1 + .param_12) <= 1))
        {
          .local_14 = 0;
        }
      }
    }
  }
  for (.local_15 = 0 to -10 step 2)
  {
    .local_17 = (.param_11 % bvor((- .local_14), .local_14));
    .param_11 = .local_17;
    if (((1 + .local_15) <= -11))
    {
      .local_17 = (.param_11 % bvor((- .local_14), .local_14));
      .param_11 = .local_17;
    }
  }
  .ret_10 = .param_11;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_11);
requires (.param_3 == .param_12);
ensures (.ret_1 == .ret_10);

