declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, int .param_3, int .param_4, bool .param_5) returns
 (int .ret_1)
{
  bool .local_6;
  int .local_7;
  int .local_8;
  .local_6 = false;
  .local_7 = .param_2;
  for (.local_7 = 2 to 4)
  {
    .param_2 = bvand(.param_2, .param_2);
    .param_5 = ((- .param_2) >= .local_7);
  }
  while (.param_5)
  {
    .param_4 = -5;
    while (.local_6)
    {
      
    }
    .param_5 = (.local_6 == (8 >= .param_3));
  }
  for (.param_3 = 0 to .param_4)
  {
    .local_7 = .param_3;
    .param_2 = (- bvand(bvor(.param_3, .local_7), -6));
    if (.local_6)
    {
      .local_8 = .local_7;
      for (.local_8 = (.local_7 - 64) to 9)
      {
        .param_4 = .local_7;
        .param_2 = (.param_4 + .local_8);
      }
    }
    else
    {
      .param_2 = bvand(.local_7, (- .param_2));
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_10, int .param_11, int .param_12, bool .param_13)
 returns (int .ret_9)
{
  bool .local_14;
  int .local_15;
  int .local_16;
  .local_14 = false;
  .local_15 = .param_10;
  for (.local_15 = 2 to 4 step 2)
  {
    .param_10 = bvand(.param_10, .param_10);
    .param_13 = ((- .param_10) >= .local_15);
    if (((1 + .local_15) <= 3))
    {
      .param_10 = bvand(.param_10, .param_10);
      .param_13 = ((- .param_10) >= (1 + .local_15));
    }
  }
  while (.param_13)
  {
    .param_12 = -5;
    while (.local_14)
    {
      
    }
    .param_13 = (.local_14 == (8 >= .param_11));
  }
  for (.param_11 = 0 to .param_12)
  {
    .local_15 = .param_11;
    .param_10 = (- bvand(bvor(.param_11, .local_15), -6));
    if (.local_14)
    {
      .local_16 = .local_15;
      for (.local_16 = (-64 + .local_15) to 9 step 2)
      {
        .param_12 = .local_15;
        .param_10 = (.param_12 + .local_16);
        if (((1 + .local_16) <= 8))
        {
          .param_12 = .local_15;
          .param_10 = (.param_12 + (1 + .local_16));
        }
      }
      if ((.local_16 <= 8))
      {
        .param_12 = .local_15;
        .param_10 = (.param_12 + .local_16);
        if (((1 + .local_16) <= 8))
        {
          .param_12 = .local_15;
          .param_10 = (.param_12 + (1 + .local_16));
        }
      }
    }
    else
    {
      .param_10 = bvand(.local_15, (- .param_10));
    }
  }
  .ret_9 = .param_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
requires (.param_4 == .param_12);
requires (.param_5 == .param_13);
ensures (.ret_1 == .ret_9);

