declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_5 = 1;
  .local_4 = false;
  .local_7 = (- .local_5);
  .local_6 = bvand((.local_5 + .local_5), (2 / .local_5));
  while ((.local_7 == .local_6))
  {
    .local_5 = 0;
    .param_3 = bvor(0, .local_7);
  }
  for (.local_7 = 0 to 11)
  {
    .param_2 = bvxor(((.param_2 / .local_6) + .local_6), 2);
    .param_3 = bvor(.param_2, 1);
  }
  .local_6 = .param_2;
  while (.local_4)
  {
    .param_3 = (.param_2 * (6 - .param_2));
    while (.local_4)
    {
      while (((.local_4 != .local_4) && .local_4))
      {
        .local_8 = .param_2;
        .param_3 = 2;
        .param_2 = bvxor(0, bvxor(.local_8, .local_6));
      }
    }
  }
  .local_5 = bvor(.param_2, 1);
  .ret_1 = .local_5;
}

procedure f1(int .param_10, int .param_11) returns (int .ret_9)
{
  bool .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_13 = 1;
  .local_12 = false;
  .local_15 = (- .local_13);
  .local_14 = bvand((.local_13 + .local_13), (2 / .local_13));
  while ((.local_15 == .local_14))
  {
    .local_13 = 0;
    .param_11 = bvor(0, .local_15);
  }
  for (.local_15 = 0 to 11 step 2)
  {
    .param_10 = bvxor(((.param_10 / .local_14) + .local_14), 2);
    .param_11 = bvor(.param_10, 1);
    if (((1 + .local_15) <= 10))
    {
      .param_10 = bvxor(((.param_10 / .local_14) + .local_14), 2);
      .param_11 = bvor(.param_10, 1);
    }
  }
  .local_14 = .param_10;
  while (.local_12)
  {
    .param_11 = (.param_10 * (6 - .param_10));
    while (.local_12)
    {
      while (((.local_12 != .local_12) && .local_12))
      {
        .local_16 = .param_10;
        .param_11 = 2;
        .param_10 = bvxor(0, bvxor(.local_16, .local_14));
      }
    }
  }
  .local_13 = bvor(.param_10, 1);
  .ret_9 = .local_13;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
ensures (.ret_1 == .ret_9);

