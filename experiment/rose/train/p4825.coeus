declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0(int .param_2, bool .param_3) returns (int .ret_1)
{
  int .local_4;
  bool .local_5;
  int .local_6;
  int .local_7;
  .local_6 = .param_2;
  .local_7 = .param_2;
  .local_4 = 0;
  .param_2 = bvor(2, (bvor(32, .local_7) % .local_7));
  for (.local_7 = 16 to 64)
  {
    .local_6 = ((.param_2 + 6) + ((.param_2 + 6) + ((.param_2 + 6) + ((.param_2 + 6) + ((.param_2 + 6) + ((.param_2 + 6) + (.param_2 + 6)))))));
  }
  .local_6 = 3;
  while ((.local_6 > 4))
  {
    .local_5 = .param_3;
    if (.param_3)
    {
      .local_4 = (.param_2 / .local_6);
      if (((0 > .local_4) || (.local_4 != .local_4)))
      {
        .local_6 = bvxor(bvxor(.param_2, .local_6), (.local_4 % 3));
        .param_2 = (.local_6 % .local_6);
      }
      else
      {
        .param_2 = (- bvor(1, .param_2));
      }
    }
    else
    {
      if ((.local_5 != .param_3))
      {
        .local_6 = .local_6;
        .param_2 = .local_6;
      }
      else
      {
        .param_2 = .local_4;
      }
    }
    .local_6 = (.local_6 - 1);
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, bool .param_10) returns (int .ret_8)
{
  int .local_11;
  bool .local_12;
  int .local_13;
  int .local_14;
  .local_13 = .param_9;
  .local_14 = .param_9;
  .local_11 = 0;
  .param_9 = bvor(2, (bvor(32, .local_14) % .local_14));
  for (.local_14 = 16 to 64 step 2)
  {
    .local_13 = ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + (.param_9 + 6)))))));
    if (((1 + .local_14) <= 63))
    {
      .local_13 = ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + ((.param_9 + 6) + (.param_9 + 6)))))));
    }
  }
  .local_13 = 3;
  while ((.local_13 >= 5))
  {
    .local_12 = .param_10;
    if (.param_10)
    {
      .local_11 = (.param_9 / .local_13);
      if (((0 > .local_11) || (.local_11 != .local_11)))
      {
        .local_13 = bvxor(bvxor(.param_9, .local_13), (.local_11 % 3));
        .param_9 = (.local_13 % .local_13);
      }
      else
      {
        .param_9 = (- bvor(1, .param_9));
      }
    }
    else
    {
      if ((.local_12 != .param_10))
      {
        .local_13 = .local_13;
        .param_9 = .local_13;
      }
      else
      {
        .param_9 = .local_11;
      }
    }
    .local_13 = (.local_13 - 1);
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
ensures (.ret_1 == .ret_8);

