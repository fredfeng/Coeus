declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  bool .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_6 = bvand(.param_2, (- .param_2));
  .param_2 = ((.local_6 + 1) * .local_6);
  for (.local_6 = 0 to 8)
  {
    .local_5 = .param_3;
    if (.local_5)
    {
      .local_8 = (- .param_4);
      .param_2 = (.local_8 + (.local_6 - .local_8));
    }
    else
    {
      if ((4 < .param_2))
      {
        .param_2 = .local_6;
      }
      else
      {
        .local_7 = (- (.local_6 + .param_2));
        .local_7 = (- ((.local_7 + .local_7) - .local_7));
        .param_2 = .local_7;
      }
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_10, bool .param_11, int .param_12) returns
 (int .ret_9)
{
  bool .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_14 = bvand(.param_10, (- .param_10));
  .param_10 = ((.local_14 + 1) * .local_14);
  for (.local_14 = 0 to 8 step 2)
  {
    .local_13 = .param_11;
    if (.local_13)
    {
      .local_16 = (- .param_12);
      .param_10 = (.local_16 + (.local_14 - .local_16));
    }
    else
    {
      if ((4 < .param_10))
      {
        .param_10 = .local_14;
      }
      else
      {
        .local_15 = (- (.local_14 + .param_10));
        .local_15 = (- ((.local_15 + .local_15) - .local_15));
        .param_10 = .local_15;
      }
    }
    if (((1 + .local_14) <= 7))
    {
      .local_13 = .param_11;
      if (.local_13)
      {
        .local_16 = (- .param_12);
        .param_10 = (.local_16 + ((1 + .local_14) - .local_16));
      }
      else
      {
        if ((4 < .param_10))
        {
          .param_10 = (1 + .local_14);
        }
        else
        {
          .local_15 = (- ((1 + .local_14) + .param_10));
          .local_15 = (- ((.local_15 + .local_15) - .local_15));
          .param_10 = .local_15;
        }
      }
    }
  }
  .ret_9 = .param_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
requires (.param_4 == .param_12);
ensures (.ret_1 == .ret_9);

