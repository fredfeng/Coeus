declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  int .local_6;
  .local_6 = 9;
  .local_5 = .local_6;
  for (.param_4 = 0 to (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + .param_2))))))
  {
    .param_2 = bvor((.param_4 * .param_4), .local_6);
    .local_5 = 0;
  }
  for (.local_6 = 0 to 288)
  {
    .param_2 = bvxor(0, .local_5);
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_8, bool .param_9, int .param_10) returns (int .ret_7)
{
  int .local_11;
  int .local_12;
  .local_12 = 9;
  .local_11 = .local_12;
  for (.param_10 = 0 to ((-1 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + .param_8)))))) + 1))
  {
    .param_8 = bvor((.param_10 * .param_10), .local_12);
  }
  for (.param_10 = 0 to ((-1 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + .param_8)))))) + 1))
  {
    .local_11 = 0;
  }
  for (.local_12 = 0 to 288)
  {
    .param_8 = bvxor(0, .local_11);
  }
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
requires (.param_3 == .param_9);
requires (.param_4 == .param_10);
ensures (.ret_1 == .ret_7);

