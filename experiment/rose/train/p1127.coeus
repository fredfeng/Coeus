declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(bool .param_2, int .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_4 = 1;
  .local_5 = 1;
  .local_5 = (bvor(.local_5, .param_3) + (7 - .local_5));
  .local_5 = (- (.param_3 + .local_4));
  if (.param_2)
  {
    .local_5 = ((.local_5 - 5) - (.param_3 * .local_5));
    while (.param_2)
    {
      .local_7 = .local_4;
      if (.param_2)
      {
        
      }
      else
      {
        .local_5 = 0;
      }
      .local_4 = (.local_4 - (.local_5 * .local_7));
    }
  }
  else
  {
    .local_6 = .local_4;
    while (.param_2)
    {
      .param_2 = (.param_2 != (.local_6 != .param_3));
      .param_2 = (.param_2 && .param_2);
    }
    for (.local_8 = 0 to 15)
    {
      .local_4 = ((- .local_4) - bvand(.param_3, .local_4));
      .local_5 = (bvxor(.local_4, 9) - .param_3);
      .local_4 = (- .local_5);
    }
  }
  .ret_1 = .local_4;
}

procedure f1(bool .param_10, int .param_11) returns (int .ret_9)
{
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_12 = 1;
  .local_13 = 1;
  .local_13 = (bvor(.local_13, .param_11) + (7 - .local_13));
  .local_13 = (- (.param_11 + .local_12));
  if (.param_10)
  {
    .local_13 = ((.local_13 - 5) - (.param_11 * .local_13));
    while (.param_10)
    {
      .local_15 = .local_12;
      if (.param_10)
      {
        
      }
      else
      {
        .local_13 = 0;
      }
      .local_12 = (.local_12 - (.local_13 * .local_15));
    }
  }
  else
  {
    .local_14 = .local_12;
    while (.param_10)
    {
      .param_10 = (.param_10 != (.local_14 != .param_11));
      .param_10 = (.param_10 && .param_10);
    }
    for (.local_16 = 0 to 15 step 2)
    {
      .local_12 = ((- .local_12) - bvand(.param_11, .local_12));
      .local_13 = (bvxor(.local_12, 9) - .param_11);
      .local_12 = (- .local_13);
      if (((1 + .local_16) <= 14))
      {
        .local_12 = ((- .local_12) - bvand(.param_11, .local_12));
        .local_13 = (bvxor(.local_12, 9) - .param_11);
        .local_12 = (- .local_13);
      }
    }
  }
  .ret_9 = .local_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
ensures (.ret_1 == .ret_9);

