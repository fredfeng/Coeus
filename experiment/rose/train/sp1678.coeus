declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(bool .param_2, int .param_3) returns (int .ret_1)
{
  int .local_4;
  bool .local_5;
  bool .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  int .local_10;
  .local_4 = 9;
  .local_7 = -6;
  .local_5 = (.local_4 == .local_4);
  for (.local_8 = 0 to .local_4)
  {
    .local_9 = -3;
    .local_6 = .local_5;
    .local_7 = bvand((.local_9 + .local_7), 32);
    while ((.local_5 != true))
    {
      .local_10 = bvor((.local_9 + (.local_9 + .local_9)), .local_4);
      if ((.local_4 > 32))
      {
        .local_5 = true;
      }
      else
      {
        .param_3 = bvxor(((.local_7 + .local_4) + .local_7),
         (.local_7 * bvor(1, .local_9)));
        .local_10 = -3;
      }
      .local_4 = .local_10;
    }
  }
  .local_4 = (- .local_4);
  for (.local_7 = 0 to 1)
  {
    .local_9 = bvor((- .local_4), -64);
    .local_4 = bvor(.param_3, (- (.local_9 - 2)));
    .local_4 = (.local_4 % .local_9);
  }
  .param_3 = 7;
  .local_4 = bvor(bvand((- .param_3), .param_3), bvor(14, bvand(.local_4,
   .param_3)));
  .ret_1 = .local_4;
}

procedure f1(bool .param_12, int .param_13) returns (int .ret_11)
{
  int .local_14;
  bool .local_15;
  bool .local_16;
  int .local_17;
  int .local_18;
  int .local_19;
  int .local_20;
  .local_14 = 9;
  .local_17 = -6;
  .local_15 = (.local_14 == .local_14);
  for (.local_18 = 0 to .local_14)
  {
    .local_19 = -3;
    .local_16 = .local_15;
    .local_17 = bvand((.local_19 + .local_17), 32);
    while ((.local_15 != true))
    {
      .local_20 = bvor((.local_19 + (.local_19 + .local_19)), .local_14);
      if ((.local_14 > 32))
      {
        .local_15 = true;
      }
      else
      {
        .param_13 = bvxor(((.local_17 + .local_14) + .local_17),
         (.local_17 * bvor(1, .local_19)));
        .local_20 = -3;
      }
      .local_14 = .local_20;
    }
  }
  .local_14 = (- .local_14);
  for (.local_17 = 0 to 1 step 2)
  {
    .local_19 = bvor((- .local_14), -64);
    .local_14 = bvor(.param_13, (- (.local_19 - 2)));
    .local_14 = (.local_14 % .local_19);
    if (((1 + .local_17) <= 0))
    {
      .local_19 = bvor((- .local_14), -64);
      .local_14 = bvor(.param_13, (- (.local_19 - 2)));
      .local_14 = (.local_14 % .local_19);
    }
  }
  .param_13 = 7;
  .local_14 = bvor(bvand((- .param_13), .param_13), bvor(14, bvand(.local_14,
   .param_13)));
  .ret_11 = .local_14;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_12);
requires (.param_3 == .param_13);
ensures (.ret_1 == .ret_11);

