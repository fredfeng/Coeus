declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4, int .param_5) returns
 (int .ret_1)
{
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_6 = .param_2;
  .param_4 = 0;
  while ((.param_4 < 0))
  {
    .local_7 = (bvand(64, .param_5) - (.param_4 * .local_6));
    .local_8 = .param_4;
    .param_4 = (- .local_7);
    if ((! .param_3))
    {
      while (.param_3)
      {
        .param_5 = -9;
      }
    }
    else
    {
      .local_9 = bvand(.param_5, .param_2);
      .local_7 = (- (9 + .local_6));
      if ((.local_6 == 7))
      {
        .param_4 = ((.param_2 * .local_7) * (.local_8 * .param_2));
      }
      else
      {
        .local_6 = .local_9;
        .param_2 = 16;
      }
    }
    .param_4 = (.param_4 + 1);
  }
  for (.param_5 = 64 downto 10)
  {
    .param_2 = bvor(.param_2, bvxor(bvand(7, .param_5), .local_6));
    .param_2 = (- (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + .param_2))))))))));
    for (.param_4 = 0 to -32)
    {
      .param_2 = (- .param_4);
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_11, bool .param_12, int .param_13, int .param_14)
 returns (int .ret_10)
{
  int .local_15;
  int .local_16;
  int .local_17;
  int .local_18;
  .local_15 = .param_11;
  .param_13 = 0;
  while ((.param_13 <= -1))
  {
    .local_16 = (bvand(64, .param_14) - (.param_13 * .local_15));
    .local_17 = .param_13;
    .param_13 = (- .local_16);
    if ((! .param_12))
    {
      while (.param_12)
      {
        .param_14 = -9;
      }
    }
    else
    {
      .local_18 = bvand(.param_14, .param_11);
      .local_16 = (- (9 + .local_15));
      if ((.local_15 == 7))
      {
        .param_13 = ((.param_11 * .local_16) * (.local_17 * .param_11));
      }
      else
      {
        .local_15 = .local_18;
        .param_11 = 16;
      }
    }
    .param_13 = (.param_13 + 1);
  }
  for (.param_14 = 64 downto 10)
  {
    .param_11 = bvor(.param_11, bvxor(bvand(7, .param_14), .local_15));
    .param_11 = (- (.param_11 + (.param_11 + (.param_11 + (.param_11 + (.param_11 + (.param_11 + (.param_11 + (.param_11 + (.param_11 + .param_11))))))))));
    for (.param_13 = 0 to -32 step 2)
    {
      .param_11 = (- .param_13);
      if (((1 + .param_13) <= -33))
      {
        .param_11 = (- (1 + .param_13));
      }
    }
  }
  .ret_10 = .param_11;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_11);
requires (.param_3 == .param_12);
requires (.param_4 == .param_13);
requires (.param_5 == .param_14);
ensures (.ret_1 == .ret_10);

