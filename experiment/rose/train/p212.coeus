declare int bvxor(int, int);
declare int bvor(int, int);

procedure f0(bool .param_2, int .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_4 = 10;
  .local_5 = .local_4;
  while ((.local_4 != .local_5))
  {
    .local_7 = 0;
    while ((.local_7 < (.param_3 % .local_5)))
    {
      .local_8 = (- (.param_3 + .param_3));
      .local_4 = .local_8;
      while (.param_2)
      {
        .local_4 = (- .local_8);
      }
      .local_7 = (.local_7 + 1);
    }
  }
  for (.param_3 = 0 to bvor(.local_5, .local_5))
  {
    .local_6 = .local_4;
    if ((! .param_2))
    {
      if (((.local_5 + .local_6) == (- .local_4)))
      {
        .local_6 = bvor(.local_6, 0);
      }
      else
      {
        .local_4 = .param_3;
        .local_6 = ((32 - .local_4) - .local_4);
        .local_5 = 2;
      }
      .local_5 = (.local_5 / .local_6);
    }
    else
    {
      for (.local_7 = 0 to -6)
      {
        .local_5 = (3 + (12 + bvxor(64, .local_6)));
      }
    }
    .local_4 = .local_5;
  }
  .ret_1 = .local_4;
}

procedure f1(bool .param_10, int .param_11) returns (int .ret_9)
{
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_12 = 10;
  .local_13 = .local_12;
  while ((.local_12 != .local_13))
  {
    .local_15 = 0;
    while ((.local_15 <= ((.param_11 % .local_13) - 1)))
    {
      .local_16 = (- (.param_11 + .param_11));
      .local_12 = .local_16;
      while (.param_10)
      {
        .local_12 = (- .local_16);
      }
      .local_15 = (.local_15 + 1);
    }
  }
  for (.param_11 = 0 to bvor(.local_13, .local_13))
  {
    .local_14 = .local_12;
    if ((! .param_10))
    {
      if (((.local_13 + .local_14) == (- .local_12)))
      {
        .local_14 = bvor(.local_14, 0);
      }
      else
      {
        .local_12 = .param_11;
        .local_14 = ((32 - .local_12) - .local_12);
        .local_13 = 2;
      }
      .local_13 = (.local_13 / .local_14);
    }
    else
    {
      for (.local_15 = 0 to -6 step 2)
      {
        .local_13 = (3 + (12 + bvxor(64, .local_14)));
        if (((1 + .local_15) <= -7))
        {
          .local_13 = (3 + (12 + bvxor(64, .local_14)));
        }
      }
    }
    .local_12 = .local_13;
  }
  .ret_9 = .local_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
ensures (.ret_1 == .ret_9);

