declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(bool .param_2, int .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  int .local_6;
  int .local_7;
  .local_5 = 2;
  while (.param_2)
  {
    .local_6 = (.local_5 - (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + .local_5))))))))));
    .local_7 = 0;
    while ((.local_7 < .param_3))
    {
      .local_6 = (.local_6 + 4);
      .param_2 = (! .param_2);
      .local_7 = (.local_7 + 1);
    }
    .param_3 = 0;
    while ((.param_3 < 3))
    {
      .param_4 = ((- .param_3) - .local_6);
      .param_3 = (.param_3 + 1);
    }
  }
  .local_5 = bvand(.local_5, (bvor(.param_4, .local_5) + bvor(.local_5,
   .local_5)));
  .ret_1 = .local_5;
}

procedure f1(bool .param_9, int .param_10, int .param_11) returns
 (int .ret_8)
{
  int .local_12;
  int .local_13;
  int .local_14;
  .local_12 = 2;
  while (.param_9)
  {
    .local_13 = (.local_12 - (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + .local_12))))))))));
    .local_14 = 0;
    while ((.local_14 <= (-1 + .param_10)))
    {
      .local_13 = (.local_13 + 4);
      .local_14 = (.local_14 + 1);
    }
    .local_14 = 0;
    while ((.local_14 <= (-1 + .param_10)))
    {
      .param_9 = (! .param_9);
      .local_14 = (.local_14 + 1);
    }
    .param_10 = 0;
    while ((.param_10 <= 2))
    {
      .param_11 = ((- .param_10) - .local_13);
      .param_10 = (.param_10 + 1);
    }
  }
  .local_12 = bvand(.local_12, (bvor(.param_11, .local_12) + bvor(.local_12,
   .local_12)));
  .ret_8 = .local_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

