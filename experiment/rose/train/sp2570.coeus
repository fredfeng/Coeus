declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_4 = false;
  .local_5 = ((- .param_2) / bvand(.param_2, .param_2));
  .local_7 = bvxor(0, .param_2);
  while (.param_3)
  {
    .local_7 = (.param_2 * (- (.param_2 % .param_2)));
  }
  .param_2 = .local_5;
  .param_2 = bvand((.local_5 + .param_2), .local_5);
  .local_5 = (- bvand(.local_5, 3));
  for (.local_5 = 0 to (8 - .param_2))
  {
    .local_6 = .param_2;
    if (((- .local_5) != (- .param_2)))
    {
      for (.local_7 = 5 to 3)
      {
        .local_6 = ((.local_6 + .param_2) + (.local_7 * 16));
        .param_2 = (- .local_6);
      }
    }
    else
    {
      .local_7 = -2;
      .local_6 = bvand(.local_6, bvor(.local_7, 5));
      .param_2 = .local_6;
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, bool .param_10) returns (int .ret_8)
{
  bool .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_11 = false;
  .local_12 = ((- .param_9) / bvand(.param_9, .param_9));
  .local_14 = bvxor(0, .param_9);
  while (.param_10)
  {
    .local_14 = (.param_9 * (- (.param_9 % .param_9)));
  }
  .param_9 = .local_12;
  .param_9 = bvand((.local_12 + .param_9), .local_12);
  .local_12 = (- bvand(.local_12, 3));
  for (.local_12 = 0 to (8 - .param_9))
  {
    .local_13 = .param_9;
    if (((- .local_12) != (- .param_9)))
    {
      for (.local_14 = 5 to 3 step 2)
      {
        .local_13 = ((.local_13 + .param_9) + (.local_14 * 16));
        .param_9 = (- .local_13);
        if (((1 + .local_14) <= 2))
        {
          .local_13 = ((.local_13 + .param_9) + ((1 + .local_14) * 16));
          .param_9 = (- .local_13);
        }
      }
    }
    else
    {
      .local_14 = -2;
      .local_13 = bvand(.local_13, bvor(.local_14, 5));
      .param_9 = .local_13;
    }
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
ensures (.ret_1 == .ret_8);

