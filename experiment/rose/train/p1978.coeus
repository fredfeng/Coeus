

procedure f0(int .param_2) returns (int .ret_1)
{
  bool .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  .local_3 = false;
  .local_4 = 2;
  for (.local_5 = 0 to 9)
  {
    .local_6 = (.param_2 - 6);
    for (.local_6 = 0 to 16)
    {
      .local_4 = (- (.local_4 * .local_6));
    }
  }
  .local_4 = (- (.local_4 % -2));
  .param_2 = (- (.local_4 + 6));
  .ret_1 = .param_2;
}

procedure f1(int .param_8) returns (int .ret_7)
{
  bool .local_9;
  int .local_10;
  int .local_11;
  int .local_12;
  .local_9 = false;
  .local_10 = 2;
  for (.local_11 = 0 to 9)
  {
    .local_12 = (.param_8 - 6);
    for (.local_12 = 0 to 16 step 2)
    {
      .local_10 = (- (.local_10 * .local_12));
      if (((1 + .local_12) <= 15))
      {
        .local_10 = (- (.local_10 * (1 + .local_12)));
      }
    }
  }
  .local_10 = (- (.local_10 % -2));
  .param_8 = (- (.local_10 + 6));
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
ensures (.ret_1 == .ret_7);

