declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_7 = (bvand(.param_2, .param_2) / (.param_2 + .param_2));
  .local_4 = (- .param_2);
  .local_5 = (.param_2 - 9);
  .local_6 = 3;
  .local_7 = ((.param_2 * .param_2) % bvor(.local_7, .local_6));
  .param_2 = .local_6;
  .local_7 = 0;
  while ((.local_7 < .local_6))
  {
    .local_8 = 0;
    while ((.local_8 < (.local_7 - .local_5)))
    {
      .local_7 = .param_2;
      if (((.param_3 != .param_3) || .param_3))
      {
        .param_2 = .local_5;
      }
      else
      {
        .param_2 = bvor(.param_2, .local_7);
      }
      .local_8 = (.local_8 + 1);
    }
    .local_4 = (- ((- .local_5) - .param_2));
    .local_7 = (.local_7 + 1);
  }
  .param_2 = .local_4;
  .ret_1 = .param_2;
}

procedure f1(int .param_10, bool .param_11) returns (int .ret_9)
{
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_15 = (bvand(.param_10, .param_10) / (.param_10 + .param_10));
  .local_12 = (- .param_10);
  .local_13 = (.param_10 - 9);
  .local_14 = 3;
  .local_15 = ((.param_10 * .param_10) % bvor(.local_15, .local_14));
  .param_10 = .local_14;
  .local_15 = 0;
  while ((.local_15 <= (-1 + .local_14)))
  {
    .local_16 = 0;
    while ((.local_16 <= ((.local_15 - .local_13) - 1)))
    {
      .local_15 = .param_10;
      .local_16 = (.local_16 + 1);
    }
    .local_16 = 0;
    while ((.local_16 <= ((.local_15 - .local_13) - 1)))
    {
      if (((.param_11 != .param_11) || .param_11))
      {
        .param_10 = .local_13;
      }
      else
      {
        .param_10 = bvor(.param_10, .local_15);
      }
      .local_16 = (.local_16 + 1);
    }
    .local_12 = (- ((- .local_13) - .param_10));
    .local_15 = (.local_15 + 1);
  }
  .param_10 = .local_12;
  .ret_9 = .param_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
ensures (.ret_1 == .ret_9);

