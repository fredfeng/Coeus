declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4, int .param_5) returns
 (int .ret_1)
{
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  int .local_10;
  int .local_11;
  int .local_12;
  .local_12 = bvor((- .param_2), (- .param_2));
  .local_7 = bvand(0, .param_2);
  .param_2 = (.param_5 / .param_2);
  .local_6 = .local_7;
  for (.param_4 = 0 to 10)
  {
    .local_8 = .param_2;
    for (.local_9 = 0 to .param_2)
    {
      .local_10 = (.local_8 / 3);
      .local_11 = bvxor(74, .param_4);
      for (.local_12 = 7 to 10)
      {
        .param_5 = (bvand(bvand(.local_10, 0),
         .local_12) * (- (.local_11 + .local_12)));
        .local_7 = -2;
      }
    }
    if (.param_3)
    {
      .local_9 = bvand(8, bvor(.param_5, .param_5));
      .local_10 = .param_2;
      if (.param_3)
      {
        .local_6 = 0;
      }
    }
    else
    {
      if (.param_3)
      {
        .local_6 = .param_4;
      }
      else
      {
        .local_6 = bvand(.local_7, 5);
      }
    }
  }
  .param_2 = .local_6;
  .param_2 = bvand(1, bvor(.param_2, 16));
  .ret_1 = .param_2;
}

procedure f1(int .param_14, bool .param_15, int .param_16, int .param_17)
 returns (int .ret_13)
{
  int .local_18;
  int .local_19;
  int .local_20;
  int .local_21;
  int .local_22;
  int .local_23;
  int .local_24;
  .local_24 = bvor((- .param_14), (- .param_14));
  .local_19 = bvand(0, .param_14);
  .param_14 = (.param_17 / .param_14);
  .local_18 = .local_19;
  for (.param_16 = 0 to 10)
  {
    .local_20 = .param_14;
    for (.local_21 = 0 to .param_14)
    {
      .local_22 = (.local_20 / 3);
      .local_23 = bvxor(74, .param_16);
      for (.local_24 = 7 to 10 step 2)
      {
        .param_17 = (bvand(bvand(.local_22, 0),
         .local_24) * (- (.local_23 + .local_24)));
        .local_19 = -2;
        if (((1 + .local_24) <= 9))
        {
          .param_17 = (bvand(bvand(.local_22, 0),
           (1 + .local_24)) * (- (.local_23 + (1 + .local_24))));
          .local_19 = -2;
        }
      }
    }
    if (.param_15)
    {
      .local_21 = bvand(8, bvor(.param_17, .param_17));
      .local_22 = .param_14;
      if (.param_15)
      {
        .local_18 = 0;
      }
    }
    else
    {
      if (.param_15)
      {
        .local_18 = .param_16;
      }
      else
      {
        .local_18 = bvand(.local_19, 5);
      }
    }
  }
  .param_14 = .local_18;
  .param_14 = bvand(1, bvor(.param_14, 16));
  .ret_13 = .param_14;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_14);
requires (.param_3 == .param_15);
requires (.param_4 == .param_16);
requires (.param_5 == .param_17);
ensures (.ret_1 == .ret_13);

