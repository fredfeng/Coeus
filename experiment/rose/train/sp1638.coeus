declare int bvor(int, int);

procedure f0(int .param_2, bool .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_4 = -64;
  .local_7 = .param_2;
  .local_6 = 2;
  for (.local_5 = 0 to 1)
  {
    for (.local_6 = 0 to 10)
    {
      for (.local_7 = 8 to 4)
      {
        .local_4 = .local_7;
      }
      .param_2 = bvor(.local_4, .local_6);
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, bool .param_10) returns (int .ret_8)
{
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_11 = -64;
  .local_14 = .param_9;
  .local_13 = 2;
  for (.local_12 = 0 to 1)
  {
    for (.local_13 = 0 to 10)
    {
      for (.local_14 = 8 to 4 step 2)
      {
        .local_11 = .local_14;
        if (((1 + .local_14) <= 3))
        {
          .local_11 = (1 + .local_14);
        }
      }
      .param_9 = bvor(.local_11, .local_13);
    }
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
ensures (.ret_1 == .ret_8);

