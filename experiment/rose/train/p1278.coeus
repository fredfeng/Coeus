declare int bvor(int, int);

procedure f0(bool .param_2, int .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  bool .local_6;
  int .local_7;
  int .local_8;
  .local_5 = 16;
  .local_6 = true;
  .local_7 = 0;
  while ((.local_7 < .param_4))
  {
    .local_7 = .param_4;
    while (.local_6)
    {
      while (((.local_6 && .param_2) || (1 == .local_7)))
      {
        .local_5 = .local_7;
      }
    }
    while (.param_2)
    {
      .param_2 = .local_6;
    }
    .local_7 = (.local_7 + 1);
  }
  for (.param_3 = 5 to 16)
  {
    .local_8 = .local_5;
    .param_4 = bvor((- .param_3), .local_8);
    .local_5 = .param_4;
  }
  .ret_1 = .local_5;
}

procedure f1(bool .param_10, int .param_11, int .param_12) returns
 (int .ret_9)
{
  int .local_13;
  bool .local_14;
  int .local_15;
  int .local_16;
  .local_13 = 16;
  .local_14 = true;
  .local_15 = 0;
  while ((.local_15 <= (.param_12 - 1)))
  {
    .local_15 = .param_12;
    while (.local_14)
    {
      while (((.local_14 && .param_10) || (1 == .local_15)))
      {
        .local_13 = .local_15;
      }
    }
    while (.param_10)
    {
      .param_10 = .local_14;
    }
    .local_15 = (.local_15 + 1);
  }
  for (.param_11 = 5 to 16 step 2)
  {
    .local_16 = .local_13;
    .param_12 = bvor((- .param_11), .local_16);
    .local_13 = .param_12;
    if (((1 + .param_11) <= 15))
    {
      .local_16 = .local_13;
      .param_12 = bvor((- (1 + .param_11)), .local_16);
      .local_13 = .param_12;
    }
  }
  .ret_9 = .local_13;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
requires (.param_4 == .param_12);
ensures (.ret_1 == .ret_9);

