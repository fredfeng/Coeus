declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(bool .param_2) returns (int .ret_1)
{
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_3 = 16;
  .local_7 = .local_3;
  .local_6 = .local_3;
  .local_4 = .local_3;
  .local_5 = (- (bvor(.local_3, 0) - bvand(.local_3, 3)));
  .local_3 = -5;
  for (.local_7 = 0 to 7)
  {
    .local_3 = 64;
    .local_5 = (bvand(.local_7, 9) % .local_6);
  }
  while (.param_2)
  {
    while (.param_2)
    {
      .local_5 = (.local_6 / .local_5);
    }
    for (.local_7 = 0 to (.local_4 + .local_3))
    {
      .local_3 = (8 - (.local_7 % .local_6));
    }
  }
  .local_6 = 3;
  while ((.local_6 > bvand(4, .local_3)))
  {
    .local_6 = 32;
    .local_3 = .local_6;
    .local_6 = (.local_6 - 1);
  }
  .local_3 = ((.local_3 - .local_5) % (- .local_3));
  .ret_1 = .local_3;
}

procedure f1(bool .param_9) returns (int .ret_8)
{
  int .local_10;
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_10 = 16;
  .local_14 = .local_10;
  .local_13 = .local_10;
  .local_11 = .local_10;
  .local_12 = (- (bvor(.local_10, 0) - bvand(.local_10, 3)));
  .local_10 = -5;
  for (.local_14 = 0 to 7 step 2)
  {
    .local_10 = 64;
    .local_12 = (bvand(.local_14, 9) % .local_13);
    if (((1 + .local_14) <= 6))
    {
      .local_10 = 64;
      .local_12 = (bvand((1 + .local_14), 9) % .local_13);
    }
  }
  while (.param_9)
  {
    while (.param_9)
    {
      .local_12 = (.local_13 / .local_12);
    }
    for (.local_14 = 0 to (.local_11 + .local_10) step 2)
    {
      .local_10 = (8 - (.local_14 % .local_13));
      if (((1 + .local_14) <= ((.local_11 + .local_10) - 1)))
      {
        .local_10 = (8 - ((1 + .local_14) % .local_13));
      }
    }
    if ((.local_14 <= ((.local_11 + .local_10) - 1)))
    {
      .local_10 = (8 - (.local_14 % .local_13));
      if (((1 + .local_14) <= ((.local_11 + .local_10) - 1)))
      {
        .local_10 = (8 - ((1 + .local_14) % .local_13));
      }
    }
  }
  .local_13 = 3;
  while ((.local_13 >= (bvand(4, .local_10) + 1)))
  {
    .local_13 = 32;
    .local_10 = .local_13;
    .local_13 = (.local_13 - 1);
  }
  .local_10 = ((.local_10 - .local_12) % (- .local_10));
  .ret_8 = .local_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
ensures (.ret_1 == .ret_8);

