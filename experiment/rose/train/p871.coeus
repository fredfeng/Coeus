declare int bvor(int, int);

procedure f0(int .param_2) returns (int .ret_1)
{
  bool .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_4 = 6;
  .local_3 = false;
  .local_5 = .local_4;
  .local_6 = (.local_5 + .local_5);
  for (.local_6 = 0 to 64)
  {
    .local_7 = (.local_5 + 4);
    if ((.local_3 != .local_3))
    {
      if (.local_3)
      {
        .local_8 = ((.param_2 - .local_6) - (7 / .local_7));
      }
      else
      {
        .local_8 = .local_4;
      }
    }
    else
    {
      .local_8 = (.local_4 * (- .local_4));
    }
    .local_4 = (- bvor(2, .local_8));
  }
  .ret_1 = .local_4;
}

procedure f1(int .param_10) returns (int .ret_9)
{
  bool .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_12 = 6;
  .local_11 = false;
  .local_13 = .local_12;
  .local_14 = (.local_13 + .local_13);
  for (.local_14 = 0 to 64 step 2)
  {
    .local_15 = (.local_13 + 4);
    if ((.local_11 != .local_11))
    {
      if (.local_11)
      {
        .local_16 = ((.param_10 - .local_14) - (7 / .local_15));
      }
      else
      {
        .local_16 = .local_12;
      }
    }
    else
    {
      .local_16 = (.local_12 * (- .local_12));
    }
    .local_12 = (- bvor(2, .local_16));
    if (((1 + .local_14) <= 63))
    {
      .local_15 = (.local_13 + 4);
      if ((.local_11 != .local_11))
      {
        if (.local_11)
        {
          .local_16 = ((.param_10 - (1 + .local_14)) - (7 / .local_15));
        }
        else
        {
          .local_16 = .local_12;
        }
      }
      else
      {
        .local_16 = (.local_12 * (- .local_12));
      }
      .local_12 = (- bvor(2, .local_16));
    }
  }
  .ret_9 = .local_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
ensures (.ret_1 == .ret_9);

