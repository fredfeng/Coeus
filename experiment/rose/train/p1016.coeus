declare int bvxor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, int .param_3, bool .param_4) returns (int .ret_1)
{
  bool .local_5;
  int .local_6;
  int .local_7;
  .local_5 = false;
  .local_6 = bvand(.param_2, 10);
  for (.param_3 = 0 to (6 + .local_6))
  {
    while (((! .param_4) && .param_4))
    {
      for (.local_7 = 0 to (.param_2 + 6))
      {
        
      }
    }
  }
  while (((- .local_6) != bvand(32, .param_2)))
  {
    for (.param_3 = 0 to 21)
    {
      .param_2 = ((.param_3 - .local_6) * (.param_3 + 1));
      .local_6 = bvxor(.param_2, .param_2);
    }
    if (.local_5)
    {
      if ((.param_2 != 64))
      {
        .local_6 = .param_2;
      }
      else
      {
        .param_2 = (.param_2 + 2);
      }
    }
    else
    {
      .local_6 = bvxor(bvxor(.local_6, .local_6), (.param_2 + 2));
      .param_2 = bvand((.local_6 % 1), .param_2);
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, int .param_10, bool .param_11) returns
 (int .ret_8)
{
  bool .local_12;
  int .local_13;
  int .local_14;
  .local_12 = false;
  .local_13 = bvand(.param_9, 10);
  for (.param_10 = 0 to (6 + .local_13))
  {
    while (((! .param_11) && .param_11))
    {
      for (.local_14 = 0 to (.param_9 + 6) step 2)
      {
        if (((1 + .local_14) <= (.param_9 + 5)))
        {
          
        }
      }
      if ((.local_14 <= (.param_9 + 5)))
      {
        if (((1 + .local_14) <= (.param_9 + 5)))
        {
          
        }
      }
    }
  }
  while (((- .local_13) != bvand(32, .param_9)))
  {
    for (.param_10 = 0 to 21 step 2)
    {
      .param_9 = ((.param_10 - .local_13) * (.param_10 + 1));
      .local_13 = bvxor(.param_9, .param_9);
      if (((1 + .param_10) <= 20))
      {
        .param_9 = (((1 + .param_10) - .local_13) * ((1 + .param_10) + 1));
        .local_13 = bvxor(.param_9, .param_9);
      }
    }
    if (.local_12)
    {
      if ((.param_9 != 64))
      {
        .local_13 = .param_9;
      }
      else
      {
        .param_9 = (.param_9 + 2);
      }
    }
    else
    {
      .local_13 = bvxor(bvxor(.local_13, .local_13), (.param_9 + 2));
      .param_9 = bvand((.local_13 % 1), .param_9);
    }
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

