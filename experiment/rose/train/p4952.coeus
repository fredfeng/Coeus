declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, bool .param_4) returns (int .ret_1)
{
  int .local_5;
  int .local_6;
  int .local_7;
  .local_6 = bvand(.param_2, .param_2);
  .local_5 = 4;
  for (.local_6 = 0 to (.param_2 * .local_5))
  {
    for (.local_7 = 6 to 8)
    {
      if (.param_4)
      {
        .local_5 = .param_2;
      }
      else
      {
        .param_2 = bvor(3, .param_2);
      }
    }
    if (.param_3)
    {
      .local_5 = bvand(.local_5, .local_6);
      .param_2 = 0;
    }
    else
    {
      .local_5 = (- .param_2);
    }
  }
  .local_5 = bvand(((- .local_5) / bvxor(6, .param_2)),
   ((.param_2 + 2) + .local_5));
  .param_2 = (- .local_5);
  .ret_1 = .param_2;
}

procedure f1(int .param_9, bool .param_10, bool .param_11) returns
 (int .ret_8)
{
  int .local_12;
  int .local_13;
  int .local_14;
  .local_13 = bvand(.param_9, .param_9);
  .local_12 = 4;
  for (.local_13 = 0 to (.param_9 * .local_12))
  {
    for (.local_14 = 6 to 8 step 2)
    {
      if (.param_11)
      {
        .local_12 = .param_9;
      }
      else
      {
        .param_9 = bvor(3, .param_9);
      }
      if (((1 + .local_14) <= 7))
      {
        if (.param_11)
        {
          .local_12 = .param_9;
        }
        else
        {
          .param_9 = bvor(3, .param_9);
        }
      }
    }
    if (.param_10)
    {
      .local_12 = bvand(.local_12, .local_13);
      .param_9 = 0;
    }
    else
    {
      .local_12 = (- .param_9);
    }
  }
  .local_12 = bvand(((- .local_12) / bvxor(6, .param_9)),
   ((.param_9 + 2) + .local_12));
  .param_9 = (- .local_12);
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

