declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_5 = 3;
  .local_4 = false;
  for (.param_2 = 0 to 16)
  {
    .local_6 = 5;
    for (.local_7 = 4 to 3)
    {
      if (.local_4)
      {
        .param_3 = 1;
        .local_6 = 66;
      }
    }
    while (.local_4)
    {
      for (.local_7 = 0 to -2)
      {
        .local_4 = ((.local_4 || .local_4) && (.local_4 != .local_4));
      }
      .param_3 = (bvand(.param_2, .local_6) * (.local_5 + 32));
    }
  }
  .local_5 = bvor(6, bvor(.param_3, 64));
  .ret_1 = .local_5;
}

procedure f1(int .param_9, int .param_10) returns (int .ret_8)
{
  bool .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_12 = 3;
  .local_11 = false;
  for (.param_9 = 0 to 16)
  {
    .local_13 = 5;
    for (.local_14 = 4 to 3 step 2)
    {
      if (.local_11)
      {
        .param_10 = 1;
        .local_13 = 66;
      }
      if (((1 + .local_14) <= 2))
      {
        if (.local_11)
        {
          .param_10 = 1;
          .local_13 = 66;
        }
      }
    }
    while (.local_11)
    {
      for (.local_14 = 0 to -2 step 2)
      {
        .local_11 = ((.local_11 || .local_11) && (.local_11 != .local_11));
        if (((1 + .local_14) <= -3))
        {
          .local_11 = ((.local_11 || .local_11) && (.local_11 != .local_11));
        }
      }
      .param_10 = (bvand(.param_9, .local_13) * (.local_12 + 32));
    }
  }
  .local_12 = bvor(6, bvor(.param_10, 64));
  .ret_8 = .local_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
ensures (.ret_1 == .ret_8);

