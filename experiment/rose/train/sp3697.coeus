declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, int .param_3, bool .param_4) returns (int .ret_1)
{
  bool .local_5;
  int .local_6;
  .local_5 = false;
  while (.local_5)
  {
    .local_6 = bvor((.param_2 + .param_2),
     (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + .param_2))))))))));
    if (.param_4)
    {
      .local_6 = (.param_2 + bvor(.local_6, 8));
    }
    else
    {
      if ((5 == .param_2))
      {
        .local_6 = (- .local_6);
      }
      else
      {
        .local_6 = (- (.local_6 % 6));
        .param_2 = 7;
      }
      .param_2 = bvand((16 * .param_2), .local_6);
    }
    .param_3 = bvor((2 % .param_2), 1);
  }
  if (.local_5)
  {
    .param_2 = (9 / (- .param_2));
  }
  else
  {
    .local_6 = 0;
    for (.param_3 = 0 to 64)
    {
      if (((16 / .param_2) >= (- .local_6)))
      {
        .param_2 = bvor(.param_2, 0);
      }
      else
      {
        .param_2 = .param_3;
      }
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_8, int .param_9, bool .param_10) returns (int .ret_7)
{
  bool .local_11;
  int .local_12;
  .local_11 = false;
  while (.local_11)
  {
    .local_12 = bvor((.param_8 + .param_8),
     (.param_8 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + (.param_8 + .param_8))))))))));
    if (.param_10)
    {
      .local_12 = (.param_8 + bvor(.local_12, 8));
    }
    else
    {
      if ((5 == .param_8))
      {
        .local_12 = (- .local_12);
      }
      else
      {
        .local_12 = (- (.local_12 % 6));
        .param_8 = 7;
      }
      .param_8 = bvand((16 * .param_8), .local_12);
    }
    .param_9 = bvor((2 % .param_8), 1);
  }
  if (.local_11)
  {
    .param_8 = (9 / (- .param_8));
  }
  else
  {
    .local_12 = 0;
    for (.param_9 = 0 to 64 step 2)
    {
      if (((16 / .param_8) >= (- .local_12)))
      {
        .param_8 = bvor(.param_8, 0);
      }
      else
      {
        .param_8 = .param_9;
      }
      if (((1 + .param_9) <= 63))
      {
        if (((16 / .param_8) >= (- .local_12)))
        {
          .param_8 = bvor(.param_8, 0);
        }
        else
        {
          .param_8 = (1 + .param_9);
        }
      }
    }
  }
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
requires (.param_3 == .param_9);
requires (.param_4 == .param_10);
ensures (.ret_1 == .ret_7);

