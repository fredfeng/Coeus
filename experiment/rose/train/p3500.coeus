declare int bvxor(int, int);

procedure f0(bool .param_2, int .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_4 = 6;
  .local_6 = 8;
  .local_5 = .local_4;
  while ((-64 != .param_3))
  {
    .local_6 = 0;
    while ((.local_6 < (.param_3 + .local_5)))
    {
      .local_7 = .local_6;
      .param_3 = .local_7;
      .local_6 = (.local_6 + 1);
    }
    while (.param_2)
    {
      .local_5 = 7;
    }
  }
  for (.param_3 = 0 to 9)
  {
    .local_4 = bvxor(.local_5, .param_3);
  }
  .ret_1 = .local_4;
}

procedure f1(bool .param_9, int .param_10) returns (int .ret_8)
{
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_11 = 6;
  .local_13 = 8;
  .local_12 = .local_11;
  while ((-64 != .param_10))
  {
    .local_13 = 0;
    while ((.local_13 <= ((.param_10 + .local_12) - 1)))
    {
      .local_14 = .local_13;
      .param_10 = .local_14;
      if (((1 + .local_13) <= ((.param_10 + .local_12) - 1)))
      {
        .local_14 = (1 + .local_13);
        .param_10 = .local_14;
      }
      .local_13 = (.local_13 + 2);
    }
    if ((.local_13 <= ((.param_10 + .local_12) - 1)))
    {
      .local_14 = .local_13;
      .param_10 = .local_14;
      if (((1 + .local_13) <= ((.param_10 + .local_12) - 1)))
      {
        .local_14 = (1 + .local_13);
        .param_10 = .local_14;
      }
    }
    while (.param_9)
    {
      .local_12 = 7;
    }
  }
  for (.param_10 = 0 to 9 step 2)
  {
    .local_11 = bvxor(.local_12, .param_10);
    if (((1 + .param_10) <= 8))
    {
      .local_11 = bvxor(.local_12, (1 + .param_10));
    }
  }
  .ret_8 = .local_11;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
ensures (.ret_1 == .ret_8);

