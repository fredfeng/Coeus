declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2) returns (int .ret_1)
{
  bool .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_3 = false;
  .local_6 = (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + (.param_2 + .param_2)))))));
  .local_4 = bvor(bvor(.param_2, .param_2), (.param_2 + .param_2));
  .local_5 = 1;
  .param_2 = ((.local_6 / .param_2) % .param_2);
  for (.local_6 = 0 to .local_4)
  {
    while (((.local_6 + 5) == bvxor(.local_5, 1)))
    {
      .local_5 = ((- .local_4) % ((.local_5 - .param_2) + 4));
    }
    .local_8 = 6;
    if ((.local_5 == .local_4))
    {
      .local_7 = bvor(5, bvand(.local_6, .param_2));
      if (.local_3)
      {
        .local_7 = 0;
        .param_2 = ((.local_7 % .local_4) + .local_6);
      }
      else
      {
        .local_5 = ((- .local_6) + bvor(.local_6, 5));
        .param_2 = bvor((.local_4 + (.local_4 + (.local_4 + (.local_4 + (.local_4 + (.local_4 + .local_4)))))),
         (8 / .local_5));
      }
    }
    else
    {
      for (.local_8 = 0 to 8)
      {
        .local_7 = .local_8;
        .param_2 = (- bvor(.local_7, (.local_4 / 3)));
      }
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_10) returns (int .ret_9)
{
  bool .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_11 = false;
  .local_14 = (.param_10 + (.param_10 + (.param_10 + (.param_10 + (.param_10 + (.param_10 + (.param_10 + .param_10)))))));
  .local_12 = bvor(bvor(.param_10, .param_10), (.param_10 + .param_10));
  .local_13 = 1;
  .param_10 = ((.local_14 / .param_10) % .param_10);
  for (.local_14 = 0 to .local_12)
  {
    while (((.local_14 + 5) == bvxor(.local_13, 1)))
    {
      .local_13 = ((- .local_12) % ((.local_13 - .param_10) + 4));
    }
    .local_16 = 6;
    if ((.local_13 == .local_12))
    {
      .local_15 = bvor(5, bvand(.local_14, .param_10));
      if (.local_11)
      {
        .local_15 = 0;
        .param_10 = ((.local_15 % .local_12) + .local_14);
      }
      else
      {
        .local_13 = ((- .local_14) + bvor(.local_14, 5));
        .param_10 = bvor((.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + .local_12)))))),
         (8 / .local_13));
      }
    }
    else
    {
      for (.local_16 = 0 to 8 step 2)
      {
        .local_15 = .local_16;
        .param_10 = (- bvor(.local_15, (.local_12 / 3)));
        if (((1 + .local_16) <= 7))
        {
          .local_15 = (1 + .local_16);
          .param_10 = (- bvor(.local_15, (.local_12 / 3)));
        }
      }
    }
  }
  .ret_9 = .param_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
ensures (.ret_1 == .ret_9);

