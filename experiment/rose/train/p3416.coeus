declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  .local_4 = false;
  .local_5 = (((.param_2 % .param_2) % (.param_2 * .param_2)) / bvor((.param_2 + .param_2),
   .param_2));
  if ((0 > .local_5))
  {
    .local_5 = (- .param_2);
  }
  else
  {
    .local_6 = bvxor(bvxor((- .local_5), .param_2),
     ((.param_2 * .local_5) + .local_5));
    .param_2 = -4;
    for (.param_3 = 0 to 6)
    {
      if (.local_4)
      {
        .local_5 = ((bvand(.param_2,
         .local_6) - (.local_6 + (.local_6 + .local_6))) + (.param_3 - 3));
      }
      else
      {
        .local_5 = .param_2;
        .local_5 = (18 % (- .local_5));
      }
    }
  }
  .param_2 = .local_5;
  .ret_1 = .param_2;
}

procedure f1(int .param_8, int .param_9) returns (int .ret_7)
{
  bool .local_10;
  int .local_11;
  int .local_12;
  .local_10 = false;
  .local_11 = (((.param_8 % .param_8) % (.param_8 * .param_8)) / bvor((.param_8 + .param_8),
   .param_8));
  if ((0 > .local_11))
  {
    .local_11 = (- .param_8);
  }
  else
  {
    .local_12 = bvxor(bvxor((- .local_11), .param_8),
     ((.param_8 * .local_11) + .local_11));
    .param_8 = -4;
    for (.param_9 = 0 to 6 step 2)
    {
      if (.local_10)
      {
        .local_11 = ((bvand(.param_8,
         .local_12) - (.local_12 + (.local_12 + .local_12))) + (.param_9 - 3));
      }
      else
      {
        .local_11 = .param_8;
        .local_11 = (18 % (- .local_11));
      }
      if (((1 + .param_9) <= 5))
      {
        if (.local_10)
        {
          .local_11 = ((bvand(.param_8,
           .local_12) - (.local_12 + (.local_12 + .local_12))) + ((1 + .param_9) - 3));
        }
        else
        {
          .local_11 = .param_8;
          .local_11 = (18 % (- .local_11));
        }
      }
    }
  }
  .param_8 = .local_11;
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
requires (.param_3 == .param_9);
ensures (.ret_1 == .ret_7);

