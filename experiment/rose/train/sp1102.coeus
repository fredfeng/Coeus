declare int bvand(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_4 = true;
  for (.local_6 = 0 to 0)
  {
    .param_3 = 4;
  }
  for (.local_5 = 4 downto 1)
  {
    for (.param_3 = 0 to 32)
    {
      .local_7 = .param_3;
      .param_2 = .local_7;
    }
  }
  .param_2 = bvand((- .param_2), 1);
  .ret_1 = .param_2;
}

procedure f1(int .param_9, int .param_10) returns (int .ret_8)
{
  bool .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_11 = true;
  for (.local_13 = 0 to 0 step 2)
  {
    .param_10 = 4;
    if (((1 + .local_13) <= -1))
    {
      .param_10 = 4;
    }
  }
  for (.local_12 = 4 downto 1)
  {
    for (.param_10 = 0 to 32 step 2)
    {
      .local_14 = .param_10;
      .param_9 = .local_14;
      if (((1 + .param_10) <= 31))
      {
        .local_14 = (1 + .param_10);
        .param_9 = .local_14;
      }
    }
  }
  .param_9 = bvand((- .param_9), 1);
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
ensures (.ret_1 == .ret_8);

