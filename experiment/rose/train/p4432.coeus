declare int bvor(int, int);
declare int bvand(int, int);

procedure f0() returns (int .ret_1)
{
  bool .local_2;
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_3 = 7;
  .local_2 = false;
  .local_5 = (.local_3 * (- .local_3));
  .local_4 = 6;
  for (.local_5 = 0 to (.local_3 + .local_4))
  {
    .local_6 = (bvand(.local_5, .local_5) + bvor(.local_3, 6));
    for (.local_8 = 0 to 0)
    {
      .local_4 = 3;
    }
    for (.local_7 = 64 to 32)
    {
      .local_4 = .local_5;
      .local_6 = .local_5;
    }
    while ((1 == .local_6))
    {
      .local_3 = .local_4;
    }
  }
  .local_4 = .local_3;
  .local_3 = .local_4;
  .ret_1 = .local_3;
}

procedure f1() returns (int .ret_9)
{
  bool .local_10;
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_11 = 7;
  .local_10 = false;
  .local_13 = (.local_11 * (- .local_11));
  .local_12 = 6;
  for (.local_13 = 0 to (.local_11 + .local_12))
  {
    .local_14 = (bvand(.local_13, .local_13) + bvor(.local_11, 6));
    for (.local_16 = 0 to 0 step 2)
    {
      .local_12 = 3;
      if (((1 + .local_16) <= -1))
      {
        .local_12 = 3;
      }
    }
    for (.local_15 = 64 to 32 step 2)
    {
      .local_12 = .local_13;
      .local_14 = .local_13;
      if (((1 + .local_15) <= 31))
      {
        .local_12 = .local_13;
        .local_14 = .local_13;
      }
    }
    while ((1 == .local_14))
    {
      .local_11 = .local_12;
    }
  }
  .local_12 = .local_11;
  .local_11 = .local_12;
  .ret_9 = .local_11;
}

$lentry f0;
$rentry f1;

ensures (.ret_1 == .ret_9);

