declare int bvxor(int, int);
declare int bvand(int, int);

procedure f0(bool .param_2) returns (int .ret_1)
{
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_3 = 1;
  .local_5 = (.local_3 * (- .local_3));
  .local_4 = ((- .local_3) - bvxor(.local_3, .local_3));
  for (.local_6 = 0 to (.local_4 * .local_5))
  {
    .local_7 = (- (.local_3 - (.local_5 * .local_4)));
    for (.local_7 = 16 to 64)
    {
      for (.local_8 = 0 to .local_5)
      {
        .local_5 = 2;
      }
      .local_4 = (- bvand((.local_7 - 2), -32));
    }
  }
  .local_5 = 0;
  while ((.local_5 < .local_4))
  {
    if ((.param_2 != (.param_2 == false)))
    {
      .local_6 = .local_4;
      if (.param_2)
      {
        .local_4 = (bvxor(16, bvxor(.local_3,
         .local_6)) % (- (9 - .local_5)));
        .local_5 = (- (.local_6 + .local_5));
      }
      else
      {
        .local_6 = (- ((.local_4 % .local_4) * .local_4));
        .local_3 = (.local_5 + 2);
      }
      if (.param_2)
      {
        .local_3 = bvxor(bvand((.local_4 * .local_5), 0),
         (.local_4 * (.local_3 * .local_4)));
      }
      else
      {
        .local_3 = (.local_6 + .local_6);
      }
    }
    else
    {
      .local_3 = (.local_4 / 7);
    }
    .local_5 = (.local_5 + 1);
  }
  .ret_1 = .local_3;
}

procedure f1(bool .param_10) returns (int .ret_9)
{
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_11 = 1;
  .local_13 = (.local_11 * (- .local_11));
  .local_12 = ((- .local_11) - bvxor(.local_11, .local_11));
  for (.local_14 = 0 to ((-1 + (.local_12 * .local_13)) + 1))
  {
    .local_15 = (- (.local_11 - (.local_13 * .local_12)));
    for (.local_15 = 16 to 64)
    {
      for (.local_16 = 0 to ((-1 + .local_13) + 1))
      {
        .local_13 = 2;
      }
    }
    for (.local_15 = 16 to 64)
    {
      .local_12 = (- bvand((.local_15 - 2), -32));
    }
  }
  .local_13 = 0;
  while ((.local_13 <= (-1 + .local_12)))
  {
    if ((.param_10 != (.param_10 == false)))
    {
      .local_14 = .local_12;
      if (.param_10)
      {
        .local_12 = (bvxor(16, bvxor(.local_11,
         .local_14)) % (- (9 - .local_13)));
        .local_13 = (- (.local_14 + .local_13));
      }
      else
      {
        .local_14 = (- ((.local_12 % .local_12) * .local_12));
        .local_11 = (.local_13 + 2);
      }
      if (.param_10)
      {
        .local_11 = bvxor(bvand((.local_12 * .local_13), 0),
         (.local_12 * (.local_11 * .local_12)));
      }
      else
      {
        .local_11 = (.local_14 + .local_14);
      }
    }
    else
    {
      .local_11 = (.local_12 / 7);
    }
    .local_13 = (.local_13 + 1);
  }
  .ret_9 = .local_11;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
ensures (.ret_1 == .ret_9);

