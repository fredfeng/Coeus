

procedure f0(int .param_2, bool .param_3) returns (int .ret_1)
{
  int .local_4;
  bool .local_5;
  bool .local_6;
  int .local_7;
  int .local_8;
  .local_7 = (2 - (5 / .param_2));
  .local_4 = .param_2;
  .local_5 = .param_3;
  .local_6 = .param_3;
  .local_7 = 0;
  while ((.local_7 < (.param_2 + .local_4)))
  {
    while (.local_6)
    {
      .local_8 = 0;
      while ((.local_8 < (.local_7 * .local_4)))
      {
        .local_7 = (- .param_2);
        .local_5 = .param_3;
        .local_8 = (.local_8 + 1);
      }
      if (.local_6)
      {
        .param_2 = (.local_7 % .param_2);
        .local_6 = ((! .local_5) == ((.local_6 && .local_5) == .param_3));
      }
      else
      {
        .param_2 = (- (.local_4 + .local_4));
      }
    }
    .local_7 = (.local_7 + 1);
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_10, bool .param_11) returns (int .ret_9)
{
  int .local_12;
  bool .local_13;
  bool .local_14;
  int .local_15;
  int .local_16;
  .local_15 = (2 - (5 / .param_10));
  .local_12 = .param_10;
  .local_13 = .param_11;
  .local_14 = .param_11;
  .local_15 = 0;
  while ((.local_15 <= ((.param_10 + .local_12) - 1)))
  {
    while (.local_14)
    {
      .local_16 = 0;
      while ((.local_16 <= (-1 + (.local_15 * .local_12))))
      {
        .local_15 = (- .param_10);
        .local_16 = (.local_16 + 1);
      }
      .local_16 = 0;
      while ((.local_16 <= (-1 + (.local_15 * .local_12))))
      {
        .local_13 = .param_11;
        .local_16 = (.local_16 + 1);
      }
      if (.local_14)
      {
        .param_10 = (.local_15 % .param_10);
        .local_14 = ((! .local_13) == ((.local_14 && .local_13) == .param_11));
      }
      else
      {
        .param_10 = (- (.local_12 + .local_12));
      }
    }
    .local_15 = (.local_15 + 1);
  }
  .ret_9 = .param_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
ensures (.ret_1 == .ret_9);

