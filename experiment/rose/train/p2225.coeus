declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2) returns (int .ret_1)
{
  int .local_3;
  bool .local_4;
  int .local_5;
  int .local_6;
  .local_3 = 5;
  .local_4 = true;
  while ((.local_4 == (3 > .local_3)))
  {
    .local_3 = (.param_2 + 8);
  }
  while (((.local_3 % .local_3) != .local_3))
  {
    .local_5 = .param_2;
    .local_3 = (bvor(.param_2, .param_2) * .local_3);
    if (.local_4)
    {
      for (.local_6 = 0 to 10)
      {
        .local_5 = (- (bvand(6, .param_2) + bvor(.local_3, .param_2)));
      }
      .local_3 = (18 - .local_5);
    }
    else
    {
      .local_3 = 1;
    }
    .local_3 = (1 - .local_3);
  }
  .ret_1 = .local_3;
}

procedure f1(int .param_8) returns (int .ret_7)
{
  int .local_9;
  bool .local_10;
  int .local_11;
  int .local_12;
  .local_9 = 5;
  .local_10 = true;
  while ((.local_10 == (3 > .local_9)))
  {
    .local_9 = (.param_8 + 8);
  }
  while (((.local_9 % .local_9) != .local_9))
  {
    .local_11 = .param_8;
    .local_9 = (bvor(.param_8, .param_8) * .local_9);
    if (.local_10)
    {
      for (.local_12 = 0 to 10 step 2)
      {
        .local_11 = (- (bvand(6, .param_8) + bvor(.local_9, .param_8)));
        if (((1 + .local_12) <= 9))
        {
          .local_11 = (- (bvand(6, .param_8) + bvor(.local_9, .param_8)));
        }
      }
      .local_9 = (18 - .local_11);
    }
    else
    {
      .local_9 = 1;
    }
    .local_9 = (1 - .local_9);
  }
  .ret_7 = .local_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
ensures (.ret_1 == .ret_7);

