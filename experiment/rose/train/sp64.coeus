declare int bvor(int, int);

procedure f0(int .param_2) returns (int .ret_1)
{
  bool .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  .local_3 = true;
  .param_2 = (- .param_2);
  for (.local_4 = 0 to bvor(1, .param_2))
  {
    for (.local_6 = 2 to 32)
    {
      .local_5 = (- (.param_2 - 2));
      .param_2 = .local_5;
    }
    .param_2 = ((- .param_2) % 64);
  }
  .param_2 = (- .param_2);
  .ret_1 = .param_2;
}

procedure f1(int .param_8) returns (int .ret_7)
{
  bool .local_9;
  int .local_10;
  int .local_11;
  int .local_12;
  .local_9 = true;
  .param_8 = (- .param_8);
  for (.local_10 = 0 to bvor(1, .param_8))
  {
    for (.local_12 = 2 to 32 step 2)
    {
      .local_11 = (- (.param_8 - 2));
      .param_8 = .local_11;
      if (((1 + .local_12) <= 31))
      {
        .local_11 = (- (.param_8 - 2));
        .param_8 = .local_11;
      }
    }
    .param_8 = ((- .param_8) % 64);
  }
  .param_8 = (- .param_8);
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
ensures (.ret_1 == .ret_7);

