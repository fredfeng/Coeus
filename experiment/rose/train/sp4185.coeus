declare int bvor(int, int);

procedure f0(int .param_2, int .param_3, int .param_4) returns (int .ret_1)
{
  bool .local_5;
  int .local_6;
  int .local_7;
  .local_5 = true;
  for (.local_6 = 0 to (.param_4 - 3))
  {
    .param_3 = 4;
    for (.local_7 = 0 to 4)
    {
      .param_4 = (.param_3 + (.param_3 % .param_4));
      .param_3 = .param_2;
    }
  }
  .param_2 = (bvor(.param_4, .param_3) + .param_4);
  if ((.local_5 || .local_5))
  {
    .param_2 = .param_4;
  }
  else
  {
    while ((! .local_5))
    {
      .param_3 = (- .param_4);
      if ((! .local_5))
      {
        .param_2 = .param_3;
      }
      else
      {
        .param_2 = .param_2;
      }
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, int .param_10, int .param_11) returns (int .ret_8)
{
  bool .local_12;
  int .local_13;
  int .local_14;
  .local_12 = true;
  for (.local_13 = 0 to (.param_11 - 3))
  {
    .param_10 = 4;
    for (.local_14 = 0 to 4 step 2)
    {
      .param_11 = (.param_10 + (.param_10 % .param_11));
      .param_10 = .param_9;
      if (((1 + .local_14) <= 3))
      {
        .param_11 = (.param_10 + (.param_10 % .param_11));
        .param_10 = .param_9;
      }
    }
  }
  .param_9 = (bvor(.param_11, .param_10) + .param_11);
  if ((.local_12 || .local_12))
  {
    .param_9 = .param_11;
  }
  else
  {
    while ((! .local_12))
    {
      .param_10 = (- .param_11);
      if ((! .local_12))
      {
        .param_9 = .param_10;
      }
      else
      {
        .param_9 = .param_9;
      }
    }
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

