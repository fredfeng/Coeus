declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4, int .param_5,
             int .param_6, int .param_7)
 returns (int .ret_1)
{
  int .local_8;
  int .local_9;
  int .local_10;
  .local_9 = .param_2;
  for (.param_4 = 0 to bvand(.param_7, .param_2))
  {
    .local_8 = (bvand(.param_4,
     (.param_5 - 10)) + ((.param_7 + 64) - (.param_6 * .param_6)));
    for (.local_9 = 1 to 2)
    {
      .local_10 = ((.local_9 + .param_5) - bvand(9, .local_8));
      .param_7 = ((.local_10 + (.local_10 + (.local_10 + (.local_10 + (.local_10 + .local_10))))) + 1);
      .param_2 = (.local_9 + (.param_7 + .local_9));
    }
    while ((2 >= .local_8))
    {
      .param_2 = .local_8;
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_12, bool .param_13, int .param_14, int .param_15,
             int .param_16, int .param_17)
 returns (int .ret_11)
{
  int .local_18;
  int .local_19;
  int .local_20;
  .local_19 = .param_12;
  for (.param_14 = 0 to bvand(.param_17, .param_12))
  {
    .local_18 = (bvand(.param_14,
     (.param_15 - 10)) + ((.param_17 + 64) - (.param_16 * .param_16)));
    for (.local_19 = 1 to 2 step 2)
    {
      .local_20 = ((.local_19 + .param_15) - bvand(9, .local_18));
      .param_17 = ((.local_20 + (.local_20 + (.local_20 + (.local_20 + (.local_20 + .local_20))))) + 1);
      .param_12 = (.local_19 + (.param_17 + .local_19));
      if (((1 + .local_19) <= 1))
      {
        .local_20 = (((1 + .local_19) + .param_15) - bvand(9, .local_18));
        .param_17 = ((.local_20 + (.local_20 + (.local_20 + (.local_20 + (.local_20 + .local_20))))) + 1);
        .param_12 = ((1 + .local_19) + (.param_17 + (1 + .local_19)));
      }
    }
    while ((2 >= .local_18))
    {
      .param_12 = .local_18;
    }
  }
  .ret_11 = .param_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_12);
requires (.param_3 == .param_13);
requires (.param_4 == .param_14);
requires (.param_5 == .param_15);
requires (.param_6 == .param_16);
requires (.param_7 == .param_17);
ensures (.ret_1 == .ret_11);

