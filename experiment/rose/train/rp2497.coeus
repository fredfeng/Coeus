declare int bvand(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  .local_4 = true;
  .local_6 = .param_2;
  .local_5 = 0;
  while ((.local_5 < (.param_3 / .param_2)))
  {
    .local_5 = ((.param_3 + .param_2) + ((.param_3 + .param_2) + ((.param_3 + .param_2) + ((.param_3 + .param_2) + ((.param_3 + .param_2) + ((.param_3 + .param_2) + (.param_3 + .param_2)))))));
    .local_6 = 0;
    while ((.local_6 < (- .param_3)))
    {
      .param_3 = bvand(0, .local_6);
      .local_5 = (.param_3 - .local_5);
      .param_2 = .local_5;
      .local_6 = (.local_6 + 1);
    }
    .local_5 = (.local_5 + 1);
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_8, int .param_9) returns (int .ret_7)
{
  bool .local_10;
  int .local_11;
  int .local_12;
  .local_10 = true;
  .local_12 = .param_8;
  .local_11 = 0;
  while ((.local_11 <= (-1 + (.param_9 / .param_8))))
  {
    .local_11 = ((.param_9 + .param_8) + ((.param_9 + .param_8) + ((.param_9 + .param_8) + ((.param_9 + .param_8) + ((.param_9 + .param_8) + ((.param_9 + .param_8) + (.param_9 + .param_8)))))));
    .local_12 = 0;
    while ((.local_12 <= (-1 - .param_9)))
    {
      .param_9 = bvand(0, .local_12);
      .local_12 = (.local_12 + 1);
    }
    .local_12 = 0;
    while ((.local_12 <= (-1 - .param_9)))
    {
      .local_11 = (.param_9 - .local_11);
      .local_12 = (.local_12 + 1);
    }
    .local_12 = 0;
    while ((.local_12 <= (-1 - .param_9)))
    {
      .param_8 = .local_11;
      .local_12 = (.local_12 + 1);
    }
    .local_11 = (.local_11 + 1);
  }
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
requires (.param_3 == .param_9);
ensures (.ret_1 == .ret_7);

