declare int bvor(int, int);

procedure f0(int .param_2, bool .param_3, bool .param_4) returns (int .ret_1)
{
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_6 = 32;
  .local_5 = ((- .param_2) / 9);
  for (.local_6 = 0 to (.param_2 + 7))
  {
    .local_7 = .local_6;
    if (.param_4)
    {
      .param_3 = (! .param_4);
    }
    else
    {
      for (.local_8 = 9 to 64)
      {
        .local_5 = bvor(bvor(64, (- .local_7)), (- (9 - .param_2)));
      }
    }
  }
  while ((3 < .param_2))
  {
    .param_4 = ((.param_3 == .param_4) != (.param_4 || .param_3));
    while ((.param_4 == (.param_2 == .param_2)))
    {
      .param_2 = .local_5;
      .local_5 = .param_2;
    }
  }
  .param_2 = .local_5;
  .ret_1 = .param_2;
}

procedure f1(int .param_10, bool .param_11, bool .param_12) returns
 (int .ret_9)
{
  int .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_14 = 32;
  .local_13 = ((- .param_10) / 9);
  for (.local_14 = 0 to (.param_10 + 7))
  {
    .local_15 = .local_14;
    if (.param_12)
    {
      .param_11 = (! .param_12);
    }
    else
    {
      for (.local_16 = 9 to 64 step 2)
      {
        .local_13 = bvor(bvor(64, (- .local_15)), (- (9 - .param_10)));
        if (((1 + .local_16) <= 63))
        {
          .local_13 = bvor(bvor(64, (- .local_15)), (- (9 - .param_10)));
        }
      }
    }
  }
  while ((3 < .param_10))
  {
    .param_12 = ((.param_11 == .param_12) != (.param_12 || .param_11));
    while ((.param_12 == (.param_10 == .param_10)))
    {
      .param_10 = .local_13;
      .local_13 = .param_10;
    }
  }
  .param_10 = .local_13;
  .ret_9 = .param_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
requires (.param_4 == .param_12);
ensures (.ret_1 == .ret_9);

