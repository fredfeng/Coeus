declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, int .param_3) returns (int .ret_1)
{
  bool .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_4 = false;
  .local_6 = ((- .param_2) + 4);
  .local_5 = bvor(2, bvand(32, .param_2));
  .local_6 = 0;
  while ((.local_6 < (.param_2 * .param_3)))
  {
    .local_7 = 0;
    while ((.local_7 < (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + .local_5))))))))))
    {
      if (.local_4)
      {
        .local_5 = 3;
      }
      else
      {
        .local_5 = (bvand(32, .local_6) - .local_5);
        .local_6 = .param_2;
      }
      .param_2 = (((.param_2 * .param_2) + 2) * (32 + (.local_5 % .param_2)));
      .local_7 = (.local_7 + 1);
    }
    .param_3 = ((.local_5 / .local_6) - (.local_6 - .param_2));
    .local_5 = ((16 + (9 - .local_5)) / .param_3);
    .local_6 = (.local_6 + 1);
  }
  .param_2 = (- bvor(.local_5, .local_5));
  .ret_1 = .param_2;
}

procedure f1(int .param_9, int .param_10) returns (int .ret_8)
{
  bool .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_11 = false;
  .local_13 = ((- .param_9) + 4);
  .local_12 = bvor(2, bvand(32, .param_9));
  .local_13 = 0;
  while ((.local_13 <= (-1 + (.param_9 * .param_10))))
  {
    .local_14 = 0;
    while ((.local_14 <= (-1 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + .local_12)))))))))))
    {
      if (.local_11)
      {
        .local_12 = 3;
      }
      else
      {
        .local_12 = (bvand(32, .local_13) - .local_12);
        .local_13 = .param_9;
      }
      .local_14 = (.local_14 + 1);
    }
    .local_14 = 0;
    while ((.local_14 <= (-1 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + (.local_12 + .local_12)))))))))))
    {
      .param_9 = (((.param_9 * .param_9) + 2) * (32 + (.local_12 % .param_9)));
      .local_14 = (.local_14 + 1);
    }
    .param_10 = ((.local_12 / .local_13) - (.local_13 - .param_9));
    .local_12 = ((16 + (9 - .local_12)) / .param_10);
    .local_13 = (.local_13 + 1);
  }
  .param_9 = (- bvor(.local_12, .local_12));
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
ensures (.ret_1 == .ret_8);

