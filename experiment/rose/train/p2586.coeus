

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  bool .local_6;
  int .local_7;
  .local_5 = (- .param_2);
  for (.local_7 = 0 to 16)
  {
    .local_5 = (.param_4 * .param_4);
  }
  .param_4 = 0;
  while ((.param_4 < .local_5))
  {
    .local_5 = .param_2;
    if (.param_3)
    {
      .local_7 = 0;
      if ((.local_5 > .param_2))
      {
        .param_4 = ((- .param_2) / .local_7);
      }
      else
      {
        .param_4 = (- .local_7);
      }
      .param_2 = (- .param_4);
    }
    else
    {
      .local_6 = .param_3;
      .param_3 = .local_6;
      while (.param_3)
      {
        .param_4 = (- (.param_4 / 16));
        .param_2 = .param_4;
      }
    }
    .param_4 = (.param_4 + 1);
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_9, bool .param_10, int .param_11) returns
 (int .ret_8)
{
  int .local_12;
  bool .local_13;
  int .local_14;
  .local_12 = (- .param_9);
  for (.local_14 = 0 to 16 step 2)
  {
    .local_12 = (.param_11 * .param_11);
    if (((1 + .local_14) <= 15))
    {
      .local_12 = (.param_11 * .param_11);
    }
  }
  .param_11 = 0;
  while ((.param_11 <= (.local_12 - 1)))
  {
    .local_12 = .param_9;
    if (.param_10)
    {
      .local_14 = 0;
      if ((.local_12 > .param_9))
      {
        .param_11 = ((- .param_9) / .local_14);
      }
      else
      {
        .param_11 = (- .local_14);
      }
      .param_9 = (- .param_11);
    }
    else
    {
      .local_13 = .param_10;
      .param_10 = .local_13;
      while (.param_10)
      {
        .param_11 = (- (.param_11 / 16));
        .param_9 = .param_11;
      }
    }
    .param_11 = (.param_11 + 1);
  }
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
requires (.param_3 == .param_10);
requires (.param_4 == .param_11);
ensures (.ret_1 == .ret_8);

