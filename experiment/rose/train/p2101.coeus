declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  .local_4 = .param_2;
  for (.local_4 = 0 to .param_2)
  {
    .local_5 = (- bvor(.param_2, .local_4));
    .param_2 = bvor((64 % .local_5), bvand((.local_4 * .param_2), 0));
    for (.local_6 = 0 to 0)
    {
      if (.param_3)
      {
        .param_2 = .local_5;
        .param_3 = (.param_3 == .param_3);
      }
      else
      {
        .param_2 = (.param_2 * .param_2);
      }
    }
  }
  while (.param_3)
  {
    
  }
  .param_2 = (1 * (32 + .param_2));
  .ret_1 = .param_2;
}

procedure f1(int .param_8, bool .param_9) returns (int .ret_7)
{
  int .local_10;
  int .local_11;
  int .local_12;
  .local_10 = .param_8;
  for (.local_10 = 0 to .param_8)
  {
    .local_11 = (- bvor(.param_8, .local_10));
    .param_8 = bvor((64 % .local_11), bvand((.local_10 * .param_8), 0));
    for (.local_12 = 0 to 0 step 2)
    {
      if (.param_9)
      {
        .param_8 = .local_11;
        .param_9 = (.param_9 == .param_9);
      }
      else
      {
        .param_8 = (.param_8 * .param_8);
      }
      if (((1 + .local_12) <= -1))
      {
        if (.param_9)
        {
          .param_8 = .local_11;
          .param_9 = (.param_9 == .param_9);
        }
        else
        {
          .param_8 = (.param_8 * .param_8);
        }
      }
    }
  }
  while (.param_9)
  {
    
  }
  .param_8 = (1 * (32 + .param_8));
  .ret_7 = .param_8;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
requires (.param_3 == .param_9);
ensures (.ret_1 == .ret_7);

