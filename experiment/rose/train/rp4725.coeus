

procedure f0(int .param_2) returns (int .ret_1)
{
  bool .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_3 = false;
  .local_6 = (- (.param_2 % 3));
  .local_5 = .param_2;
  .local_6 = (- .local_6);
  .local_4 = 3;
  for (.local_6 = 0 to (.local_4 / .local_5))
  {
    .local_7 = .local_6;
    .local_5 = (- (.local_7 * 64));
    .local_4 = 4;
  }
  .param_2 = (.local_5 + .local_4);
  .param_2 = ((.local_5 % .local_5) * (.local_5 - .param_2));
  .ret_1 = .param_2;
}

procedure f1(int .param_9) returns (int .ret_8)
{
  bool .local_10;
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_10 = false;
  .local_13 = (- (.param_9 % 3));
  .local_12 = .param_9;
  .local_13 = (- .local_13);
  .local_11 = 3;
  for (.local_13 = 0 to ((-1 + (.local_11 / .local_12)) + 1))
  {
    .local_14 = .local_13;
    .local_12 = (- (.local_14 * 64));
  }
  for (.local_13 = 0 to ((-1 + (.local_11 / .local_12)) + 1))
  {
    .local_11 = 4;
  }
  .param_9 = (.local_12 + .local_11);
  .param_9 = ((.local_12 % .local_12) * (.local_12 - .param_9));
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
ensures (.ret_1 == .ret_8);

