declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(bool .param_2, int .param_3, bool .param_4) returns (int .ret_1)
{
  int .local_5;
  bool .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_5 = 4;
  .local_8 = bvand((- .local_5), .local_5);
  while ((.param_2 == .param_4))
  {
    .local_7 = .local_5;
    .local_6 = (((.local_5 + .local_5) != -10) != .param_4);
    while (.param_2)
    {
      .param_3 = (- (.local_7 - .local_8));
    }
    .local_8 = 1;
    while ((.local_8 < 10))
    {
      .local_9 = 6;
      if ((! .param_4))
      {
        .param_2 = false;
      }
      else
      {
        .param_2 = (.local_8 < .local_9);
      }
      .param_3 = .local_5;
      .local_8 = (.local_8 + 1);
    }
    while (((.local_5 > .local_5) && (9 != .param_3)))
    {
      if (.param_4)
      {
        .param_2 = ((4 != .param_3) && .local_6);
      }
      else
      {
        .param_3 = bvand(.param_3, (- .param_3));
      }
    }
  }
  .param_3 = ((bvand(.param_3, .param_3) + (bvand(.param_3,
   .param_3) + (bvand(.param_3, .param_3) + bvand(.param_3,
   .param_3)))) + ((.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + (.local_5 + .local_5))))))) / (- .local_5)));
  .local_5 = (bvor(.local_5, .local_5) - (.param_3 * .local_5));
  .ret_1 = .local_5;
}

procedure f1(bool .param_11, int .param_12, bool .param_13) returns
 (int .ret_10)
{
  int .local_14;
  bool .local_15;
  int .local_16;
  int .local_17;
  int .local_18;
  .local_14 = 4;
  .local_17 = bvand((- .local_14), .local_14);
  while ((.param_11 == .param_13))
  {
    .local_16 = .local_14;
    .local_15 = (((.local_14 + .local_14) != -10) != .param_13);
    while (.param_11)
    {
      .param_12 = (- (.local_16 - .local_17));
    }
    .local_17 = 1;
    while ((.local_17 <= 9))
    {
      .local_18 = 6;
      if ((! .param_13))
      {
        .param_11 = false;
      }
      else
      {
        .param_11 = (.local_17 < .local_18);
      }
      .local_17 = (.local_17 + 1);
    }
    .local_17 = 1;
    while ((.local_17 <= 9))
    {
      .param_12 = .local_14;
      .local_17 = (.local_17 + 1);
    }
    while (((.local_14 > .local_14) && (9 != .param_12)))
    {
      if (.param_13)
      {
        .param_11 = ((4 != .param_12) && .local_15);
      }
      else
      {
        .param_12 = bvand(.param_12, (- .param_12));
      }
    }
  }
  .param_12 = ((bvand(.param_12, .param_12) + (bvand(.param_12,
   .param_12) + (bvand(.param_12, .param_12) + bvand(.param_12,
   .param_12)))) + ((.local_14 + (.local_14 + (.local_14 + (.local_14 + (.local_14 + (.local_14 + (.local_14 + .local_14))))))) / (- .local_14)));
  .local_14 = (bvor(.local_14, .local_14) - (.param_12 * .local_14));
  .ret_10 = .local_14;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_11);
requires (.param_3 == .param_12);
requires (.param_4 == .param_13);
ensures (.ret_1 == .ret_10);

