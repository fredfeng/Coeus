declare int bvand(int, int);

procedure f0(int .param_2, int .param_3, int .param_4) returns (int .ret_1)
{
  bool .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  .local_5 = true;
  .local_6 = .param_2;
  .local_7 = bvand(bvand(.param_2, .param_2), 0);
  .param_2 = (.local_6 + 5);
  .local_5 = (.local_5 || .local_5);
  if (.local_5)
  {
    .local_8 = bvand((bvand(.local_7, 3) - .local_7), .local_7);
    .local_7 = (.param_2 + .local_6);
    for (.param_3 = 0 to 64)
    {
      if (.local_5)
      {
        .local_8 = .local_7;
      }
      else
      {
        .local_8 = (bvand(.local_7, .param_4) - 4);
      }
    }
    .param_2 = (- .local_8);
  }
  else
  {
    .param_2 = 0;
    while ((.local_6 < .param_4))
    {
      .param_4 = (.param_4 + (.local_6 - .param_4));
      .local_6 = .param_4;
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_10, int .param_11, int .param_12) returns
 (int .ret_9)
{
  bool .local_13;
  int .local_14;
  int .local_15;
  int .local_16;
  .local_13 = true;
  .local_14 = .param_10;
  .local_15 = bvand(bvand(.param_10, .param_10), 0);
  .param_10 = (.local_14 + 5);
  .local_13 = (.local_13 || .local_13);
  if (.local_13)
  {
    .local_16 = bvand((bvand(.local_15, 3) - .local_15), .local_15);
    .local_15 = (.param_10 + .local_14);
    for (.param_11 = 0 to 64 step 2)
    {
      if (.local_13)
      {
        .local_16 = .local_15;
      }
      else
      {
        .local_16 = (bvand(.local_15, .param_12) - 4);
      }
      if (((1 + .param_11) <= 63))
      {
        if (.local_13)
        {
          .local_16 = .local_15;
        }
        else
        {
          .local_16 = (bvand(.local_15, .param_12) - 4);
        }
      }
    }
    .param_10 = (- .local_16);
  }
  else
  {
    .param_10 = 0;
    while ((.local_14 < .param_12))
    {
      .param_12 = (.param_12 + (.local_14 - .param_12));
      .local_14 = .param_12;
    }
  }
  .ret_9 = .param_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_10);
requires (.param_3 == .param_11);
requires (.param_4 == .param_12);
ensures (.ret_1 == .ret_9);

