declare int bvor(int, int);

procedure f0(int .param_2) returns (int .ret_1)
{
  bool .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  .local_3 = false;
  for (.local_4 = 0 to bvor(2, .param_2))
  {
    .local_5 = -16;
    for (.local_6 = 0 to 7)
    {
      .local_7 = .local_5;
      if (.local_3)
      {
        .param_2 = (.local_7 * (.local_7 - .local_5));
      }
      else
      {
        .param_2 = (- .local_7);
      }
    }
  }
  .param_2 = bvor(.param_2, (.param_2 - 1));
  .ret_1 = .param_2;
}

procedure f1(int .param_9) returns (int .ret_8)
{
  bool .local_10;
  int .local_11;
  int .local_12;
  int .local_13;
  int .local_14;
  .local_10 = false;
  for (.local_11 = 0 to bvor(2, .param_9))
  {
    .local_12 = -16;
    for (.local_13 = 0 to 7 step 2)
    {
      .local_14 = .local_12;
      if (.local_10)
      {
        .param_9 = (.local_14 * (.local_14 - .local_12));
      }
      else
      {
        .param_9 = (- .local_14);
      }
      if (((1 + .local_13) <= 6))
      {
        .local_14 = .local_12;
        if (.local_10)
        {
          .param_9 = (.local_14 * (.local_14 - .local_12));
        }
        else
        {
          .param_9 = (- .local_14);
        }
      }
    }
  }
  .param_9 = bvor(.param_9, (.param_9 - 1));
  .ret_8 = .param_9;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_9);
ensures (.ret_1 == .ret_8);

