declare int bvor(int, int);

procedure f0(bool .param_2, int .param_3) returns (int .ret_1)
{
  int .local_4;
  int .local_5;
  int .local_6;
  .local_4 = 5;
  .local_6 = .local_4;
  .local_5 = bvor((.local_4 % .local_4), (10 + .local_4));
  for (.local_6 = 0 to 6)
  {
    .local_5 = (.local_4 * (.local_6 * .local_5));
    .local_4 = (.param_3 + (.param_3 + (.param_3 + (.param_3 + (.param_3 + (.param_3 + (.param_3 + (.param_3 + .param_3))))))));
  }
  for (.local_5 = 0 to (.local_4 + .local_4))
  {
    while (((.local_4 % .local_5) > .local_5))
    {
      
    }
    .local_4 = (- .local_5);
    .local_4 = (- (1 % .local_4));
  }
  .ret_1 = .local_4;
}

procedure f1(bool .param_8, int .param_9) returns (int .ret_7)
{
  int .local_10;
  int .local_11;
  int .local_12;
  .local_10 = 5;
  .local_12 = .local_10;
  .local_11 = bvor((.local_10 % .local_10), (10 + .local_10));
  for (.local_12 = 0 to 6 step 2)
  {
    .local_11 = (.local_10 * (.local_12 * .local_11));
    .local_10 = (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + .param_9))))))));
    if (((1 + .local_12) <= 5))
    {
      .local_11 = (.local_10 * ((1 + .local_12) * .local_11));
      .local_10 = (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + (.param_9 + .param_9))))))));
    }
  }
  for (.local_11 = 0 to (.local_10 + .local_10))
  {
    while (((.local_10 % .local_11) > .local_11))
    {
      
    }
    .local_10 = (- .local_11);
    .local_10 = (- (1 % .local_10));
  }
  .ret_7 = .local_10;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_8);
requires (.param_3 == .param_9);
ensures (.ret_1 == .ret_7);

