declare int bvxor(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4) returns (int .ret_1)
{
  int .local_5;
  while (.param_3)
  {
    for (.local_5 = 0 to 9)
    {
      .param_4 = 8;
    }
  }
  .param_2 = (.param_4 % .param_2);
  for (.param_4 = 8 downto 5)
  {
    .param_2 = bvxor((.param_2 + 1), .param_4);
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_7, bool .param_8, int .param_9) returns (int .ret_6)
{
  int .local_10;
  while (.param_8)
  {
    for (.local_10 = 0 to 9 step 2)
    {
      .param_9 = 8;
      if (((1 + .local_10) <= 8))
      {
        .param_9 = 8;
      }
    }
  }
  .param_7 = (.param_9 % .param_7);
  for (.param_9 = 8 downto 5)
  {
    .param_7 = bvxor((.param_7 + 1), .param_9);
  }
  .ret_6 = .param_7;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_7);
requires (.param_3 == .param_8);
requires (.param_4 == .param_9);
ensures (.ret_1 == .ret_6);

