declare int bvxor(int, int);
declare int bvor(int, int);
declare int bvand(int, int);

procedure f0(int .param_2, bool .param_3, int .param_4, int .param_5,
             int .param_6)
 returns (int .ret_1)
{
  int .local_7;
  int .local_8;
  int .local_9;
  int .local_10;
  .local_7 = 0;
  for (.param_4 = 0 to .param_5)
  {
    .param_3 = ((.param_3 || .param_3) == (.local_7 == .local_7));
    for (.local_8 = 0 to 0)
    {
      .local_10 = 2;
      while (((64 + .param_4) > .param_4))
      {
        .param_5 = .local_10;
      }
    }
  }
  if (((.param_2 < .local_7) && .param_3))
  {
    .local_7 = ((.param_6 / (.local_7 + .param_2)) + .param_5);
    .param_2 = 0;
  }
  else
  {
    .param_4 = bvxor((- .param_2), 6);
    .param_5 = bvxor(0,
     (.param_4 + (.param_4 + (.param_4 + (.param_4 + (.param_4 + (.param_4 + .param_4)))))));
    .param_6 = -63;
    if (.param_3)
    {
      .local_8 = bvand(.param_4, 6);
      for (.local_9 = 0 to 6)
      {
        .local_7 = bvand((32 - .local_8), .param_5);
        .param_2 = bvor(.local_7, -6);
      }
    }
    else
    {
      .param_2 = .param_6;
    }
  }
  .ret_1 = .param_2;
}

procedure f1(int .param_12, bool .param_13, int .param_14, int .param_15,
             int .param_16)
 returns (int .ret_11)
{
  int .local_17;
  int .local_18;
  int .local_19;
  int .local_20;
  .local_17 = 0;
  for (.param_14 = 0 to .param_15)
  {
    .param_13 = ((.param_13 || .param_13) == (.local_17 == .local_17));
    for (.local_18 = 0 to 0)
    {
      .local_20 = 2;
      while (((64 + .param_14) > .param_14))
      {
        .param_15 = .local_20;
      }
    }
  }
  if (((.param_12 < .local_17) && .param_13))
  {
    .local_17 = ((.param_16 / (.local_17 + .param_12)) + .param_15);
    .param_12 = 0;
  }
  else
  {
    .param_14 = bvxor((- .param_12), 6);
    .param_15 = bvxor(0,
     (.param_14 + (.param_14 + (.param_14 + (.param_14 + (.param_14 + (.param_14 + .param_14)))))));
    .param_16 = -63;
    if (.param_13)
    {
      .local_18 = bvand(.param_14, 6);
      for (.local_19 = 0 to 6 step 2)
      {
        .local_17 = bvand((32 - .local_18), .param_15);
        .param_12 = bvor(.local_17, -6);
        if (((1 + .local_19) <= 5))
        {
          .local_17 = bvand((32 - .local_18), .param_15);
          .param_12 = bvor(.local_17, -6);
        }
      }
    }
    else
    {
      .param_12 = .param_16;
    }
  }
  .ret_11 = .param_12;
}

$lentry f0;
$rentry f1;
requires (.param_2 == .param_12);
requires (.param_3 == .param_13);
requires (.param_4 == .param_14);
requires (.param_5 == .param_15);
requires (.param_6 == .param_16);
ensures (.ret_1 == .ret_11);

