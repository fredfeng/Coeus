declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func11(int[int] .param_1, int .param_2, int .param_3) returns
 (int .ret_0)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_7 = 0;
  .local_8 = 0;
  while ((.local_8 < 8))
  {
    .local_5 = .param_1[(.local_8 * 2)];
    .local_4 = .param_1[((.local_8 * 2) + 1)];
    .local_6 = 0;
    .local_9 = 0;
    while ((.local_9 < 32))
    {
      if ((bvand(bvshr(.local_5, .local_9), 1) != 0))
      {
        .local_6 = bvxor(.local_6, bvand(bvshr(.param_2, .local_9), 1));
      }
      if ((bvand(bvshr(.local_4, .local_9), 1) != 0))
      {
        .local_6 = bvxor(.local_6, bvand(bvshr(.param_3, .local_9), 1));
      }
      .local_9 = (.local_9 + 1);
    }
    .local_7 = bvor(.local_7, bvshl(.local_6, .local_8));
    .local_8 = (.local_8 + 1);
  }
  .ret_0 = .local_7;
}

procedure RIGHT_func11(int[int] .param_1, int .param_2, int .param_3) returns
 (int .ret_0)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_7 = 0;
  .local_8 = 0;
  while ((.local_8 <= (8 - 1)))
  {
    .local_5 = .param_1[(.local_8 * 2)];
    .local_4 = .param_1[((.local_8 * 2) + 1)];
    .local_6 = 0;
    .local_9 = 0;
    while ((.local_9 <= 31))
    {
      if ((bvand(bvshr(.local_5, .local_9), 1) != 0))
      {
        .local_6 = bvxor(.local_6, bvand(bvshr(.param_2, .local_9), 1));
      }
      if ((bvand(bvshr(.local_4, .local_9), 1) != 0))
      {
        .local_6 = bvxor(.local_6, bvand(bvshr(.param_3, .local_9), 1));
      }
      if (((1 + .local_9) <= 31))
      {
        if ((bvand(bvshr(.local_5, (1 + .local_9)), 1) != 0))
        {
          .local_6 = bvxor(.local_6, bvand(bvshr(.param_2, (1 + .local_9)),
           1));
        }
        if ((bvand(bvshr(.local_4, (1 + .local_9)), 1) != 0))
        {
          .local_6 = bvxor(.local_6, bvand(bvshr(.param_3, (1 + .local_9)),
           1));
        }
      }
      .local_9 = (.local_9 + 2);
    }
    .local_7 = bvor(.local_7, bvshl(.local_6, .local_8));
    .local_8 = (.local_8 + 1);
  }
  .ret_0 = .local_7;
}

$lentry LEFT_func11;
$rentry RIGHT_func11;
requires ($L(.param_1) == $R(.param_1));
requires ($L(.param_2) == $R(.param_2));
requires ($L(.param_3) == $R(.param_3));
ensures ($L(.param_1) == $R(.param_1));
ensures ($L(.ret_0) == $R(.ret_0));

