declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func8(int[int] .param_1, int[int] .param_2) returns ()
{
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  .param_1[0] = 0;
  .local_3 = 1;
  while ((.local_3 < 256))
  {
    .local_6 = bvand(.local_3, (.local_3 - 1));
    .param_1[.local_3] = bvxor(.param_1[.local_6], 1);
    .local_3 = (.local_3 + 1);
  }
  .local_3 = 0;
  while ((.local_3 < 256))
  {
    .local_5 = 0;
    .local_4 = 0;
    while ((.local_4 < 8))
    {
      if ((bvand(.local_3, bvshl(1, .local_4)) != 0))
      {
        if (((.local_4 % 2) == 0))
        {
          .local_5 = bvxor(.local_5, 4);
        }
        if (((.local_4 % 4) == 0))
        {
          .local_5 = bvxor(.local_5, 16);
        }
        if (((.local_4 % 16) == 0))
        {
          .local_5 = bvxor(.local_5, 64);
        }
      }
      .local_4 = (.local_4 + 1);
    }
    .param_2[.local_3] = bvnot(bvxor(bvxor(.local_5, (.local_5 * 2)),
     (if (.param_1[.local_3] != 0) then 168 else 0)));
    .local_3 = (.local_3 + 1);
  }
}

procedure RIGHT_func8(int[int] .param_1, int[int] .param_2) returns ()
{
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  .param_1[0] = 0;
  .local_3 = 1;
  while ((.local_3 <= 255))
  {
    .local_6 = bvand(.local_3, (.local_3 - 1));
    .param_1[.local_3] = bvxor(.param_1[.local_6], 1);
    .local_3 = (.local_3 + 1);
  }
  .local_3 = 0;
  while ((.local_3 <= 255))
  {
    .local_5 = 0;
    .local_4 = 0;
    while ((.local_4 <= 7))
    {
      if ((bvand(.local_3, bvshl(1, .local_4)) != 0))
      {
        if (((.local_4 % 2) == 0))
        {
          .local_5 = bvxor(.local_5, 4);
        }
        if (((.local_4 % 4) == 0))
        {
          .local_5 = bvxor(.local_5, 16);
        }
        if (((.local_4 % 16) == 0))
        {
          .local_5 = bvxor(.local_5, 64);
        }
      }
      .local_4 = (.local_4 + 1);
    }
    .param_2[.local_3] = bvnot(bvxor(bvxor(.local_5, (.local_5 * 2)),
     (if (.param_1[.local_3] != 0) then 168 else 0)));
    .local_3 = (.local_3 + 1);
  }
}

$lentry LEFT_func8;
$rentry RIGHT_func8;
requires ($L(.param_1) == $R(.param_1));
requires ($L(.param_2) == $R(.param_2));
ensures ($L(.param_1) == $R(.param_1));
ensures ($L(.param_2) == $R(.param_2));

