declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func8(int[int, int] .param_1, int .param_2, int .param_3)
 returns (int .ret_0)
{
  int .local_4;
  int .local_5;
  int .local_6;
  .local_5 = 0;
  .param_2 = bvor((.param_2 * 2), (.param_2 / 2147483648));
  .local_4 = 7;
  while ((.local_4 >= 0))
  {
    .local_6 = bvand(bvxor(.param_2, .param_3), 63);
    .local_5 = bvor(.local_5, .param_1[.local_6, .local_4]);
    .param_2 = bvor((.param_2 / 16), (.param_2 * 268435456));
    .param_3 = (.param_3 / 64);
    .local_4 = (.local_4 - 1);
  }
  .ret_0 = .local_5;
}

procedure RIGHT_func8(int[int, int] .param_1, int .param_2, int .param_3)
 returns (int .ret_0)
{
  int .local_4;
  int .local_5;
  int .local_6;
  int .local_7;
  int .local_8;
  int .local_9;
  .local_7 = 0;
  .param_2 = bvor((.param_2 * 2), (.param_2 / 2147483648));
  .local_6 = 7;
  while ((.local_6 >= 0))
  {
    .local_5 = 63;
    .local_8 = bvand(bvxor(.param_2, .param_3), .local_5);
    .local_7 = bvor(.local_7, .param_1[.local_8, .local_6]);
    .param_2 = bvor((.param_2 / 16), (.param_2 * 268435456));
    .param_3 = (.param_3 / 64);
    .local_4 = ((- 1) + .local_6);
    if ((.local_4 >= 0))
    {
      .local_9 = bvand(bvxor(.param_2, .param_3), .local_5);
      .local_7 = bvor(.local_7, .param_1[.local_9, .local_4]);
      .param_2 = bvor((.param_2 / 16), (.param_2 * 268435456));
      .param_3 = (.param_3 / 64);
    }
    .local_6 = (.local_6 + (- 2));
  }
  .ret_0 = .local_7;
}

$lentry LEFT_func8;
$rentry RIGHT_func8;
requires ($L(.param_1) == $R(.param_1));
requires ($L(.param_2) == $R(.param_2));
requires ($L(.param_3) == $R(.param_3));
ensures ($L(.param_1) == $R(.param_1));
ensures ($L(.ret_0) == $R(.ret_0));

