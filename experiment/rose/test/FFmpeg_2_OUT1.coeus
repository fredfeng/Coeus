declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func7(int .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  int .local_4;
  int .local_5;
  .local_2 = (.param_1 / 32768);
  .local_3 = bvand(.param_1, ((1 * 1024) - 1));
  .local_4 = bvand(.param_1, (31 * 1024));
  if ((.local_4 == (31 * 1024)))
  {
    .local_4 = (255 * 8388608);
    if ((.local_3 != 0))
    {
      .local_3 = ((1 * 8388608) - 1);
    }
  }
  else
  {
    if ((.local_4 == 0))
    {
      if ((.local_3 != 0))
      {
        .local_3 = (.local_3 * 2);
        .local_4 = 939524096;
        while ((bvand(.local_3, (1 * 1024)) != 0))
        {
          .local_3 = (.local_3 * 2);
          .local_4 = (.local_4 - (1 * 8388608));
        }
        .local_3 = bvand(.local_3, ((1 * 1024) - 1));
        .local_3 = (.local_3 * 8192);
      }
    }
    else
    {
      .local_3 = (.local_3 * 8192);
      .local_4 = ((.local_4 * 8192) + 939524096);
    }
  }
  .local_5 = bvor(bvor((.local_2 * 2147483648), .local_4), .local_3);
  .ret_0 = .local_5;
}

procedure RIGHT_func7(int .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  int .local_4;
  int .local_5;
  .local_2 = (.param_1 / 32768);
  .local_3 = bvand(.param_1, 1023);
  .local_4 = bvand(.param_1, 31744);
  if ((.local_4 == 31744))
  {
    .local_4 = 2139095040;
    if ((.local_3 != 0))
    {
      .local_3 = 8388607;
    }
  }
  else
  {
    if ((.local_4 == 0))
    {
      if ((.local_3 != 0))
      {
        .local_3 = (.local_3 * 2);
        .local_4 = 939524096;
        while ((bvand(.local_3, 1024) != 0))
        {
          .local_3 = (.local_3 * 2);
          .local_4 = (.local_4 - 8388608);
        }
        .local_3 = bvand(.local_3, 1023);
        .local_3 = (.local_3 * 8192);
      }
    }
    else
    {
      .local_3 = (.local_3 * 8192);
      .local_4 = ((.local_4 * 8192) + 939524096);
    }
  }
  .local_5 = bvor(bvor((.local_2 * 2147483648), .local_4), .local_3);
  .ret_0 = .local_5;
}

$lentry LEFT_func7;
$rentry RIGHT_func7;
requires ($L(.param_1) == $R(.param_1));
ensures ($L(.ret_0) == $R(.ret_0));

