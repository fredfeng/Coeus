declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func7(int[int] .param_1, int[int] .param_2) returns ()
{
  int .local_3;
  int .local_4;
  int .local_5;
  .local_3 = bvand((.param_1[2] / 4), 15);
  .local_4 = bvshl(32, .local_3);
  .param_2[0] = bvor((.param_1[0] * 256), .param_1[1]);
  .param_2[4] = ((.param_2[0] + bvshl(bvand(bvor((.param_1[2] * 16),
   (.param_1[3] / 16)), 63), .local_3)) - .local_4);
  .param_2[8] = ((.param_2[4] + bvshl(bvand(bvor((.param_1[3] * 4),
   (.param_1[4] / 64)), 63), .local_3)) - .local_4);
  .param_2[12] = ((.param_2[8] + bvshl(bvand(.param_1[4], 63),
   .local_3)) - .local_4);
  .param_2[1] = ((.param_2[0] + bvshl((.param_1[5] / 4),
   .local_3)) - .local_4);
  .param_2[5] = ((.param_2[4] + bvshl(bvand(bvor((.param_1[5] * 16),
   (.param_1[6] / 16)), 63), .local_3)) - .local_4);
  .param_2[9] = ((.param_2[8] + bvshl(bvand(bvor((.param_1[6] * 4),
   (.param_1[7] / 64)), 63), .local_3)) - .local_4);
  .param_2[13] = ((.param_2[12] + bvshl(bvand(.param_1[7], 63),
   .local_3)) - .local_4);
  .param_2[2] = ((.param_2[1] + bvshl((.param_1[8] / 4),
   .local_3)) - .local_4);
  .param_2[6] = ((.param_2[5] + bvshl(bvand(bvor((.param_1[8] * 16),
   (.param_1[9] / 16)), 63), .local_3)) - .local_4);
  .param_2[10] = ((.param_2[9] + bvshl(bvand(bvor((.param_1[9] * 4),
   (.param_1[10] / 64)), 63), .local_3)) - .local_4);
  .param_2[14] = ((.param_2[13] + bvshl(bvand(.param_1[10], 63),
   .local_3)) - .local_4);
  .param_2[3] = ((.param_2[2] + bvshl((.param_1[11] / 4),
   .local_3)) - .local_4);
  .param_2[7] = ((.param_2[6] + bvshl(bvand(bvor((.param_1[11] * 16),
   (.param_1[12] / 16)), 63), .local_3)) - .local_4);
  .param_2[11] = ((.param_2[10] + bvshl(bvand(bvor((.param_1[12] * 4),
   (.param_1[13] / 64)), 63), .local_3)) - .local_4);
  .param_2[15] = ((.param_2[14] + bvshl(bvand(.param_1[13], 63),
   .local_3)) - .local_4);
  .local_5 = 0;
  while ((.local_5 < 16))
  {
    if ((bvand(.param_2[.local_5], 32768) != 0))
    {
      .param_2[.local_5] = bvand(.param_2[.local_5], 32767);
    }
    else
    {
      .param_2[.local_5] = bvnot(.param_2[.local_5]);
    }
    .local_5 = (.local_5 + 1);
  }
}

procedure RIGHT_func7(int[int] .param_1, int[int] .param_2) returns ()
{
  int .local_3;
  int .local_4;
  int .local_5;
  .local_3 = bvand((.param_1[2] / 4), 15);
  .local_4 = bvshl(32, .local_3);
  .param_2[0] = bvor((.param_1[0] * 256), .param_1[1]);
  .param_2[4] = ((.param_2[0] + bvshl(bvand(bvor((.param_1[2] * 16),
   (.param_1[3] / 16)), 63), .local_3)) - .local_4);
  .param_2[8] = ((.param_2[4] + bvshl(bvand(bvor((.param_1[3] * 4),
   (.param_1[4] / 64)), 63), .local_3)) - .local_4);
  .param_2[12] = ((.param_2[8] + bvshl(bvand(.param_1[4], 63),
   .local_3)) - .local_4);
  .param_2[1] = ((.param_2[0] + bvshl((.param_1[5] / 4),
   .local_3)) - .local_4);
  .param_2[5] = ((.param_2[4] + bvshl(bvand(bvor((.param_1[5] * 16),
   (.param_1[6] / 16)), 63), .local_3)) - .local_4);
  .param_2[9] = ((.param_2[8] + bvshl(bvand(bvor((.param_1[6] * 4),
   (.param_1[7] / 64)), 63), .local_3)) - .local_4);
  .param_2[13] = ((.param_2[12] + bvshl(bvand(.param_1[7], 63),
   .local_3)) - .local_4);
  .param_2[2] = ((.param_2[1] + bvshl((.param_1[8] / 4),
   .local_3)) - .local_4);
  .param_2[6] = ((.param_2[5] + bvshl(bvand(bvor((.param_1[8] * 16),
   (.param_1[9] / 16)), 63), .local_3)) - .local_4);
  .param_2[10] = ((.param_2[9] + bvshl(bvand(bvor((.param_1[9] * 4),
   (.param_1[10] / 64)), 63), .local_3)) - .local_4);
  .param_2[14] = ((.param_2[13] + bvshl(bvand(.param_1[10], 63),
   .local_3)) - .local_4);
  .param_2[3] = ((.param_2[2] + bvshl((.param_1[11] / 4),
   .local_3)) - .local_4);
  .param_2[7] = ((.param_2[6] + bvshl(bvand(bvor((.param_1[11] * 16),
   (.param_1[12] / 16)), 63), .local_3)) - .local_4);
  .param_2[11] = ((.param_2[10] + bvshl(bvand(bvor((.param_1[12] * 4),
   (.param_1[13] / 64)), 63), .local_3)) - .local_4);
  .param_2[15] = ((.param_2[14] + bvshl(bvand(.param_1[13], 63),
   .local_3)) - .local_4);
  .local_5 = 0;
  while ((.local_5 <= (16 - 1)))
  {
    if ((bvand(.param_2[.local_5], 32768) != 0))
    {
      .param_2[.local_5] = bvand(.param_2[.local_5], 32767);
    }
    else
    {
      .param_2[.local_5] = bvnot(.param_2[.local_5]);
    }
    .local_5 = (.local_5 + 1);
  }
}

$lentry LEFT_func7;
$rentry RIGHT_func7;
requires ($L(.param_1) == $R(.param_1));
requires ($L(.param_2) == $R(.param_2));
ensures ($L(.param_1) == $R(.param_1));
ensures ($L(.param_2) == $R(.param_2));

