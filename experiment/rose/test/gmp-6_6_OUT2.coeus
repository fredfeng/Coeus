declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func5(int .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  .local_3 = 1;
  while ((.local_3 != 0))
  {
    if ((.param_2 > 0))
    {
      if ((.param_2 >= 16))
      {
        .param_1 = (.param_1 * 65536);
        .param_2 = (.param_2 - 16);
      }
      else
      {
        .param_1 = (.param_1 * 2);
        .param_2 = (.param_2 - 1);
      }
    }
    else
    {
      if ((.param_2 < 0))
      {
        if ((.param_2 <= (- 16)))
        {
          .param_1 = (.param_1 / 65536);
          .param_2 = (.param_2 + 16);
        }
        else
        {
          .param_1 = (.param_1 / 2);
          .param_2 = (.param_2 + 1);
        }
      }
      else
      {
        .local_3 = 0;
      }
    }
  }
  .ret_0 = .param_1;
}

procedure RIGHT_func5(int .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  int .local_4;
  .local_4 = 1;
  .local_3 = (if (.param_2 < 0) then 1 else 0);
  while ((.local_4 != 0))
  {
    if ((.param_2 > 0))
    {
      if ((.param_2 >= 16))
      {
        .param_1 = (.param_1 * 65536);
        .param_2 = (.param_2 - 16);
        .local_3 = (if (.param_2 < 0) then 1 else 0);
      }
      else
      {
        .param_1 = (.param_1 * 2);
        .param_2 = (.param_2 - 1);
        .local_3 = (if (.param_2 < 0) then 1 else 0);
      }
    }
    else
    {
      if ((.param_2 < 0))
      {
        if ((.param_2 <= (- 16)))
        {
          .param_1 = (.param_1 / 65536);
          .param_2 = (.param_2 + 16);
          .local_3 = (if (.param_2 < 0) then 1 else 0);
        }
        else
        {
          .param_1 = (.param_1 / 2);
          .param_2 = (.param_2 + 1);
          .local_3 = (if (.param_2 < 0) then 1 else 0);
        }
      }
      else
      {
        .local_4 = 0;
      }
    }
  }
  .ret_0 = .param_1;
}

$lentry LEFT_func5;
$rentry RIGHT_func5;
requires ($L(.param_1) == $R(.param_1));
requires ($L(.param_2) == $R(.param_2));
ensures ($L(.ret_0) == $R(.ret_0));

