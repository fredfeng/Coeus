declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func6(int .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  int .local_4;
  .local_2 = 0;
  .local_3 = 0;
  .local_4 = .param_1;
  if ((.param_1 == 0))
  {
    .ret_0 = 0;
  }
  else
  {
    if ((.param_1 == 1))
    {
      .ret_0 = 8;
    }
    else
    {
      if ((.local_4 == 1))
      {
        .local_4 = (.local_4 / 2);
        .local_2 = (.local_2 + 1);
      }
      while ((.local_4 == 1))
      {
        .local_4 = (.local_4 / 2);
        .local_2 = (.local_2 + 1);
      }
      if ((.local_2 < 5))
      {
        .local_3 = bvshl(.param_1, (4 - .local_2));
        .ret_0 = bvor((.local_2 * 16), bvand(.local_3, 15));
      }
      else
      {
        .local_3 = bvshr(.param_1, (.local_2 - 5));
        if ((bvand(.local_3, 1) != 0))
        {
          .local_3 = (.local_3 + 2);
          if ((bvand(.local_3, 64) != 0))
          {
            .local_2 = (.local_2 + 1);
            .local_3 = (.local_3 / 2);
          }
        }
        .ret_0 = bvor((.local_2 * 16), bvand((.local_3 / 2), 15));
      }
    }
  }
}

procedure RIGHT_func6(int .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  int .local_4;
  .local_2 = 0;
  .local_3 = 0;
  .local_4 = .param_1;
  if ((.param_1 == 0))
  {
    .ret_0 = 0;
  }
  else
  {
    if ((.param_1 == 1))
    {
      .ret_0 = 8;
    }
    else
    {
      if ((.local_4 == 1))
      {
        .local_4 = (.local_4 / 2);
        .local_2 = (.local_2 + 1);
      }
      while ((.local_4 == 1))
      {
        .local_4 = (.local_4 / 2);
        .local_2 = (.local_2 + 1);
      }
      if ((.local_2 < 5))
      {
        .local_3 = bvshl(.param_1, (4 - .local_2));
        .ret_0 = bvor((.local_2 * 16), bvand(.local_3, 15));
      }
      else
      {
        .local_3 = bvshr(.param_1, (.local_2 - 5));
        if ((bvand(.local_3, 1) != 0))
        {
          .local_3 = (.local_3 + 2);
          if ((bvand(.local_3, 64) != 0))
          {
            .local_2 = (.local_2 + 1);
            .local_3 = (.local_3 / 2);
          }
        }
        .ret_0 = bvor((.local_2 * 16), bvand((.local_3 / 2), 15));
      }
    }
  }
}

$lentry LEFT_func6;
$rentry RIGHT_func6;
requires ($L(.param_1) == $R(.param_1));
ensures ($L(.ret_0) == $R(.ret_0));

