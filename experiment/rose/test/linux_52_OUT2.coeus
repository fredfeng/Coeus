declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func6(int[int] .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  int .local_4;
  .local_3 = bvand(.param_1[0], bvnot(2));
  .param_1[1024] = bvand(.param_1[1024], bvnot(1));
  .local_4 = 0;
  .local_2 = 0;
  while ((.local_2 < 8))
  {
    .param_1[0] = .local_3;
    .param_1[0] = bvor(.local_3, 2);
    .local_4 = bvor((.local_4 * 2), bvand(.param_1[0], 1));
    .local_2 = (.local_2 + 1);
  }
  .param_1[1024] = bvor(.param_1[1024], 1);
  .ret_0 = .local_4;
}

procedure RIGHT_func6(int[int] .param_1) returns (int .ret_0)
{
  int .local_2;
  int .local_3;
  int .local_4;
  .local_3 = bvand(.param_1[0], bvnot(2));
  .param_1[1024] = bvand(.param_1[1024], bvnot(1));
  .local_4 = 0;
  .local_2 = 0;
  while ((.local_2 <= 7))
  {
    .param_1[0] = .local_3;
    .param_1[0] = bvor(.local_3, 2);
    .local_4 = bvor((.local_4 * 2), bvand(.param_1[0], 1));
    if (((1 + .local_2) <= 7))
    {
      .param_1[0] = .local_3;
      .param_1[0] = bvor(.local_3, 2);
      .local_4 = bvor((.local_4 * 2), bvand(.param_1[0], 1));
    }
    .local_2 = (.local_2 + 2);
  }
  .param_1[1024] = bvor(.param_1[1024], 1);
  .ret_0 = .local_4;
}

$lentry LEFT_func6;
$rentry RIGHT_func6;
requires ($L(.param_1) == $R(.param_1));
ensures ($L(.param_1) == $R(.param_1));
ensures ($L(.ret_0) == $R(.ret_0));

