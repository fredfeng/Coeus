declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func7(int[int] .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  int .local_4;
  int .local_5;
  .local_3 = (12000000 * 32);
  .local_4 = (.local_3 / .param_2);
  if ((.local_4 == 0))
  {
    .local_4 = 1;
  }
  .local_5 = 0;
  while (((.local_4 >= 512) && (.local_5 < 7)))
  {
    if ((.local_5 < 7))
    {
      .local_4 = (.local_4 / 4);
      .local_5 = (.local_5 + 1);
    }
  }
  if ((.local_5 >= 7))
  {
    .local_4 = 51;
  }
  .param_1[3] = 128;
  .param_1[2] = 0;
  .param_1[1] = bvor((.local_5 * 2), (.local_4 / 256));
  .param_1[0] = bvand(.local_4, 255);
  .param_2 = bvshr((.local_3 / .local_4), (.local_5 * 2));
  .ret_0 = .param_2;
}

procedure RIGHT_func7(int[int] .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  int .local_4;
  int .local_5;
  .local_3 = (12000000 * 32);
  .local_4 = (.local_3 / .param_2);
  if ((.local_4 == 0))
  {
    .local_4 = 1;
  }
  .local_5 = 0;
  while (((.local_4 >= 512) && (.local_5 < 7)))
  {
    if ((.local_5 < 7))
    {
      .local_4 = (.local_4 / 4);
      .local_5 = (.local_5 + 1);
    }
  }
  if ((.local_5 >= 7))
  {
    .local_4 = 51;
  }
  .param_1[3] = 128;
  .param_1[2] = 0;
  .param_1[1] = bvor((.local_5 * 2), (.local_4 / 256));
  .param_1[0] = bvand(.local_4, 255);
  .param_2 = bvshr((.local_3 / .local_4), (.local_5 * 2));
  .ret_0 = .param_2;
}

$lentry LEFT_func7;
$rentry RIGHT_func7;
requires ($L(.param_1) == $R(.param_1));
requires ($L(.param_2) == $R(.param_2));
ensures ($L(.param_1) == $R(.param_1));
ensures ($L(.ret_0) == $R(.ret_0));

