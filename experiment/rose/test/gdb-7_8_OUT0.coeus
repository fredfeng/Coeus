declare int bvand(int, int);
declare int bvor(int, int);
declare int bvxor(int, int);
declare int bvnot(int);
declare int bvshl(int, int);
declare int bvshr(int, int);

procedure LEFT_func8(int .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  .local_3 = (.param_1 % 10000000);
  .param_1 = (.param_1 / 10000000);
  .local_4 = 0;
  .local_5 = 0;
  while ((.local_5 < 4))
  {
    .local_3 = bvor((.local_3 * 256), (.param_2 / 16777216));
    .param_2 = (.param_2 * 256);
    .local_4 = bvor((.local_4 * 256), (.local_3 / 10000000));
    .local_3 = (.local_3 % 10000000);
    .local_5 = (.local_5 + 1);
  }
  .param_2 = .local_4;
  if (((.param_1 > 1) || ((.param_1 == 1) && (.param_2 >= 3506716800))))
  {
    .ret_0 = 0;
  }
  else
  {
    if (((.param_1 == 0) && (.param_2 < 3506716800)))
    {
      .ret_0 = 0;
    }
    else
    {
      .local_6 = (.param_2 - 3506716800);
      if ((.local_6 <= 0))
      {
        .ret_0 = 0;
      }
      else
      {
        .ret_0 = .local_6;
      }
    }
  }
}

procedure RIGHT_func8(int .param_1, int .param_2) returns (int .ret_0)
{
  int .local_3;
  int .local_4;
  int .local_5;
  int .local_6;
  .local_3 = (.param_1 % 10000000);
  .param_1 = (.param_1 / 10000000);
  .local_4 = 0;
  .local_5 = 0;
  while ((.local_5 <= 3))
  {
    .local_3 = bvor((.local_3 * 256), (.param_2 / 16777216));
    .param_2 = (.param_2 * 256);
    .local_4 = bvor((.local_4 * 256), (.local_3 / 10000000));
    .local_3 = (.local_3 % 10000000);
    if (((1 + .local_5) <= 3))
    {
      .local_3 = bvor((.local_3 * 256), (.param_2 / 16777216));
      .param_2 = (.param_2 * 256);
      .local_4 = bvor((.local_4 * 256), (.local_3 / 10000000));
      .local_3 = (.local_3 % 10000000);
    }
    .local_5 = (.local_5 + 2);
  }
  .param_2 = .local_4;
  if (((.param_1 > 1) || ((.param_1 == 1) && (.param_2 >= 3506716800))))
  {
    .ret_0 = 0;
  }
  else
  {
    if (((.param_1 == 0) && (.param_2 < 3506716800)))
    {
      .ret_0 = 0;
    }
    else
    {
      .local_6 = (.param_2 - 3506716800);
      if ((.local_6 <= 0))
      {
        .ret_0 = 0;
      }
      else
      {
        .ret_0 = .local_6;
      }
    }
  }
}

$lentry LEFT_func8;
$rentry RIGHT_func8;
requires ($L(.param_1) == $R(.param_1));
requires ($L(.param_2) == $R(.param_2));
ensures ($L(.ret_0) == $R(.ret_0));

